{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2023-08-08T00:18:48.722888+00:00",
  "repo": "Haivision/srt-rfc",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "Priority: Low",
      "description": null,
      "color": "009800"
    },
    {
      "name": "Epic",
      "description": "",
      "color": "c904b5"
    }
  ],
  "issues": [
    {
      "number": 7,
      "id": "MDU6SXNzdWU1NjgwNjI3MDI=",
      "title": "Congestion Warning: missing information",
      "url": "https://github.com/Haivision/srt-rfc/issues/7",
      "state": "CLOSED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "_Congestion Warning_  control packet comes from UDT, but we need to explain it as the point of SRT view.",
      "createdAt": "2020-02-20T05:35:03Z",
      "updatedAt": "2021-02-15T02:24:00Z",
      "closedAt": "2021-02-15T02:24:00Z",
      "comments": [
        {
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "body": "Then, this can be closed.",
          "createdAt": "2021-02-15T02:24:00Z",
          "updatedAt": "2021-02-15T02:24:00Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "MDU6SXNzdWU1NjgwNjI5NjQ=",
      "title": "Drop Request: missing information",
      "url": "https://github.com/Haivision/srt-rfc/issues/8",
      "state": "CLOSED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "_Drop Request_ control packet comes from UDT, but we need to explain it as the point of SRT view.",
      "createdAt": "2020-02-20T05:35:54Z",
      "updatedAt": "2021-02-19T11:13:58Z",
      "closedAt": "2021-02-19T11:13:58Z",
      "comments": []
    },
    {
      "number": 9,
      "id": "MDU6SXNzdWU1NjgwNjMyNDU=",
      "title": "Peer Error: missing information",
      "url": "https://github.com/Haivision/srt-rfc/issues/9",
      "state": "CLOSED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "_Peer Error_ control packet comes from UDT, but we need to explain it as the point of SRT view.",
      "createdAt": "2020-02-20T05:36:52Z",
      "updatedAt": "2021-02-19T11:13:58Z",
      "closedAt": "2021-02-19T11:13:58Z",
      "comments": []
    },
    {
      "number": 11,
      "id": "MDU6SXNzdWU1NjgzMTc4NTk=",
      "title": "Review Handshake fields",
      "url": "https://github.com/Haivision/srt-rfc/issues/11",
      "state": "OPEN",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The \"Connection Type\" field of the handshake is more a \"Handshake Type\"\r\nInduction / Conclusion / Wavehand, etc.",
      "createdAt": "2020-02-20T13:55:01Z",
      "updatedAt": "2020-02-20T13:55:01Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 15,
      "id": "MDU6SXNzdWU1NzM3MDA2Nzg=",
      "title": "Clarify terms",
      "url": "https://github.com/Haivision/srt-rfc/issues/15",
      "state": "CLOSED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- [x] check whether [ \"play time\" definition ](https://github.com/Haivision/srt-rfc/blame/master/draft-sharabayko-mops-srt.md#L559)is correct or not in the added parenthesis.  \r\n - [ ]  clarify [how the sampling of latency](https://github.com/Haivision/srt-rfc/blame/master/draft-sharabayko-mops-srt.md#L561) is possible. If it is not required for the interoperability, the sampling method should be a separate example in the draft (or just described as high level recommendation to do sampling with RTT, bandwidth...). \r\n - [ ] Is [125%](https://github.com/Haivision/srt-rfc/blame/master/draft-sharabayko-mops-srt.md#L571) mandatory requirement for SRT implementations to work and interoperate? This is just a question for future consideration of how normative language should be used throughout the draft.",
      "createdAt": "2020-03-02T03:59:09Z",
      "updatedAt": "2021-02-22T10:00:23Z",
      "closedAt": "2021-02-22T10:00:23Z",
      "comments": [
        {
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "body": "#83 is about the first issue only, since the rest two items are outdated while updating RFC.",
          "createdAt": "2021-02-17T12:20:45Z",
          "updatedAt": "2021-02-17T12:20:45Z"
        }
      ]
    },
    {
      "number": 34,
      "id": "MDU6SXNzdWU1Nzc2ODIwNTU=",
      "title": "unresolved issue by #33",
      "url": "https://github.com/Haivision/srt-rfc/issues/34",
      "state": "CLOSED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- [x] Author's organization (https://github.com/Haivision/srt-rfc/blame/master/draft-sharabayko-mops-srt.md#L29): different?\r\n - [x] Reference for specific numbers (https://github.com/Haivision/srt-rfc/blame/master/draft-sharabayko-mops-srt.md#L157): is there any reference such as a conference paper?\r\n",
      "createdAt": "2020-03-09T06:12:55Z",
      "updatedAt": "2021-02-18T09:17:04Z",
      "closedAt": "2021-02-18T09:17:04Z",
      "comments": [
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "1. Jean is employed by Haivision (Canada), while we are by the German branch.\r\n2. The second link now points to a different place. Was it regarding UDT?",
          "createdAt": "2020-03-09T09:08:46Z",
          "updatedAt": "2020-03-09T09:08:46Z"
        },
        {
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "body": "> 2. The second link now points to a different place. Was it regarding UDT?\r\n\r\nthat's my mistake. It's not L104, it's about L157. I fixed the link.\r\n\r\n>This move increased the end-to-end \r\nlatency of live streaming to over 30 seconds, which makes it unattractive for many \r\nuse cases. Over time, the industry optimized these delivery methods, bringing the \r\nlatency down to 3 seconds.  ",
          "createdAt": "2020-03-09T09:35:58Z",
          "updatedAt": "2020-03-09T09:35:58Z"
        },
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "Ok, I see. Unsupported numbers, taken from the head. It is bad, but let it be so.",
          "createdAt": "2020-03-09T09:48:40Z",
          "updatedAt": "2020-03-09T09:48:40Z"
        },
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "I've corrected Jean's organization to the right one in the current version, but we have different organizations.",
          "createdAt": "2021-02-12T13:44:15Z",
          "updatedAt": "2021-02-12T13:44:15Z"
        }
      ]
    },
    {
      "number": 39,
      "id": "MDU6SXNzdWU2MjkyMjU3ODY=",
      "title": "Review the condition of dropping packets at the sender side",
      "url": "https://github.com/Haivision/srt-rfc/issues/39",
      "state": "CLOSED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "In RFC, see Too-Late Packet Drop section, we currently have the following:\r\n\"In the SRT, when Too-Late Packet Drop is enabled, and a packet timestamp is older than 125% of the SRT latency, it is considered too late to be delivered and may be dropped by the sender. However, the sender keeps packets for at least 1 second in case the SRT latency is not enough for a large RTT (that is, if 125% of the SRT latency is less than 1 second).\"\r\n\r\nThis requires more precise definition to be aligned with the implementation.",
      "createdAt": "2020-06-02T13:55:36Z",
      "updatedAt": "2021-03-11T08:38:33Z",
      "closedAt": "2021-03-11T08:38:33Z",
      "comments": []
    },
    {
      "number": 40,
      "id": "MDU6SXNzdWU2MzUyMDA2MDk=",
      "title": "Roadmap: Finishing the first version of RFC for editorial review",
      "url": "https://github.com/Haivision/srt-rfc/issues/40",
      "state": "CLOSED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mbakholdina"
      ],
      "labels": [],
      "body": "- [x] Estimate an effort required to finish the first version of RFC\r\n\r\nToDo:\r\n- [x] Review the suggestions by Joonwoong (Maxim),\r\n- [ ] Congestion Control section (~ 3-5 days, Maria),\r\n        - SRT provides mechanisms for CC (ARQ, ACK, statistics),\r\n        - Any CC algorithm may be integrated as a separate module,\r\n        - The main idea of the currently used CC algorithm without giving too much details,\r\n        - Briefly about the modification done on top of UDT CC.\r\n- [ ] Encryption section (Justin, Maxim),\r\n       - https://github.com/Haivision/srt-rfc/pull/41 \r\n       - #47\r\n- [ ] Learn more about possible conflict of interests with regards to IETF vs SRT community IPR policy (Maria),\r\n- [ ] Submit RFC for the editorial review (Joonwoong)\r\n\r\nFor the second iteration (create a separate task for this):\r\n- Review and improve handshakes section,\r\n- Review and improve acknowledgements section",
      "createdAt": "2020-06-09T07:58:50Z",
      "updatedAt": "2020-10-14T13:16:21Z",
      "closedAt": "2020-08-11T09:31:36Z",
      "comments": [
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "Duplicate of #49. Closing.",
          "createdAt": "2020-08-11T09:31:36Z",
          "updatedAt": "2020-08-11T09:31:36Z"
        }
      ]
    },
    {
      "number": 42,
      "id": "MDU6SXNzdWU2NTY2MTM3NTU=",
      "title": "Review the suggestions by Joonwoong",
      "url": "https://github.com/Haivision/srt-rfc/issues/42",
      "state": "CLOSED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "maxsharabayko"
      ],
      "labels": [],
      "body": "Review the suggestions by Joonwoong\r\n[draft review for ISE 2020-05-27.txt](https://github.com/Haivision/srt-rfc/files/4946280/draft.review.for.ISE.2020-05-27.txt)\r\n",
      "createdAt": "2020-07-14T13:30:20Z",
      "updatedAt": "2020-10-14T13:17:04Z",
      "closedAt": "2020-07-27T11:45:14Z",
      "comments": []
    },
    {
      "number": 43,
      "id": "MDU6SXNzdWU2NjE1MDUzNzA=",
      "title": "[RFC] Improve Congestion Control section",
      "url": "https://github.com/Haivision/srt-rfc/issues/43",
      "state": "CLOSED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mbakholdina"
      ],
      "labels": [],
      "body": "Improve Congestion Control section:\r\n- SRT provides mechanisms for CC (ARQ, ACK, statistics),\r\n- Any CC algorithm may be integrated as a separate module,\r\n- 2 modes of CC: live and file,\r\n- The main idea of the currently used CC algorithm without giving too much details,\r\n- Briefly about the modification done on top of UDT CC.\r\n\r\nCode is [here](https://github.com/Haivision/srt/blob/master/srtcore/congctl.cpp).\r\nArticle on CookBook is [here](https://srtlab.github.io/srt-cookbook/protocol/congestion-control/).\r\n",
      "createdAt": "2020-07-20T08:00:35Z",
      "updatedAt": "2020-10-14T13:15:50Z",
      "closedAt": "2020-09-07T15:13:17Z",
      "comments": []
    },
    {
      "number": 44,
      "id": "MDU6SXNzdWU2NjE1MzE5NDE=",
      "title": "Describe Packets Receiving Rate of ACK",
      "url": "https://github.com/Haivision/srt-rfc/issues/44",
      "state": "OPEN",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Describe how \"Packets Receiving Rate\" and \"Receiving Rate\" fields of the ACK control packet are formed.",
      "createdAt": "2020-07-20T08:29:24Z",
      "updatedAt": "2020-07-20T08:29:24Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 45,
      "id": "MDU6SXNzdWU2NjE1MzI4MTE=",
      "title": "Describe Media Stream Message",
      "url": "https://github.com/Haivision/srt-rfc/issues/45",
      "state": "OPEN",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See the Technical Overview\r\n\r\n> Media Stream Message (MSmsg)\r\nThe Media Stream message is formed from the SRT media stream (data) packets with some\r\nelements of the SRT header used for the cryptography. An SRT header already carries a 32-bit\r\npacket sequence number that is used for the cipher\u2018s counter (ctr), with 2 bits taken from the\r\nheader\u2018s message number (which is thereby reduced to 27 bits) for the encryption key\r\n(odd/even) indicator. Note that the message number field is used when messages larger than\r\nthe MTU are send, which is not the case for TS/SRT so the reduction to 27 bits is without\r\nconsequence.",
      "createdAt": "2020-07-20T08:30:24Z",
      "updatedAt": "2020-07-20T08:30:24Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 47,
      "id": "MDU6SXNzdWU2NzY2OTIyMjk=",
      "title": "[RFC] Rework the Encryption section",
      "url": "https://github.com/Haivision/srt-rfc/issues/47",
      "state": "CLOSED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "maxsharabayko"
      ],
      "labels": [],
      "body": "Joonwoong shared updates on the encryption section. Process them:\r\n\r\nI read thorough the encryption section again to find whether there are any paragraphs or figures to be removed. My review results are in the attached text file (revised encryption section for RFC draft) and pdf file (for you to check which part I think could be removed at this time). In fact, we can live without most of figures other than packet structures, which is good thing, I guess. For the text, I already removed some of them last time, but excluded a bit more at this time. Overall, most text, however, to be remained\u2026\r\n\r\nI\u2019ll try to add reference for crypto algorithms/protocols\r\n\r\n[[SRT_RFC]_Encryption_section_.zip](https://github.com/Haivision/srt-rfc/files/5061314/SRT_RFC._Encryption_section_.zip)\r\n",
      "createdAt": "2020-08-11T08:39:46Z",
      "updatedAt": "2020-10-14T13:15:30Z",
      "closedAt": "2020-09-09T11:26:22Z",
      "comments": [
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "@maxsharabayko Please insert the following missing references\r\n\r\nclause 5.1, 8th paragraph (references added) \r\n\r\nThe KEK is generated by a password-based key generation function (PBKDF2) {{RFC8018}}, which uses the passphrase, a number of iterations (2048), a keyed-hash (HMAC-SHA1) {{RFC2104}}, and a length KEYLEN. The PBKDF2 function hashes the passphrase to make a long string, by repetition or padding. The number of iterations is based on how much time can be given to the process without it becoming disruptive. \r\n\r\nclause 5.2.9, 3rd paragraph (references added) \r\n\r\nThe shared secret can be pre-shared; password derived PKCS5 {{RFC8018}}; distributed using a proprietary mechanism, or by using a standard key distribution mechanism such as GDOI {{RFC3547}} or MIKEY {{RFC3830}}. \r\n\r\nclause 5.2.1, 2nd paragraph (references added, and last sentence deleted) \r\n\r\nIntegrity protection might eventually be achieved with an Authenticated Encryption with Associated Data (AEAD) cipher such as AES-CCM {{SP800-38C}}or AES-GCM {{SP800-38D}}. \r\n\r\nNEW REFERENCES\r\n\r\n```\r\n[SP800-38C]\r\n  SP800-38C:\r\n    title: Recommendation for Block Cipher Modes of Operation: the CCM Mode for Authentication and Confidentiality\r\n    author:\r\n      name: Morris Dworkin\r\n      ins: M. Dworkin\r\n    date: July, 2007\r\n``` \r\n\r\n```\r\n[SP800-38D]\r\n  SP800-38D:\r\n    title: Recommendation for Block Cipher Modes of Operation: Galois/Counter Mode (GCM) and GMAC\r\n    author:\r\n      name: Morris Dworkin\r\n      ins: M. Dworkin\r\n    date: November, 2007\r\n```",
          "createdAt": "2020-08-25T09:59:48Z",
          "updatedAt": "2020-08-25T09:59:48Z"
        }
      ]
    },
    {
      "number": 48,
      "id": "MDU6SXNzdWU2NzY2OTI0OTM=",
      "title": "Improve handshake description",
      "url": "https://github.com/Haivision/srt-rfc/issues/48",
      "state": "OPEN",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "maxsharabayko"
      ],
      "labels": [],
      "body": "The handshaking description does not provide enough information to actually implement it. Needs to be improved.",
      "createdAt": "2020-08-11T08:40:10Z",
      "updatedAt": "2020-10-14T13:15:03Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 49,
      "id": "MDU6SXNzdWU2NzY3MjQxNDQ=",
      "title": "RFC - Prepare for Editorial Review",
      "url": "https://github.com/Haivision/srt-rfc/issues/49",
      "state": "CLOSED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mbakholdina"
      ],
      "labels": [
        "Epic"
      ],
      "body": "Finishing the first version of RFC before submitting for editorial review.\r\n\r\n- [x] Estimate an effort required to finish the first version of RFC\r\n\r\nTODO (version 01):\r\n- [x] Review the suggestions by Joonwoong (Maxim),\r\n- [x] Congestion Control section (~ 3-5 days, Maria),\r\n        - SRT provides mechanisms for CC (ARQ, ACK, statistics),\r\n        - Any CC algorithm may be integrated as a separate module,\r\n        - The main idea of the currently used CC algorithm without giving too much details,\r\n        - Briefly about the modification done on top of UDT CC.\r\n- [x] Document RTT estimation,\r\n- [x] Encryption section (Justin, Maxim),\r\n       - https://github.com/Haivision/srt-rfc/pull/41 \r\n       - #47\r\n- [x] Fix broken links,\r\n- [x] Keep-alive packet description - an issue with having ??? in multiple places. Check the whole document,\r\n- [x] Check if there are remaining TODOs or ?? in the text,\r\n- [x] Changelog \r\n\r\nTODO (version 02):\r\n- [x] Congestion Control section,\r\n- [x] Review of changes introduced in version 01 by SKT (RTT, Encryption, improved Handshakes Messages, etc.)\r\n- [x] Review of Congestion Control section by Joonwoong\r\n- [x] Changelog\r\n- [x] Security Considerations #64\r\n- [x] Fix weight definition (smaller priority -> higher weight) in [Group Extension](https://tools.ietf.org/html/draft-sharabayko-mops-srt-01#section-3.2.1.4)\r\n- [x] On the SRT RFC, Jean's company should probably be \"Haivision Systems, Inc.\"\r\n- [x] RTT: using ACK-ACKACK pairs -> using ACK/ACKACK pairs; see also https://github.com/mbakholdina/srt-internal/issues/2; delete the use of \"smoothed\"; write that EWMA is applied;\r\n- [x] -02 version should be -00 version with new title for ISE track, as ISE editor suggested. MOPS?\r\n- [x] Learn more about possible conflict of interests with regards to IETF vs SRT community IPR policy\r\n- [x] RTT estimation -> RTT estimate, see #82 \r\n- [x] Maxim's PR #79 \r\n- [x] Configuring MaxBW: In the table the column with the formula is missing.\r\n- [x] Data Transmission Modes -> we have 2 modes: message and buffer; clear explanation which mode should be used for live streaming and file/message transmission.\r\n- [x] Review changelog at the very end.\r\n\r\nConsider before submission:\r\n- [x] Changing workgroup from MOPS to \"Network Working Group\" potentially requires to change the name of the document sharabayko-mops-srt. It can therefore block update to version 03, because it will not be considered as a new version, but as a new document. To be confirmed.",
      "createdAt": "2020-08-11T09:28:41Z",
      "updatedAt": "2021-03-10T11:03:14Z",
      "closedAt": "2021-03-10T11:03:14Z",
      "comments": [
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "Review of Congestion Control section by Joonwoong:\n\nHi Maria\n\nI hope you guys had a good vacation.\n\nI think the congestion control part is good, and only a few minior editorial comments are included in the attached document (please check the memo with highlighted texts in congestion control section).\n\nAdditionally, I\u2019ve checked normative languages, and I suggest three minor improvements in the below.\n\nCould you please update and merge all fixes and share it with all of us?\n\n6.3.1.\n\n1st pharagraph, 2nd sentence\n\nmust -> MUST\n\n4.3.2.2\n\nResponder:, 2.Attention\n\nshall -> SHALL\n\n*if it is mandatory to send the empty CONCLUSION. if not, \"should\" might work.\n\n4.8\n\n3rd pharagraph, 1st sentence\n\nshould -> SHOULD\n\n \nthanks\njoonwoong\n\n[https://app.zenhub.com/files/218066224/8ba9b087-f727-43a9-8f68-d3885e65ce33/download](https://app.zenhub.com/files/218066224/8ba9b087-f727-43a9-8f68-d3885e65ce33/download)",
          "createdAt": "2020-10-15T13:39:51Z",
          "updatedAt": "2020-10-27T13:58:55Z"
        },
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "@maxsharabayko \r\nQuestion regarding [Group Membership Extension](https://haivision.github.io/srt-rfc/draft-sharabayko-mops-srt.html#name-group-membership-extension)\r\n\r\nPlease reply when you have time.\r\n\r\nGroupID: 32 bits.\r\nThe identifier of a group whose members include the sender socket that is making a connection. The target socket that should interpret **it (what?)** should belong to the corresponding group on **its side (which side?)** (or should create **one (what to create?)**, if it doesn't exist).",
          "createdAt": "2020-11-16T10:54:31Z",
          "updatedAt": "2020-11-16T11:24:24Z"
        },
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "The identifier of a group whose members include the sender socket that is making a connection. The target socket that should interpret it (**GroupID**) should belong to the corresponding group on its side (**which side? - target's side**) (or should create one (**what to create? - create a corresponding group**), if it doesn't exist).",
          "createdAt": "2020-11-20T11:18:22Z",
          "updatedAt": "2020-11-20T11:18:22Z"
        }
      ]
    },
    {
      "number": 54,
      "id": "MDU6SXNzdWU2ODU1MjU2MTE=",
      "title": "Handshake Extension Message: Group Membership",
      "url": "https://github.com/Haivision/srt-rfc/issues/54",
      "state": "CLOSED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "maxsharabayko"
      ],
      "labels": [],
      "body": "The Group Membership Handshake Extension section is missing.\r\nPlease fill using the following format:\r\n\r\n```\r\n#### Group Membership Extension\r\n~~~\r\n0                   1                   2                   3\r\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|                           Group ID                            |\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|     Type    |     Flags     |             Weight              |\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n~~~\r\n{: #fig-hsext-group title=\"Group Membership Extension Message\"}\r\nGroupID (32 bits):\r\n: This field ...\r\nwhere Group's Flags has the following structure:\r\n~~~\r\n0 1 2 3 4 5 6 7 \r\n+-+-+-+-+-+-+-+\r\n|             |\r\n+-+-+-+-+-+-+-+\r\n|   (zero)  |M|\r\n+-+-+-+-+-+-+-+\r\n~~~\r\n{: #fig-hsext-group-flags title=\"Group Membership Extension Flags\"}\r\n```",
      "createdAt": "2020-08-25T14:19:41Z",
      "updatedAt": "2020-10-14T13:15:50Z",
      "closedAt": "2020-08-25T14:50:43Z",
      "comments": []
    },
    {
      "number": 55,
      "id": "MDU6SXNzdWU2ODU1Mjk5Mjg=",
      "title": "Handshake Extension Message: Packet Filter",
      "url": "https://github.com/Haivision/srt-rfc/issues/55",
      "state": "OPEN",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ethouris"
      ],
      "labels": [
        "Priority: Low"
      ],
      "body": "The Packet Filter Handshake Extension section is missing.\r\nPlease fill using the following format:\r\n\r\n```\r\n#### Packet Filter Extension\r\n~~~\r\n0                   1                   2                   3\r\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|                           Field01                            |\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|     Field    |     Field     |             Field              |\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n~~~\r\n{: #fig-hsext-packet-filter title=\"Packet Filter Extension Message\"}\r\n\r\nField01 (32 bits):\r\n: This field ...\r\n\r\n```",
      "createdAt": "2020-08-25T14:24:41Z",
      "updatedAt": "2021-02-12T13:37:00Z",
      "closedAt": null,
      "comments": [
        {
          "author": "ethouris",
          "authorAssociation": "COLLABORATOR",
          "body": "\r\nLet me try to consolidate the minimum text required for the Packet Filter and FEC.\r\n\r\n1. Field network syntax: identical as for Socket ID.\r\n\r\n2. Packet Filter configuration syntax (string formatting):\r\n\r\nThere are two levels:\r\n\r\nA. Packet Filter configuration syntax in general\r\n\r\nHow this string is interpreted depends on the filter itself. However, there is an obligatory\r\ngeneral syntax:\r\n```\r\n<filter-type>,<key>:<value>[,...]\r\n```\r\nThe parts of this syntax are separated by commas. The first part is the name of \r\nthe filter. This is followed by one or more key:value pairs, the interpretation \r\nof which depends on the filter type.\r\n\r\nB. Keys used for \"fec\" filter type\r\n\r\n* **cols**: The number of columns in your FEC matrix (which is the equivalent of \r\nthe size of each row). This parameter is obligatory and must be a positive \r\nnumber >=2.\r\n\r\n* **rows**: The number of rows in your FEC matrix (which is the equivalent of \r\nthe size of each column). This parameter is optional and defaults to 1. If the \r\nvalue is >=2, this corresponds to the exact number of rows. Beside this, two\r\nother special cases are allowed:\r\n\r\n   * 1: in this case you have a row-only configuration (no columns)\r\n\r\n   * -N (where N >= 2): column-only configuration. In this case N designates\r\nthe exact size of a column, but the FEC control packet for rows will not be\r\ngenerated (in other words, the **cols** parameter designates in this case only\r\na number of columns in one series)\r\n\r\n* **layout**: The format of the FEC matrix. The possible values are:\r\n\r\n    * **even**: block aligned (default) - columns are arranged in a solid matrix; \r\n    the first sequence numbers (SNbase) are all contained in one row.\r\n\r\n    * **staircase**: non-block aligned - column starting points are staggered; \r\n    the first sequence numbers (SNbase) have an offset equivalent to R+1.\r\n\r\n* **arq**: Optional use of the Automatic Repeat Request (ARQ) protocol. The \r\npossible values are:\r\n\r\n    * **always**: ARQ is done in parallel with FEC (a loss is always reported \r\n    immediately once detected in SRT).\r\n\r\n    * **onreq**: ARQ is allowed, but a loss is only reported when FEC fails to \r\n    rebuild, at the moment when an incoming packet has a sequence number that \r\n    exceeds the last in one of the column groups; such a packet, if still lacking \r\n    at that moment, is considered no longer recoverable by FEC.\r\n\r\n    * **never**: ARQ is not done at all. Packets not recovered by FEC undergo \r\n    TLPKTDROP, just like those that fail ARQ recovery in a conventional SRT \r\n    exchange.\r\n",
          "createdAt": "2020-08-25T16:16:13Z",
          "updatedAt": "2020-08-25T16:16:13Z"
        }
      ]
    },
    {
      "number": 56,
      "id": "MDU6SXNzdWU2ODU1MzA5NTg=",
      "title": "Handshake Extension Message: Congestion Control",
      "url": "https://github.com/Haivision/srt-rfc/issues/56",
      "state": "OPEN",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "ethouris"
      ],
      "labels": [
        "Priority: Low"
      ],
      "body": "The Congestion Control Handshake Extension section is missing.\r\nPlease fill using the following format:\r\n\r\n```\r\n#### Congestion Control Extension\r\n~~~\r\n0                   1                   2                   3\r\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|                           Field01                            |\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n|     Field    |     Field     |             Field              |\r\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n~~~\r\n{: #fig-hsext-congestion title=\"Congestion Control Extension Message\"}\r\n\r\nField01 (32 bits):\r\n: This field ...\r\n\r\n```",
      "createdAt": "2020-08-25T14:25:55Z",
      "updatedAt": "2020-10-14T13:15:05Z",
      "closedAt": null,
      "comments": [
        {
          "author": "ethouris",
          "authorAssociation": "COLLABORATOR",
          "body": "Still valid? The \"Congestion Control\" extension looks merely the same as StreamID and others that are specified by a string.",
          "createdAt": "2020-09-04T11:52:12Z",
          "updatedAt": "2020-09-04T11:52:12Z"
        }
      ]
    },
    {
      "number": 58,
      "id": "MDU6SXNzdWU2ODcwNTQ1Njg=",
      "title": "Latency negotiation",
      "url": "https://github.com/Haivision/srt-rfc/issues/58",
      "state": "OPEN",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "maxsharabayko"
      ],
      "labels": [],
      "body": "The latency negotiation is not described in the RFC.",
      "createdAt": "2020-08-27T08:35:37Z",
      "updatedAt": "2020-08-27T08:35:37Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 59,
      "id": "MDU6SXNzdWU2ODgwNDc5OTA=",
      "title": "[RFC] Document RTT estimation",
      "url": "https://github.com/Haivision/srt-rfc/issues/59",
      "state": "CLOSED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mbakholdina"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2020-08-28T12:42:46Z",
      "updatedAt": "2020-10-14T13:15:51Z",
      "closedAt": "2020-09-02T16:59:56Z",
      "comments": []
    },
    {
      "number": 61,
      "id": "MDU6SXNzdWU2OTE3Nzg0NTI=",
      "title": "Address comments after review of the version 01 by Mikolaj",
      "url": "https://github.com/Haivision/srt-rfc/issues/61",
      "state": "OPEN",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "maxsharabayko"
      ],
      "labels": [],
      "body": "- [x] Page 7:\r\n\r\nThe diagram on Figure 2 shows CIF mark though the contents is described as \"Packet Contents (depends on the packet type)\".\r\n\r\n- [ ] Page 10:\r\n\r\nVersion: You forgot to mention that per backward compatibility the caller must set always version 4 here for the induction\r\nhandshake, regardless of what version it currently supports. The listener must respond with version 5, if it supports\r\nversion 5 (or actually the highest version it supports). This is because of the existing implementations with version 4\r\nwhere the listener copies the exact value passed by the caller, so passing version 4 is the only possibility to recognize it.\r\nIn the conclusion handshake the caller side should this time show the real version it supports.\r\n\r\n- [ ] Page 11:\r\n\r\nExtension Field (16 bits):\r\n\r\nThe listener sets here the value designated as SRT MAGIC CODE, 0x4A17. This is necessary to make sure that the listener\r\nthat responds with version 5 is really an SRT listener supporting handshake version 5, not any independent derivative\r\nwork of UDT library that has also increased version number to 5. The value is an attempt to encode the \"Haivision\" name\r\nwith hex ciphers, initially it was 0x4A171510, but the number was cut to 16 bits due to the need of adding the encryption\r\nfield.\r\n\r\nNot that all I have written here deserves to be put into the description, just wanted to make you get the motivation :)\r\n\r\nHANDSHAKE TYPE.\r\n\r\nYou haven't read the comment attached to the symbols, especially for DONE:\r\n\r\n    URQ_DONE = -3,      // Special value used only in state-switching, to state that nothing should be sent in response\r\n\r\nI personally advice that you put these types in the following order:\r\n\r\nINDUCTION\r\nWAVEAHAND\r\nCONCLUSION\r\nAGREEMENT\r\n\r\nand DONE should not be in this list at all.\r\n\r\n- [ ] Page 20:\r\n\r\nReally you don't have to paste the whole layout of the control packet there. You can refer to the general layout\r\ndescription of the control packet and the TSI (type-specific information) and CIF fields. It should be also enough\r\nif you describe the overall rules for the control packet, that is:\r\n\r\n1. For standard control packets, the command type is set in \"Control type\" field and \"Reserved\" is 0.\r\n\r\n2. For extended control packets, the command type is UMSG_EXT (0x7FFF) and the command type is in \"Reserved\".\r\n\r\nHaving that, you should be clear for, e.g., UMSG_KEEPALIVE that you only need to describe the TSI and CIF fields\r\nas, well, filled with zeros.\r\n\r\nIn control packets the timestamp is usually the time when the packet was sent, and the destination socket ID is\r\nalways the same. It is necessary to dispatch correctly the packet to the socket to which it is destined, if multiple\r\nsockets are bound to the same port.\r\n\r\nAlso in other packets: the TSI field is usually in use, and if not, you should specify that it must be zero.\r\n\r\n\r\n- [x] Page 21:\r\n\r\nLAPSN: Do you have the definition of \"acknowledgement\" anywhere and specified that the \"last acknowledged packet\"\r\nis the last packet received as contiguous (there is no loss between this packet and the previous acknowledged packet)?\r\n\r\n- [x] Page 22:\r\n\r\nIt's better to say \"range of lost packets\" not \"List of lost packets\" because the \"list\" is whole contents of\r\nUMSG_LOSSREPORT type message.\r\n\r\n- [x] Page 24:\r\n\r\nThe TSI field doesn't contain the ACK sequence number, but the ACK Journal, the same exactly value as it is\r\ndescribed in TSI by the UMSG_ACK message.\r\n\r\n- [ ] Page 24:, 4.2.1 (Message Mode)\r\n\r\nI'd mention here that the Message Mode is a concept used by the SCTP protocol, whereas the Stream Mode is the\r\nmode used by TCP protocol.\r\n\r\n- [ ] Page 25:\r\n\r\nInitiator is the side that first sends the handshake message of type URQ_CONCLUSION, not \"extended handshake\".\r\n\r\n- [ ] Page 27:\r\n\r\nThe fragment describing the encryption configuration advertisement is mentioned kinda out-of-the-blue. I'd keep\r\nhere the shortest possible mention that there's the key length advertisement placed in this field and the whole\r\nprocedure will be described by the KMX process description. This as well should be moved to 4.3.1.1, as this\r\nadvertisement takes place exclusively in the induction phase (also waveahand, in case of rendezvous).\r\n\r\n- [x] Page 28:\r\n\r\n\"Encryption Field: Advertised cipher family and block size\"\r\n\r\nI'd enumerate here the possible values, including 0, which means that the value is not advertised.\r\n\r\n- [ ] Page 29:\r\n\r\nI'd really describe the cookie preparation process separately and then refer to it from both caller-listener\r\nhandshake process, as SYN cookie, and for rendezvous HSv5 and \"cookie contest\".\r\n\r\n- [ ] Page 35:\r\n\r\nThe diagram at Figure 17 makes a user a false impression that the latency is counted towards the reception\r\ntime. This actually isn't true - SRT latency is counted towards the EXPECTED RECEPTION TIME, which is calculated\r\nout of the connection start time and the packet's timestamp. To this time there's added the value of the\r\nlatency and this results in delivery time. Note also that the moment when the packet is to be ready to play\r\nand the moment when the application plays it, also exists, and it's a similar value as the one designated\r\nas \"Sending Delay\" (the value that is dependent on the timer accuracy, system performance, and thread layout).\r\n",
      "createdAt": "2020-09-03T08:53:16Z",
      "updatedAt": "2021-02-17T08:58:28Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 62,
      "id": "MDU6SXNzdWU2OTE4NjM3NzQ=",
      "title": "Create Timers section for RFC",
      "url": "https://github.com/Haivision/srt-rfc/issues/62",
      "state": "OPEN",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Create \"Timers\" section for RFC describing SYN, RTO, and other timers used in SRT. See [UDT draft](https://tools.ietf.org/html/draft-gg-udt-03#page-8) for a reference.\r\n\r\nOnce this section is written, the description of RTO timer currently done in Congestion Control section can be moved in Timers section with a proper reference.\r\n\r\nThere is a good description of timers by Maxim in CookBook. See [here](https://srtlab.github.io/srt-cookbook/protocol/events-and-timers/).",
      "createdAt": "2020-09-03T10:52:56Z",
      "updatedAt": "2021-02-12T13:33:31Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 64,
      "id": "MDU6SXNzdWU2OTMwMTU5OTQ=",
      "title": "Replace the security consideration section",
      "url": "https://github.com/Haivision/srt-rfc/issues/64",
      "state": "CLOSED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mbakholdina"
      ],
      "labels": [],
      "body": "Joonwoong investigated about security consideration section (there exists RFC for it), but the requirement is too broad and it is too much to consider the whole security aspects of SRT (including attacker models\u2026) for now.\r\nTherefore, we try with this concise version and will have to revisit if the reviewer is not happy with it later.\r\n\r\n**Suggested text:**\r\n\r\nSRT provides confidentiality of user data using stream ciphers as specified in {{Encryption}}, which is the only improvement of security upon UDP. That means other limitations from UDT remain as they are, and it needs to consider any security protection mechanisms at a upper layer depending its security requirements. Integrity protection of user data can also be supported as described in {{###Ciphers (AES-CTR)}}, and its usage details are out of scope for the present document.\r\n \r\nThe encryption feature of SRT requires some cautions. SEK needs to be changed with an appropriate refresh period, to avoid any issues which might be occurred by the use of long lived security keys. The shared secret for KEK generation needs to be carefully configured by a security officer, who is supposed to set security policies to force encryption and limit key size selection. Another aspects to consider is caching of KMmsg. When encryption and decryption of the same messages affects processing cost for sender or receiver, cached KMmsg could be retransmitted or checked before deciphering.",
      "createdAt": "2020-09-04T10:25:57Z",
      "updatedAt": "2020-11-30T11:57:07Z",
      "closedAt": "2020-11-30T11:57:07Z",
      "comments": [
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "TODO: remove reference to UDT (\"That means other limitations from UDT remain as they are...\").",
          "createdAt": "2020-09-21T10:02:00Z",
          "updatedAt": "2020-09-21T10:02:00Z"
        },
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "@maxsharabayko I've taken a look and it seems to be you are the best person to review this part. Could you please make your corrections, I'll update the section and then we will wait for possible notes or corrections from reviewer as Joonwoong is suggesting and make corrections.",
          "createdAt": "2020-10-23T14:57:43Z",
          "updatedAt": "2020-10-23T14:57:43Z"
        },
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "@maxsharabayko Reassigning to you.",
          "createdAt": "2020-11-03T11:12:33Z",
          "updatedAt": "2020-11-03T11:12:33Z"
        }
      ]
    },
    {
      "number": 67,
      "id": "MDU6SXNzdWU2OTMxNjE3NzI=",
      "title": "Fix the format in packet structure after Encryption section is merged",
      "url": "https://github.com/Haivision/srt-rfc/issues/67",
      "state": "CLOSED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mbakholdina"
      ],
      "labels": [],
      "body": "Fix the format in packet structure after Encryption section is merged:\r\n- Key Material Exchange\r\n- Stream ID Extension Message\r\n- Group Membership Extension",
      "createdAt": "2020-09-04T13:19:20Z",
      "updatedAt": "2020-10-14T13:15:31Z",
      "closedAt": "2020-09-10T08:57:58Z",
      "comments": []
    },
    {
      "number": 70,
      "id": "MDU6SXNzdWU2OTc2MzY1Mzg=",
      "title": "Specify what version of protocol the draft corresponds to",
      "url": "https://github.com/Haivision/srt-rfc/issues/70",
      "state": "OPEN",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It would be great to announce up high in spec what version this document draft refers to and how versioning will work in terms of forward and backward compatibility.\r\nThat was always a pain point with the HLS Pantos draft, and everyone still argues about version numbers and compatibility and requirements for what features need to exist in each version of the protocol.\r\nFor example, your current spec mentions version 4 and 5 of the protocol throughout,  but the IETF document tool works in a different version (for the draft) numbering of 00 and 01.",
      "createdAt": "2020-09-10T08:54:27Z",
      "updatedAt": "2020-09-10T08:54:36Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 71,
      "id": "MDU6SXNzdWU3MDg3MTkzMjQ=",
      "title": "Improve Data Transmission Modes section",
      "url": "https://github.com/Haivision/srt-rfc/issues/71",
      "state": "CLOSED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mbakholdina",
        "J-Rogmann"
      ],
      "labels": [],
      "body": "We've agreed to have only two modes: message and buffer, and describe separately which modes can be used for live streaming and file/message transmission.\r\n\r\nThrough the whole document there shouldn't be: in live mode, in file mode. Correct is:\r\n- in the case of live streaming. You could also say \"During live streaming . . .\" or \"When live streaming . . .\"\r\n- in the case of file/message transmission; \"During file transmission...\"\r\n\r\nApproved by Steve. One more comment: The expressions \"in case of\" and \"in the case of\" in English have a subtle difference when used. Not easy to explain, but \"in the case of\" usually sounds better. Not a big deal either way.",
      "createdAt": "2020-09-25T07:38:50Z",
      "updatedAt": "2021-03-08T11:51:26Z",
      "closedAt": "2021-03-08T11:51:26Z",
      "comments": [
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "@J-Rogmann \n\nThe issue with order flag https://github.com/Haivision/srt/issues/1433.\nThe meeting recording is available [here](https://web.microsoftstream.com/video/cab55b15-6639-44d6-a0de-aff52016f47f).",
          "createdAt": "2020-11-24T13:33:13Z",
          "updatedAt": "2020-11-24T13:33:13Z"
        },
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "@J-Rogmann, I've made a review for the PR #77 with live streaming use case. Could you please invest some time in it later next week so that this part is ready?\r\n\r\nNext step would be to write \"File/Message Transmission Use Case\" section, but it's of a low priority for now and we can move the task to March.\r\n\r\nI am saving your questions here so that we can have a separate meeting and discuss them later.\r\n\r\n## Use case file transmission - Summary\r\n- file transmission is possible in buffer or in message mode\r\n- buffer mode: \r\n  - not really recommended for (large) file transmission\r\n  - completely ignores PP flags and message numbers\r\n  - was designed for transmitting one file per connection\r\n  - the receiver buffer needs to be as big as the file to be transmitted\r\n  - receiver can't distinguish between two files\r\n  - open connection - transfer one file - close connection - open connection for next file ...\r\n- message mode:\r\n  - Application should split files into messages (of e.g. 1 MB size)\r\n  - If a file doesn't fit into one message, receiver buffer needs to be as big as the file. Therefore segmentation of files should be handled by application. These segments are then put into messages\r\n  - SRT protocol doesn't add anything to the segments, therefore the application needs to add information to which file the segments (which can span multiple messages) belong.\r\n  - When transmitting files, TSBPD is off and ordering of packets is handled by Order Flag on receiver side",
          "createdAt": "2021-02-12T13:02:42Z",
          "updatedAt": "2021-02-12T13:02:42Z"
        },
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "## TODO\r\n\r\n- [ ] It would be nice also to split Data Transmission Modes and Use Cases into separate sub-sections under the main section. We'd better tell in brief that except classic live streaming and file transmission use cases there are other alternatives like\r\n\r\n   > How would you segment the areas where SRT is used? Any unexpected applications?\r\nWe tend to call it glue, because SRT glues everything together. People use it for uncompressed AES67 audio only. There is this guy in Germany, who does machine analytics on the endpoints, and then just sends the metadata over SRT. Other people are doing multiple video links over one SRT connection by multiplexing with their custom multiplexer on top of it. There are so many different use cases\u2026 Somebody told me once: if TCP knew that in the future it would do mainly video, then it would have been like SRT. Nice description.\r\n\r\n   This information is taken from this [interview](https://blog.medialooks.com/it-glues-everything-together-an-interview-with-marc-cymontkowski-evangelist-of-srt/).\r\n\r\n- [ ] Consider renaming \"Live Streaming Use Case\" to \"Configuration for Live Streaming\".",
          "createdAt": "2021-02-15T11:23:36Z",
          "updatedAt": "2021-02-17T12:00:49Z"
        }
      ]
    },
    {
      "number": 72,
      "id": "MDU6SXNzdWU3MDg3MjI0NDk=",
      "title": "71",
      "url": "https://github.com/Haivision/srt-rfc/issues/72",
      "state": "CLOSED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-09-25T07:43:56Z",
      "updatedAt": "2021-02-22T15:49:44Z",
      "closedAt": "2021-02-22T15:49:44Z",
      "comments": []
    },
    {
      "number": 82,
      "id": "MDU6SXNzdWU4MDg2Nzc0MjQ=",
      "title": "Use RTT estimate instead of RTT estimation where appropriate",
      "url": "https://github.com/Haivision/srt-rfc/issues/82",
      "state": "CLOSED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mbakholdina"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2021-02-15T16:33:26Z",
      "updatedAt": "2021-03-04T12:06:27Z",
      "closedAt": "2021-03-04T12:06:27Z",
      "comments": []
    },
    {
      "number": 85,
      "id": "MDU6SXNzdWU4MTAzMDM1ODY=",
      "title": "Define socket ID ranges",
      "url": "https://github.com/Haivision/srt-rfc/issues/85",
      "state": "OPEN",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Define ranges of valid Socket ID values.\r\n\r\n- Value `0`. Reserved for handshake procedure. If the destination Socket ID is `0` (destination Socket ID unknown) the packet will be sent to the listening socket or to a socket that is in the rendezvous connection phase.\r\n\r\n- `[1; 2^30)`. Single socket ID range.\r\n- `(2^30; 2^31)`.  Group socket ID range. Effectively any positive number from `[1; 2^30)` with bit 30 set to 1.\r\n\r\nThe most significant bit 31 (sign bit) is left unused so that checking for a value <= 0 identifies an invalid socket ID.",
      "createdAt": "2021-02-17T15:48:28Z",
      "updatedAt": "2021-02-19T11:08:09Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 92,
      "id": "MDU6SXNzdWU4MjQ0NjkzMzM=",
      "title": "TODO list for next iteration of the SRT protocol RFC draft",
      "url": "https://github.com/Haivision/srt-rfc/issues/92",
      "state": "OPEN",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "## TODO List\r\n\r\n- [ ] Update \"Round-Trip Time Estimation\" section to describe the latest improvements - #107.\r\n- [ ] Minimum InputBW for \"Configuring Maximum Bandwidth\" section.\r\n- [ ] Review and improve handshakes section.\r\n- [ ] Review and improve \"Acknowledgement and Lost Packet Handling\" section - #108.\r\n- [ ] Consider adding sending and receiving algorithms description.\r\n- [ ] Add \"Timers\" section describing timers used in the SRT.\r\n- [ ] Look through the document and check whether there is a need to use initial capital letters for any terms and notations like it's done, e.g., for Timestamp-Based Packet Delivery and Too-Late Packet Drop.\r\n\r\n## Open Questions\r\n- [ ] The same style of noting variables.\r\n- [ ] The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL NOT\", \"SHOULD\",\r\n\"SHOULD NOT\", \"RECOMMENDED\", \"NOT RECOMMENDED\", \"MAY\", and \"OPTIONAL\" in this\r\ndocument are to be interpreted as described in BCP 14 {{RFC2119}} {{RFC8174}}\r\nwhen, and only when, they appear in all capitals, as shown here.\r\n- [ ] TODO acknowledge.\r\n- [ ] Version of SRT - #70.",
      "createdAt": "2021-03-08T11:28:46Z",
      "updatedAt": "2021-09-02T11:53:17Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 93,
      "id": "MDU6SXNzdWU4MjgwMDQ4MzI=",
      "title": "Fix idnits warnings",
      "url": "https://github.com/Haivision/srt-rfc/issues/93",
      "state": "CLOSED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The report can be found [here](https://www6.ietf.org/tools/idnits?url=https://www.ietf.org/archive/id/draft-sharabayko-srt-00.txt).\r\n\r\nHere are the complaints:\r\n\r\n```\r\n  Miscellaneous warnings:\r\n  ----------------------------------------------------------------------------\r\n\r\n  == Using lowercase 'not' together with uppercase 'MUST', 'SHALL', 'SHOULD',\r\n     or 'RECOMMENDED' is not an accepted usage according to RFC 2119.  Please\r\n     use uppercase 'NOT' together with RFC 2119 keywords (if that is what you\r\n     mean).\r\n     \r\n     Found 'MUST not' in this paragraph:\r\n     \r\n     The existing key values MUST not be extended, and MUST not differ\r\n     from those described in this section.\r\n\r\n  -- Found something which looks like a code comment -- if you have code\r\n     sections in the document, please surround them with '<CODE BEGINS>' and\r\n     '<CODE ENDS>' lines.\r\n\r\n\r\n  Checking references for intended status: Informational\r\n  ----------------------------------------------------------------------------\r\n\r\n  == Outdated reference: A later version (-34) exists of\r\n     draft-ietf-quic-http-33\r\n\r\n  -- Obsolete informational reference (is this intentional?): RFC 2898\r\n     (Obsoleted by RFC 8018)\r\n```",
      "createdAt": "2021-03-10T16:30:30Z",
      "updatedAt": "2021-03-11T08:36:04Z",
      "closedAt": "2021-03-11T08:36:04Z",
      "comments": [
        {
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "body": ">  == Outdated reference: A later version (-34) exists of\r\n>     draft-ietf-quic-http-33\r\n\r\nThis may be because it was updated while you were generating `.txt`\r\n\r\n>  -- Obsolete informational reference (is this intentional?): RFC 2898\r\n>     (Obsoleted by RFC 8018)\r\n\r\nI have looked through RFC 8018, then I couldn't find the reason not to use a new(?) one.",
          "createdAt": "2021-03-11T03:02:35Z",
          "updatedAt": "2021-03-11T03:02:35Z"
        }
      ]
    },
    {
      "number": 97,
      "id": "MDU6SXNzdWU5MzA2NDg0NDM=",
      "title": "Handshake Extension Message. What it is about?",
      "url": "https://github.com/Haivision/srt-rfc/issues/97",
      "state": "OPEN",
      "author": "nikandfor",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I'm implementing the protocol and now I'm making handshake part.\r\nI've received Handshake Extension Message from [canonical](https://github.com/Haivision/srt) implementation, responded with my 0.0.1 version and got rejected because of too low version.\r\n\r\nMy questions are:\r\n* Is it more a protocol or library version?\r\n* If it's a library version than why it disconnects according to it?\r\n* How it is intended to communicate between different implementations with different version \"lifecycle\"?\r\n* What should I reply to be able to communicate?\r\n\r\nAnd one more little note about extension messages.\r\nConstant SRT_CMD_CONGESTION has only one occurrence in the document. And it's not clear what it means from there.\r\nI've found some more info [here](https://github.com/Haivision/srt/blob/d9eefd8ae196c69b8df8b47b32ea361126dd9120/docs/features/handshake.md#congestion-controller) but I believe it should have it's own paragraph in the RFC. As well as SRT_CMD_FILTER.",
      "createdAt": "2021-06-26T08:40:29Z",
      "updatedAt": "2021-07-16T07:44:18Z",
      "closedAt": null,
      "comments": [
        {
          "author": "nikandfor",
          "authorAssociation": "NONE",
          "body": "It's also didn't said which bit endianness is used in the packets encoding.",
          "createdAt": "2021-06-27T07:51:12Z",
          "updatedAt": "2021-06-27T07:51:12Z"
        },
        {
          "author": "nikandfor",
          "authorAssociation": "NONE",
          "body": "What timestamp is used in Listener handshake packets?\r\n\r\nUntil Listener received conclusion packet connection is not established and it's better not to allocate any resources. So the Listener doesn't have connection establishment time that can be used as epoch time to timestamps.\r\n\r\nClient can use time when connection was initiated as epoch, but Listener can't.",
          "createdAt": "2021-06-27T10:31:14Z",
          "updatedAt": "2021-06-27T10:31:14Z"
        },
        {
          "author": "nikandfor",
          "authorAssociation": "NONE",
          "body": "Are message numbers started from 1?",
          "createdAt": "2021-06-27T14:48:00Z",
          "updatedAt": "2021-06-28T11:17:31Z"
        },
        {
          "author": "nikandfor",
          "authorAssociation": "NONE",
          "body": "Shutdown message doesn't contain information about last sequence number sent.\r\nOn the receivers side it's difficult to determine if we read all the data before closing the socket.",
          "createdAt": "2021-06-27T19:28:27Z",
          "updatedAt": "2021-06-27T19:28:27Z"
        },
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi @nikandfor \r\n> Is it more a protocol or library version?\r\n\r\nIt is both. Initially, it is the library version. However, the library also defines certain known behavior and some known features like bidirectional transmission, so it is also a protocol version.\r\nThe best would be to think about libsrt as a library defining the protocol.\r\n\r\n> How it is intended to communicate between different implementations with different version \"lifecycle\"?\r\n\r\nIt didn't intend initially, as SRT was an internal project of Haivision. Now it should be just treated as the protocol version.\r\n\r\n> Constant SRT_CMD_CONGESTION has only one occurrence in the document....\r\n\r\nTo do #56\r\n\r\n> What timestamp is used in Listener handshake packets?\r\n\r\nThe time on the HS Induction response from the listener is ignored and can be zero.\r\n\r\n> Are message numbers started from 1?\r\n\r\nYes. \r\n\r\n> Shutdown message doesn't contain information about last sequence number sent.\r\nOn the receivers side it's difficult to determine if we read all the data before closing the socket.\r\n\r\nCan be something to extend in v1.5.0 \ud83e\udd14 \r\nIf the sender sends SHUTDOWN, then it is likely that no further data packet will follow, so the receiver just needs to deliver what it has received so far.",
          "createdAt": "2021-07-16T07:44:18Z",
          "updatedAt": "2021-07-16T07:44:18Z"
        }
      ]
    },
    {
      "number": 101,
      "id": "MDU6SXNzdWU5NDU1MzgwNDg=",
      "title": "[Question] What's the benefit of constant end-to-end latency?",
      "url": "https://github.com/Haivision/srt-rfc/issues/101",
      "state": "CLOSED",
      "author": "quink-black",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Here is what I thought about the constant end-to-end latency:\r\nThe cache management can be simplified for application. It's common for video player to have a cache after demuxer before decoder, so the player can control the time duration of cached data. However, cache at the transport layer can help packet loss recovery, and reduce head-of-line blocking.\r\n\r\nWhat's the other benefit and use case of constant end-to-end latency? How about compare it to jitter buffer design/neteq in WebRTC?",
      "createdAt": "2021-07-15T16:00:42Z",
      "updatedAt": "2021-07-16T08:57:34Z",
      "closedAt": "2021-07-16T08:57:34Z",
      "comments": [
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "> However, cache at the transport layer can help packet loss recovery, and reduce head-of-line blocking.\r\n\r\nThat's true. When the target end-to-end latency is known to a network protocol, it knows the time limits to try to recover a packet loss. And this logic can be tuned and developed in the protocol itself, instead of the demuxer+decoder app requesting retransmissions via some control protocol.\r\n\r\nThere is also a time drift between two machines. And demuxer is not always there to help.\r\nOther things are jitter and packet reordering.",
          "createdAt": "2021-07-16T08:00:18Z",
          "updatedAt": "2021-07-16T08:00:18Z"
        }
      ]
    },
    {
      "number": 105,
      "id": "MDU6SXNzdWU5NzY1OTQ0MDg=",
      "title": "3.2.3 Keep-Alive repeat the control packets structure",
      "url": "https://github.com/Haivision/srt-rfc/issues/105",
      "state": "CLOSED",
      "author": "quink-black",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "![image](https://user-images.githubusercontent.com/9263126/130387456-85739353-c5b1-465d-b99f-3775e913e316.png)\r\n\r\nIt makes me confused why the control packet structure is showed again at the keep-alive section. It's more simple to say that keep-alive packet is one of the control packets without control information field.",
      "createdAt": "2021-08-23T03:50:36Z",
      "updatedAt": "2021-08-24T09:57:24Z",
      "closedAt": "2021-08-23T03:54:48Z",
      "comments": [
        {
          "author": "quink-black",
          "authorAssociation": "NONE",
          "body": "OK, Handshake packet only shows the CIF, other packet types following the style of keep-alive.",
          "createdAt": "2021-08-23T03:54:48Z",
          "updatedAt": "2021-08-23T03:54:48Z"
        },
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi @quink-black \r\nWe actually started with the way you propose \"saying that keep-alive packet is one of the control packets without control information field\". However, it was a bit inconvenient to navigate through the RFC back and forth to find the syntax of the control information field. So to make life easier, we are just copying the whole SRT packet structure. This is not a good approach, but save a couple of seconds each time you want to refresh the structure of a certain packet \ud83d\ude42 ",
          "createdAt": "2021-08-24T09:57:24Z",
          "updatedAt": "2021-08-24T09:57:24Z"
        }
      ]
    },
    {
      "number": 106,
      "id": "MDU6SXNzdWU5ODM3MjYxMjY=",
      "title": "Document SRT URI scheme",
      "url": "https://github.com/Haivision/srt-rfc/issues/106",
      "state": "OPEN",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "### Useful Links\r\n\r\n- `srt-xtransmit` [SRT URI syntax](https://github.com/maxsharabayko/srt-xtransmit/blob/v0.1.0/docs/uri-syntax.md)\r\n- [List of URI schemes (wikipedia)](https://en.wikipedia.org/wiki/List_of_URI_schemes)\r\n- [IANA URI schemes](https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml)\r\n- Bittorrent tracker protocol based on UDP (found on Wikipedia): [IANA Template](https://www.iana.org/assignments/uri-schemes/prov/udp)",
      "createdAt": "2021-08-31T10:58:38Z",
      "updatedAt": "2021-08-31T10:58:38Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 107,
      "id": "MDU6SXNzdWU5ODY1MTQ4NzE=",
      "title": "Update \"Round-Trip Time Estimation\" section to describe the latest improvements",
      "url": "https://github.com/Haivision/srt-rfc/issues/107",
      "state": "OPEN",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Update \"Round-Trip Time Estimation\" section to describe the latest improvements:\r\n- [ ] Correct the order of formulas: first RTTVar is calculated, then smoothed RTT is obtained. The order is important. Split formulas in two parts: initialization and EWMA calculation.\r\n- [ ] Describe that during initialization the very first RTT sample is either taken from cache or simply 100 milliseconds. Handshake-based RTT is also possible. however not yet implemented in the library.\r\n- [ ] Consider renaming RTT to SRTT (smoothed RTT) and RTTVar to RTTVAR both in the RFC and the code. I guess we've renamed RTT to SRTT in the code, not sure about RTTVar. Describe that rtt is the RTT sample obtained from the ACK/ACKACK pair. The current variables naming is confusing a bit. It's better to mention explicitly that smoothed RTT is an exponentially weighted moving average (EWMA) of RTT samples.\r\n- [ ] Consider explaining in more details what happens upon ACK and ACKACK reception (how the RTT sample is calculated). Better to combine with sending and receiving algorithms description.\r\n- [ ] Describe the difference between the case of unidirectional and bidirectional transmission. The main reason of additional smoothing at the sender side is the support of bidirectional transmission. Also SRT does not transmit RTTVar to the peer side in this case, this field isn't extracted from the ACK packet and the sender calculates its own variance. See ticket [srt #782](https://github.com/Haivision/srt/issues/782), the [following comment](https://github.com/Haivision/srt/issues/782#issuecomment-825552898) for an explanation.\r\n- [ ] Make a reference to the [RFC 6298](https://datatracker.ietf.org/doc/html/rfc6298).\r\n- [ ] ACKACK packets arriving out of order are not taken into account when calculating smoothed RTT. See [srt #253](https://github.com/Haivision/srt/issues/253) for details.",
      "createdAt": "2021-09-02T10:27:24Z",
      "updatedAt": "2021-09-02T10:35:28Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 108,
      "id": "MDU6SXNzdWU5ODY2MDg2Njk=",
      "title": "Review and improve \"Acknowledgement and Lost Packet Handling\" section",
      "url": "https://github.com/Haivision/srt-rfc/issues/108",
      "state": "OPEN",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Review and improve \"Acknowledgement and Lost Packet Handling\" section:\r\n - [ ] Introduce loss-triggered and periodic NAK reports terms.\r\n - [ ] The difference between 2 NAK packets in \"NAK (Negative Acknowledgement or Loss Report)\" section.\r\n - [ ] The difference between full, small, and light ACKs.\r\n - [ ] The following abstract is now in both \"Packet Acknowledgement (ACKs, ACKACKs)\" and \"Too-Late Packet Drop\" sections. It better fits \"Too-Late Packet Drop\" section, however we should tell about fake ACKs in the first section too.\r\n> When a receiver encounters the situation where the next packet to be played was not\r\nsuccessfully received from the sender, it will \"skip\" this packet (see {{too-late-packet-drop}})\r\nand send a fake ACK. To the sender, this fake ACK is a real ACK, and so it just behaves as if the packet had been received.\r\nThis facilitates the synchronization between SRT sender and receiver. The fact that a packet was\r\nskipped remains unknown by the sender. Skipped packets are recorded in the statistics on the\r\nSRT receiver. ",
      "createdAt": "2021-09-02T11:52:36Z",
      "updatedAt": "2021-09-02T11:52:36Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 111,
      "id": "I_kwDODP9tMM48F4hz",
      "title": "Describe the MSS Negotioation",
      "url": "https://github.com/Haivision/srt-rfc/issues/111",
      "state": "OPEN",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The minimum value is chosen during the HS.\r\n[m_config.iMSS = std::min(m_config.iMSS, w_hs.m_iMSS);](https://github.com/Haivision/srt/blob/v1.4.4-rc.1/srtcore/core.cpp#L5465)",
      "createdAt": "2021-09-27T13:48:06Z",
      "updatedAt": "2021-09-27T13:48:06Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 112,
      "id": "I_kwDODP9tMM5GISu8",
      "title": "Fix the cookie contest description",
      "url": "https://github.com/Haivision/srt-rfc/issues/112",
      "state": "CLOSED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See the issue https://github.com/Haivision/srt/pull/1517\r\nThe cookie contest is sadly not just comparing two integers, but a bit more complicated procedure because of a bug in casting from int64 to int32 and a possible compiler optimizations around that.",
      "createdAt": "2022-03-22T10:30:31Z",
      "updatedAt": "2022-05-12T10:21:00Z",
      "closedAt": "2022-05-12T10:21:00Z",
      "comments": []
    },
    {
      "number": 118,
      "id": "I_kwDODP9tMM5iePJn",
      "title": "Clarifications regarding control packets without control information field (CIF)",
      "url": "https://github.com/Haivision/srt-rfc/issues/118",
      "state": "OPEN",
      "author": "sthilden",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Reading the specification for control packets, I want to ask about some clarification regarding packets without control information field (CIF).\r\n\r\nFor the packet types Keep-Alive, Shutdown, and AckAck, this draft specifies that the \"control packets do not contain Control Information Field (CIF)\". For the Peer Error packet, this is not explicitly specified, but no Control Field Information is shown in the packet structure.\r\n\r\nHowever, the Haivision SRT library does insert a 32-bit word of zeros as the CIF for all these packet types. Also, in the Haivision SRT Technical Overview document from 2018, it is specified that the packet types Keep-Alive, Shutdown, and AckAck contain a 32-bit word of zeros as the control information field (CIF).\r\n\r\nSending packets without any CIF padding to the Haivison SRT library seems to work just fine. The library accepts the packets with or without the zero padding, at least for Keep-Alive, Shutdown, and AckAck, which I have tested.\r\n\r\nAs the Haivision SRT library inserts a 32-bit word of zero padding, it means another SRT implementation must support that there could be padding present, and not discard packets with padding as an invalid packet.\r\n\r\nSo, I wonder about the following;\r\n- Is the current draft correct in that there should be no control information field (CIF) for Keep-Alive, Shutdown, AckAck, and, Peer Error packets? In that case, it should be specified that an implementation must assume that there can be CIF data present, to ensure compatibility with the Haivision SRT library.\r\n- Or, should the draft specify that there should actually be a 32-bit word of zero padding present as the CIF?",
      "createdAt": "2023-04-03T13:39:16Z",
      "updatedAt": "2023-04-24T10:55:13Z",
      "closedAt": null,
      "comments": [
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi @sthilden \r\nThanks for raising an important question!\r\nIndeed, the SRT library accepts control packets both with or without zero padding. I am not sure what's the benefit of having the padding. This might be a legacy of the UDT library, that can be removed given existing receivers of control packets ignore this padding.\r\nPotentially those packets could be extended in the future to contain CIF. For example, the SHUTDOWN packet may be extended with the \"reason for shutdown\". The modified structure may be signaled using the \"subtype\" field.\r\n\r\nAnswering your question, I believe there should be no control information field (CIF) for Keep-Alive, Shutdown, AckAck, and, Peer Error packets. Obviously, there MAY be this zero padding, and the specification cannot enforce the opposite.\r\n\r\nNote that [Wireshark's SRT dissector](https://github.com/wireshark/wireshark/blob/master/epan/dissectors/packet-srt.c) currently expects zero padding and reports a warning if it is not there. That's because the dissector was derived from the UDT dissector with this parsing of zero padding. Something to fix as well.",
          "createdAt": "2023-04-05T07:37:15Z",
          "updatedAt": "2023-04-05T07:37:15Z"
        },
        {
          "author": "sthilden",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thank you for your answer, @maxsharabayko!\r\n\r\nTo ensure that other implementations are compatible with the existing versions of the open source SRT library, I think it would be beneficial to clarify in the specification that there may be padding.\r\n\r\nAt least to me, e.g. the sentence \"Shutdown control packets do not contain Control Information Field (CIF).\" suggests that including any CIF data for a shutdown packet would be invalid.\r\n\r\nI suggest to include something in the specification to clarify this, either that\r\n  1. specifically, there may be 32-bits of trailing zero-padding in the control packets defined without CIF, and this should be ignored, or\r\n  2. there may be trailing padding / trailing data to any control packets, and this should be ignored\r\n\r\nI am not sure what is the correct way to go, though. Please let me know your thoughts on this.",
          "createdAt": "2023-04-20T06:58:29Z",
          "updatedAt": "2023-04-20T06:58:29Z"
        },
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "I am thinking your suggestion no. 2 might be better, to allow padding up to the MTU side.\r\nPossible future format extensions may be signaled using the \"subtype\" field.\r\n\r\n> there may be trailing padding / trailing data to any control packets, and this should be ignored",
          "createdAt": "2023-04-24T10:55:13Z",
          "updatedAt": "2023-04-24T10:55:13Z"
        }
      ]
    },
    {
      "number": 120,
      "id": "I_kwDODP9tMM5j7-UG",
      "title": "Destination socket ID in the caller conclusion packet",
      "url": "https://github.com/Haivision/srt-rfc/issues/120",
      "state": "CLOSED",
      "author": "sthilden",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I have a question regarding the destination socket ID in the caller conclusion handshake packet.\r\n\r\nIn section 4.3.1.2 (\"The Conclusion Phase\"), it says for the conclusion packet sent by the caller; \"The Destination Socket ID in this message is the socket ID that was previously received in the induction phase in the SRT Socket ID field of the handshake structure.\"\r\n\r\nHowever, testing the open source SRT library (https://github.com/Haivision/srt), I observe the following behavior;\r\n- The listener does not insert its own ID in the \"SRT socket ID\" field of the induction reply (as this specification says it should), but instead inserts the socket ID of the caller.\r\n- The caller always sets 0 as the \"destination socket ID\" in the conclusion packet it sends, and not the socket ID previously received from the listener in the induction phase.\r\n- If a caller is implemented to use the socket ID previously received from the listener as the destination Socket ID in the conclusion packet, then the listener will not respond at all, and the handshake will not succeed.\r\n\r\nThus, if an SRT caller is implemented following the current specification, it will not be compatible with the open source SRT library listener, which is unfortunate.\r\n\r\nI therefore wonder if the specification instead should state that the destination socket ID should be set to 0 in the conclusion packet sent by the caller?",
      "createdAt": "2023-04-20T12:54:06Z",
      "updatedAt": "2023-04-24T12:12:07Z",
      "closedAt": "2023-04-24T12:12:06Z",
      "comments": [
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "In the induction phase, the listener is not creating any SRT socket, therefore there is no socket ID to send.\r\nThe listener can only reply with \"0\" in the Source SRT Socket ID.\r\nThe SRT socket is only created on the listener side after receiving the Conclusion Request from the caller.\r\n\r\nThe description of the handshake procedure is relatively poor. PR #116 suggests some rework, but the PR itself is still a work in progress.",
          "createdAt": "2023-04-24T10:48:59Z",
          "updatedAt": "2023-04-24T10:50:36Z"
        },
        {
          "author": "sthilden",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Thank you for the reply!\r\n\r\nI see also the destination socket ID for the caller conclusion packet is 0 in the updates of PR #116.\r\n\r\nI will close this issue then, as this the described issue is covered by by PR #116.",
          "createdAt": "2023-04-24T12:12:06Z",
          "updatedAt": "2023-04-24T12:12:06Z"
        }
      ]
    },
    {
      "number": 121,
      "id": "I_kwDODP9tMM5qdpZe",
      "title": "Describe the procedure to derive the signature flags",
      "url": "https://github.com/Haivision/srt-rfc/issues/121",
      "state": "OPEN",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Haivision has the PNP ID 'HAI'. The procedure for how it should be encoded to become `0x2029` is not clear.\r\n\r\n```\r\n    0                   1                   2                   3\r\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n   |S|  V  |   PT  |              Sign             |   Resv1   | KK|\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n   |                              KEKI                             |\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n   |     Cipher    |      Auth     |       SE      |     Resv2     |\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n   |             Resv3             |     SLen/4    |     KLen/4    |\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n   |                              Salt                             |\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n   |                                                               |\r\n   +                          Wrapped Key                          +\r\n   |                                                               |\r\n   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\r\n\r\n                 Figure 10: Key Material Message structure\r\n\r\n   Sign: 16 bits, value = {0x2029}.  This is a fixed-width field that\r\n      contains the signature 'HAI' encoded as a PnP Vendor ID [PNPID]\r\n      (in big-endian order).\r\n```\r\n\r\nThe procedure is borrowed from an ancient life of device-driver/kernel-programmer.\r\nFrom an era where each bit was precious.\r\nThis is far from modern full-text-based protocols.\r\nYou concatenate the 5 last bits of the ascii codes, plus one leading 0:\r\n\r\n```\r\nlead      0\r\nH=48h&1F-> 01000b\r\nA=41h&1F->      00001b\r\nI=49h&1F->           01001b\r\n          0010000000101001b\r\n             2   0   2   9h\r\n```",
      "createdAt": "2023-07-03T13:10:29Z",
      "updatedAt": "2023-07-03T13:10:29Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 123,
      "id": "I_kwDODP9tMM5tomQC",
      "title": "Initial Sequence Number",
      "url": "https://github.com/Haivision/srt-rfc/issues/123",
      "state": "OPEN",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Describe the behavior in the draft.\r\nEach side randomly generates the ISN value.\r\nIn the caller-listener handshake, both sides use the caller's ISN.\r\nIn the case of rendezvous, each side takes the peer's ISN value for receiving.",
      "createdAt": "2023-08-07T12:32:49Z",
      "updatedAt": "2023-08-07T12:32:49Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0MzMzMjI5MDQy",
      "title": "Boilerplate creation",
      "url": "https://github.com/Haivision/srt-rfc/pull/1",
      "state": "MERGED",
      "author": "thpts",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2019-10-28T17:14:51Z",
      "updatedAt": "2019-10-28T17:32:01Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "87dea0cacc17df043a50e3e84b990b4e4f3dd45e",
      "headRepository": "thpts/srt-rfc",
      "headRefName": "master",
      "headRefOid": "0d8550eb6d035e5c8e07edbf9160f22cc423c78b",
      "closedAt": "2019-10-28T17:32:01Z",
      "mergedAt": "2019-10-28T17:32:01Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "1ce47c3c8ef22609881f05579a1c839b6cd0c5bd"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 2,
      "id": "MDExOlB1bGxSZXF1ZXN0MzczMTE1Mzgz",
      "title": "WIP: Meeting 107",
      "url": "https://github.com/Haivision/srt-rfc/pull/2",
      "state": "CLOSED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-02-10T12:47:04Z",
      "updatedAt": "2020-02-18T05:07:22Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "1ce47c3c8ef22609881f05579a1c839b6cd0c5bd",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "meeting-107",
      "headRefOid": "a867bec40e09521fb5d1a75e43e9893c780ffa95",
      "closedAt": "2020-02-18T05:07:22Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "body": "Closed to keep history, and replaced with #6.",
          "createdAt": "2020-02-18T05:07:20Z",
          "updatedAt": "2020-02-18T05:07:20Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1OTA5NDUy",
          "commit": {
            "abbreviatedOid": "3878c0d"
          },
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-10T12:49:07Z",
          "updatedAt": "2020-02-10T12:49:07Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Although I remove `!` to fix an error, I am not sure about what's the purpose of `!` here.",
              "createdAt": "2020-02-10T12:49:07Z",
              "updatedAt": "2020-02-12T08:33:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1OTEwMTg2",
          "commit": {
            "abbreviatedOid": "3878c0d"
          },
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-10T12:50:25Z",
          "updatedAt": "2020-02-10T12:50:26Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "Renamed from `FF`. I don't know what  `FF` stands for.",
              "createdAt": "2020-02-10T12:50:25Z",
              "updatedAt": "2020-02-12T08:33:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1OTExMDE1",
          "commit": {
            "abbreviatedOid": "3878c0d"
          },
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-10T12:51:44Z",
          "updatedAt": "2020-02-10T12:51:45Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "Any idea of making a link easier than this?",
              "createdAt": "2020-02-10T12:51:45Z",
              "updatedAt": "2020-02-12T08:33:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1OTExNjA0",
          "commit": {
            "abbreviatedOid": "3878c0d"
          },
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-10T12:52:45Z",
          "updatedAt": "2020-02-10T12:52:45Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "A description is required. Unless looking into source codes, I can't find enough information to explain what it is.",
              "createdAt": "2020-02-10T12:52:45Z",
              "updatedAt": "2020-02-12T08:33:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1OTEyOTYy",
          "commit": {
            "abbreviatedOid": "3878c0d"
          },
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-10T12:55:07Z",
          "updatedAt": "2020-02-10T12:55:08Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "No information about scale. second, ms, or ns? and even signed or unsigned?  I guess it is second, but we need a clear definition.",
              "createdAt": "2020-02-10T12:55:07Z",
              "updatedAt": "2020-02-12T08:33:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1OTEzNjU2",
          "commit": {
            "abbreviatedOid": "3878c0d"
          },
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-10T12:56:19Z",
          "updatedAt": "2020-02-10T12:56:19Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "Is it sufficient to copy from UDT draft? I don't think so because we can't cite from any draft which is expired.",
              "createdAt": "2020-02-10T12:56:19Z",
              "updatedAt": "2020-02-12T08:33:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDAxOTMx",
          "commit": {
            "abbreviatedOid": "3878c0d"
          },
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-11T03:25:28Z",
          "updatedAt": "2020-02-11T03:25:28Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "The SRT technical overview represented timestamp unit as *usec*, but still no explicit information whether it is singed or unsigned.",
              "createdAt": "2020-02-11T03:25:28Z",
              "updatedAt": "2020-02-12T08:33:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NTIzNTc0",
          "commit": {
            "abbreviatedOid": "9f794f7"
          },
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-11T09:51:57Z",
          "updatedAt": "2020-02-11T09:52:40Z",
          "comments": [
            {
              "originalPosition": 114,
              "body": "No information about *Congestion Warning* .",
              "createdAt": "2020-02-11T09:51:57Z",
              "updatedAt": "2020-02-12T08:33:02Z"
            },
            {
              "originalPosition": 118,
              "body": "No information about *Drop Request* and *Peer Error*.",
              "createdAt": "2020-02-11T09:52:22Z",
              "updatedAt": "2020-02-12T08:33:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NTY1NTA4",
          "commit": {
            "abbreviatedOid": "9f794f7"
          },
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-11T10:57:19Z",
          "updatedAt": "2020-02-11T10:57:20Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "It was described as `KK`. What does it stand for?",
              "createdAt": "2020-02-11T10:57:19Z",
              "updatedAt": "2020-02-12T08:33:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NTkyOTYw",
          "commit": {
            "abbreviatedOid": "a867bec"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-17T09:31:20Z",
          "updatedAt": "2020-02-17T09:31:21Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "KK - Encryption key indicator.",
              "createdAt": "2020-02-17T09:31:21Z",
              "updatedAt": "2020-02-17T09:31:21Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NTkzOTM2",
          "commit": {
            "abbreviatedOid": "a867bec"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-17T09:32:54Z",
          "updatedAt": "2020-02-17T09:32:55Z",
          "comments": [
            {
              "originalPosition": 114,
              "body": "It is not implemented in SRT library. More a placeholder for potential future usage. The idea I think is similar to TCP Explicit Congestion Notification (ECN) ",
              "createdAt": "2020-02-17T09:32:55Z",
              "updatedAt": "2020-02-17T09:32:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NTk0NDMw",
          "commit": {
            "abbreviatedOid": "a867bec"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-17T09:33:42Z",
          "updatedAt": "2020-02-17T09:33:43Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "Good point. We can create an issue for this so that it does not block us.",
              "createdAt": "2020-02-17T09:33:43Z",
              "updatedAt": "2020-02-17T09:33:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NjA0NDYy",
          "commit": {
            "abbreviatedOid": "a867bec"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-17T09:48:02Z",
          "updatedAt": "2020-02-17T09:48:03Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "```\r\n<a href=\"#live-mode\">Live Transmission Mode</a>\r\n```\r\nthen reference with `{{#live-mode}}`\r\nIf this is compliant with RFC ",
              "createdAt": "2020-02-17T09:48:03Z",
              "updatedAt": "2020-02-17T09:48:03Z"
            }
          ]
        }
      ]
    },
    {
      "number": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc2MDU2ODk1",
      "title": "Renamed the draft spec",
      "url": "https://github.com/Haivision/srt-rfc/pull/3",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-02-17T10:25:04Z",
      "updatedAt": "2020-02-17T10:50:22Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "1ce47c3c8ef22609881f05579a1c839b6cd0c5bd",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/renaming",
      "headRefOid": "1d1d81cd4569db4cf9c65b9b5297855a6bc3b267",
      "closedAt": "2020-02-17T10:50:18Z",
      "mergedAt": "2020-02-17T10:50:18Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "5e1f16723bf0d41bac025ffe09dcf2bcc80baa96"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc2MTEyMjU1",
      "title": "Added packet structure",
      "url": "https://github.com/Haivision/srt-rfc/pull/4",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-02-17T12:32:31Z",
      "updatedAt": "2020-02-17T12:34:56Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "5e1f16723bf0d41bac025ffe09dcf2bcc80baa96",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/packets",
      "headRefOid": "b018281c4e2a1e0b5505922021a15668becfa37f",
      "closedAt": "2020-02-17T12:34:53Z",
      "mergedAt": "2020-02-17T12:34:53Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "f5bddb66389140537fb6d0a9f57d3e022f53a9ed"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc2MTgxMzQ0",
      "title": "More contents for packet structure",
      "url": "https://github.com/Haivision/srt-rfc/pull/5",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-02-17T14:58:19Z",
      "updatedAt": "2020-02-17T15:01:52Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "f5bddb66389140537fb6d0a9f57d3e022f53a9ed",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/packets2",
      "headRefOid": "e5550a9acb90c13cdaf292e3426e46d7cc6cb70e",
      "closedAt": "2020-02-17T15:01:47Z",
      "mergedAt": "2020-02-17T15:01:47Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "742188610fb7fed5600c09a663c2c1489f9139a0"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 6,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc2NDE5OTEw",
      "title": "Fill packetstructure",
      "url": "https://github.com/Haivision/srt-rfc/pull/6",
      "state": "MERGED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This set of commits is partially filled packet structure section.",
      "createdAt": "2020-02-18T05:07:05Z",
      "updatedAt": "2020-02-19T09:52:22Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "742188610fb7fed5600c09a663c2c1489f9139a0",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "fill-packetstructure",
      "headRefOid": "dd7cbdb28daf54a43c761dab60edd1cbcd4d4fab",
      "closedAt": "2020-02-19T09:52:22Z",
      "mergedAt": "2020-02-19T09:52:22Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "8ad9a96d0a2ac57d63fe2c9d82dc68e0c5476215"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMzIwMjM2",
          "commit": {
            "abbreviatedOid": "d772ce5"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Looks good. Please consider the review comments.",
          "createdAt": "2020-02-18T13:05:52Z",
          "updatedAt": "2020-02-18T13:12:12Z",
          "comments": [
            {
              "originalPosition": 137,
              "body": "Message Type -> Control Type",
              "createdAt": "2020-02-18T13:05:52Z",
              "updatedAt": "2020-02-19T04:59:48Z"
            },
            {
              "originalPosition": 155,
              "body": "Control Type",
              "createdAt": "2020-02-18T13:06:26Z",
              "updatedAt": "2020-02-19T04:59:48Z"
            },
            {
              "originalPosition": 178,
              "body": "> or two consecutive sequence numbers\r\n\r\nThe first figure is for one sequence number. There might be confusion from the first paragraph.\r\n\r\nMaybe this way:\r\n_The receiver notifies the sender about the lost packets using the NAK packets. The NAK packet contains a list of sequence numbers of lost packets. \r\nTo report a loss of one sequence, the first bit must start with \"0\"..._",
              "createdAt": "2020-02-18T13:11:44Z",
              "updatedAt": "2020-02-19T04:59:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwODQ0NzE0",
          "commit": {
            "abbreviatedOid": "dd7cbdb"
          },
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-19T05:06:19Z",
          "updatedAt": "2020-02-19T05:06:20Z",
          "comments": [
            {
              "originalPosition": 178,
              "body": "Just removed `or two consecutive sequence numbers`. Logically, I think we don't need to care about the case as outstanding. \r\n\r\nAnother point is that, as I mentioned in a commit message(https://github.com/Haivision/srt-rfc/pull/6/commits/c1c4de61544d400bdbc825b7d5e1cbc86785fb6e),  the list coding is a very general way so I tend not to mention 'Lost' or 'Loss'  in the appendix section. \r\n",
              "createdAt": "2020-02-19T05:06:19Z",
              "updatedAt": "2020-02-19T05:06:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwOTcyNDcx",
          "commit": {
            "abbreviatedOid": "dd7cbdb"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2020-02-19T09:51:48Z",
          "updatedAt": "2020-02-19T09:51:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 10,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzc3NTYxNjE3",
      "title": "remove control packet types",
      "url": "https://github.com/Haivision/srt-rfc/pull/10",
      "state": "MERGED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "These control packet types come from UDT, but they don't\r\nhave clear description yet. These sections are removed for\r\nfuture definitions.\r\n\r\n - Congestion Warning: #7\r\n - Drop Request: #8\r\n - Peer Error: #9",
      "createdAt": "2020-02-20T05:42:17Z",
      "updatedAt": "2020-02-20T13:56:14Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "f3c61fe69a44ab9dca7f2e47c7d59fd060a16913",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "pr/packet-structure-01",
      "headRefOid": "e60548c3652aeaf595523c16d9219f662728db6c",
      "closedAt": "2020-02-20T13:56:14Z",
      "mergedAt": "2020-02-20T13:56:13Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "8b16ce8a58dd989c0db53705883893c5094f8b76"
      },
      "comments": [
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "Drop request is in use by SRT.\r\nThe remaining two are for potential use in the future.\r\n",
          "createdAt": "2020-02-20T13:55:57Z",
          "updatedAt": "2020-02-20T13:55:57Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 12,
      "id": "MDExOlB1bGxSZXF1ZXN0MzgwMjMzNDcw",
      "title": "Update a bit of a handshake structure.",
      "url": "https://github.com/Haivision/srt-rfc/pull/12",
      "state": "MERGED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-02-26T12:55:32Z",
      "updatedAt": "2020-02-28T15:09:29Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "8b16ce8a58dd989c0db53705883893c5094f8b76",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "pr/packet-structure-02",
      "headRefOid": "6a963a9988774a9f1502e311e0814ddb95b53484",
      "closedAt": "2020-02-28T15:09:28Z",
      "mergedAt": "2020-02-28T15:09:28Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "c2e659aabd7a6f26ffaeb27153eb8bf23fd017e6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NTk1MjYz",
          "commit": {
            "abbreviatedOid": "9a89b43"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-27T11:08:50Z",
          "updatedAt": "2020-02-27T11:10:28Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\n  The value \"10b\" means the first packet of the message. \"00b\" indicates a packet in the middle,\r\n```",
              "createdAt": "2020-02-27T11:08:50Z",
              "updatedAt": "2020-02-27T13:10:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NjY2MzY3",
          "commit": {
            "abbreviatedOid": "6a963a9"
          },
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-02-27T13:10:51Z",
          "updatedAt": "2020-02-27T13:10:52Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "nice catch. thank you!",
              "createdAt": "2020-02-27T13:10:52Z",
              "updatedAt": "2020-02-27T13:10:52Z"
            }
          ]
        }
      ]
    },
    {
      "number": 13,
      "id": "MDExOlB1bGxSZXF1ZXN0MzgxNTIwODcx",
      "title": "Reviewing iteration fixes",
      "url": "https://github.com/Haivision/srt-rfc/pull/13",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-02-28T18:01:41Z",
      "updatedAt": "2020-03-02T09:06:05Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "c2e659aabd7a6f26ffaeb27153eb8bf23fd017e6",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/review-1",
      "headRefOid": "2424b139449b644a6c2c4b562bd75dc26ef0cb84",
      "closedAt": "2020-03-02T09:06:01Z",
      "mergedAt": "2020-03-02T09:06:01Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "edd5049fd8d3546b29ed15c05cee47731db43c8f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 14,
      "id": "MDExOlB1bGxSZXF1ZXN0MzgyMTM1MzY5",
      "title": "Abstract & Security Considerations",
      "url": "https://github.com/Haivision/srt-rfc/pull/14",
      "state": "MERGED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "updated.",
      "createdAt": "2020-03-02T01:52:02Z",
      "updatedAt": "2020-03-02T09:10:16Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "c2e659aabd7a6f26ffaeb27153eb8bf23fd017e6",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "pr/abstract",
      "headRefOid": "b576dc917893cb6bf696842684d4da0a9f2ded49",
      "closedAt": "2020-03-02T09:10:16Z",
      "mergedAt": "2020-03-02T09:10:16Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "1413b8c0d05211796ce61f881f332cef11812124"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 16,
      "id": "MDExOlB1bGxSZXF1ZXN0MzgyMjI1NDYw",
      "title": " Acknowledgement and Lost Packet Handling",
      "url": "https://github.com/Haivision/srt-rfc/pull/16",
      "state": "MERGED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "_Note that most of this commit is copy-n-pasted from SRT technical overview, but not refined a lot.\r\nSome of important information would be missing. Please review carefully and give feedbacks._",
      "createdAt": "2020-03-02T07:47:42Z",
      "updatedAt": "2020-03-02T09:09:27Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "c2e659aabd7a6f26ffaeb27153eb8bf23fd017e6",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "pr/upon-maxim-fixes",
      "headRefOid": "6efe19a8478d5da1a1f52f87b4c822753ff84542",
      "closedAt": "2020-03-02T09:09:27Z",
      "mergedAt": "2020-03-02T09:09:27Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "3d15a0f122c55f0134e8cd7a32c1d1a551831200"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 17,
      "id": "MDExOlB1bGxSZXF1ZXN0MzgyMzM1Njg0",
      "title": "Changes after a review",
      "url": "https://github.com/Haivision/srt-rfc/pull/17",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Looked through the current document version.\r\nFixed errors, added more information to some sections.",
      "createdAt": "2020-03-02T11:39:10Z",
      "updatedAt": "2020-03-02T13:39:50Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "1413b8c0d05211796ce61f881f332cef11812124",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/review-020320",
      "headRefOid": "7eadda173112855a473a859d9bb54a6d5bbb45c2",
      "closedAt": "2020-03-02T12:40:31Z",
      "mergedAt": "2020-03-02T12:40:31Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "65c73b0f82811621cad356df9b827d607ed4702e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 18,
      "id": "MDExOlB1bGxSZXF1ZXN0MzgyNDE0MTMy",
      "title": "Added short notes on Data Transmission Modes",
      "url": "https://github.com/Haivision/srt-rfc/pull/18",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-02T14:26:21Z",
      "updatedAt": "2020-03-02T15:33:59Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "65c73b0f82811621cad356df9b827d607ed4702e",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/transmission-modes",
      "headRefOid": "995790e229e782768893ea6038ed7701c7673208",
      "closedAt": "2020-03-02T15:33:55Z",
      "mergedAt": "2020-03-02T15:33:55Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "84a0dbae7b8d5a8b3720ad2e15c583109f2122b2"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 19,
      "id": "MDExOlB1bGxSZXF1ZXN0MzgyNzY3OTk3",
      "title": "Handshake: Key material exchange field update",
      "url": "https://github.com/Haivision/srt-rfc/pull/19",
      "state": "MERGED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-03T06:27:44Z",
      "updatedAt": "2020-03-03T10:10:40Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "39d60299a0b782c2f47b08bcd2043856356f0c1f",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "pr/km-exchange",
      "headRefOid": "fdff5a76de77cf2678c60be31ae029e69f31c90d",
      "closedAt": "2020-03-03T10:10:40Z",
      "mergedAt": "2020-03-03T10:10:40Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "dbd688ec998165db9c7fbec668a048c15130f0a8"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 20,
      "id": "MDExOlB1bGxSZXF1ZXN0MzgyODIzNTA5",
      "title": "congestion control: add sub section",
      "url": "https://github.com/Haivision/srt-rfc/pull/20",
      "state": "MERGED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Co-authored-by: Joonwoong Kim <joonwoong.kim@sktelecom.com>",
      "createdAt": "2020-03-03T09:01:33Z",
      "updatedAt": "2020-03-05T13:55:19Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "5759ee54a61dcd77290e5377416f14eb4066e639",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "pr/congest-control",
      "headRefOid": "94ca3428a246c8673ac120e20841f59d365174e6",
      "closedAt": "2020-03-05T13:55:19Z",
      "mergedAt": "2020-03-05T13:55:19Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "c84c29bcdbb09f996ae448f5dfbfffe41825bbaf"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 21,
      "id": "MDExOlB1bGxSZXF1ZXN0MzgzMDA3NDQw",
      "title": "TSBPD, TLPKTDROP, Drift Management",
      "url": "https://github.com/Haivision/srt-rfc/pull/21",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-03T15:11:39Z",
      "updatedAt": "2020-03-04T08:16:42Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "dbd688ec998165db9c7fbec668a048c15130f0a8",
      "headRepository": "mbakholdina/srt-rfc",
      "headRefName": "mbakholdina/tsbpd",
      "headRefOid": "85c3ce75f4ce1d7820b5f1d50bc4d301062f7811",
      "closedAt": "2020-03-04T08:16:42Z",
      "mergedAt": "2020-03-04T08:16:42Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "f2c41107096c35e8e772676e07031dcca226e015"
      },
      "comments": [
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "Message from the CI:\r\n```\r\nToo long line found (L1352), 6 characters longer than 72 characters: \r\n                   |  Sending  |                   |                         |\r\ndraft-sharabayko-mops-srt.xml(1104): Warning: Too long line found (L1353), 6 characters longer than 72 characters: \r\n                   |   Delay   |      ~RTT/2       |       SRT Latency       |\r\ndraft-sharabayko-mops-srt.xml(1104): Warning: Too long line found (L1354), 6 characters longer than 72 characters: \r\n                   |<--------->|<----------------->|<----------------------->|\r\ndraft-sharabayko-mops-srt.xml(1104): Warning: Too long line found (L1355), 6 characters longer than 72 characters: \r\n```",
          "createdAt": "2020-03-03T15:32:29Z",
          "updatedAt": "2020-03-03T15:32:29Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MDY0OTg4",
          "commit": {
            "abbreviatedOid": "8d791e7"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-03T15:15:49Z",
          "updatedAt": "2020-03-03T15:29:37Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "```suggestion\r\nThe goal of the SRT Timestamp Based Packet Delivery (TSBPD) mechanism is\r\nto reproduce the input timing of the sending side in the output timing of the receiving side\r\nin live data transmission mode (see {{data-transmission-mode}}).\r\n```",
              "createdAt": "2020-03-03T15:15:49Z",
              "updatedAt": "2020-03-03T17:25:09Z"
            },
            {
              "originalPosition": 68,
              "body": "```suggestion\r\nThe SRT receiver, using the timestamp of the SRT data packet header,\r\ndelivers packets to a receiving application with a fixed minimum delay from the time the data packet was scheduled for sending on the sender's side.\r\n```",
              "createdAt": "2020-03-03T15:18:27Z",
              "updatedAt": "2020-03-03T17:25:09Z"
            },
            {
              "originalPosition": 89,
              "body": "```suggestion\r\nThe origin time (in microseconds)\r\nof the packet is already sampled when a packet is first submitted by the application to the SRT sender.\r\nThe TSBPD mechanism uses this time to stamp the packet for first transmission and any subsequent retransmission.\r\nThis timestamp and the configured SRT latency control the recovery buffer size and the instant that packets\r\nare delivered at the destination.\r\n```",
              "createdAt": "2020-03-03T15:22:11Z",
              "updatedAt": "2020-03-03T17:25:09Z"
            },
            {
              "originalPosition": 117,
              "body": "```suggestion\r\n- \"Scheduled for sending\": the packet is committed by the sending application, stamped and ready to be sent;\r\n- \"Sent\": the packet is passed to the UDP socket and sent;\r\n```",
              "createdAt": "2020-03-03T15:22:57Z",
              "updatedAt": "2020-03-03T17:25:09Z"
            },
            {
              "originalPosition": 124,
              "body": "```suggestion\r\nfixed and is approximately equal to (RTT_0/2 + SRT Latency) once the SRT handshake exchange happens,\r\n```",
              "createdAt": "2020-03-03T15:23:25Z",
              "updatedAt": "2020-03-03T17:25:09Z"
            },
            {
              "originalPosition": 129,
              "body": "```suggestion\r\nThe value of the sending delay depends on hardware performance. Usually, it is small (several microseconds) in comparison with RTT_0/2 and SRT latency usually measured in milliseconds.\r\n```",
              "createdAt": "2020-03-03T15:25:43Z",
              "updatedAt": "2020-03-03T17:25:09Z"
            },
            {
              "originalPosition": 251,
              "body": "The timeout to drop a packet is based on the TSBPD mechanism.",
              "createdAt": "2020-03-03T15:29:05Z",
              "updatedAt": "2020-03-03T17:25:09Z"
            }
          ]
        }
      ]
    },
    {
      "number": 22,
      "id": "MDExOlB1bGxSZXF1ZXN0MzgzMDY3MzEx",
      "title": "Added HS Conclusion (Listener-Caller)",
      "url": "https://github.com/Haivision/srt-rfc/pull/22",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-03T17:00:23Z",
      "updatedAt": "2020-03-04T08:17:20Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "dbd688ec998165db9c7fbec668a048c15130f0a8",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/hs-conclusion",
      "headRefOid": "a30ad7e613e550cb56d06dcf2620a1fb0448c140",
      "closedAt": "2020-03-04T08:17:16Z",
      "mergedAt": "2020-03-04T08:17:16Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "5f7e0dfc9ebc962d36b1ac95e15711e5e906b004"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 23,
      "id": "MDExOlB1bGxSZXF1ZXN0MzgzNDk2MTAz",
      "title": "Remove encryption section",
      "url": "https://github.com/Haivision/srt-rfc/pull/23",
      "state": "MERGED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-04T11:30:25Z",
      "updatedAt": "2020-03-04T15:17:57Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "5f7e0dfc9ebc962d36b1ac95e15711e5e906b004",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "pr/remove-encryption-section",
      "headRefOid": "d0645874e75750863a543149e95d0ac70323179a",
      "closedAt": "2020-03-04T15:17:57Z",
      "mergedAt": "2020-03-04T15:17:57Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "5759ee54a61dcd77290e5377416f14eb4066e639"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 24,
      "id": "MDExOlB1bGxSZXF1ZXN0MzgzNTYwMzg4",
      "title": "Data transmission and Control section review",
      "url": "https://github.com/Haivision/srt-rfc/pull/24",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- First part review\r\n- SRT latency review\r\n- ACKs, NACKs review\r\n- Some minor corrections in TSBPD part",
      "createdAt": "2020-03-04T13:37:27Z",
      "updatedAt": "2020-03-04T14:46:32Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "5f7e0dfc9ebc962d36b1ac95e15711e5e906b004",
      "headRepository": "mbakholdina/srt-rfc",
      "headRefName": "mbakholdina/data-transmission-review",
      "headRefOid": "72436bc53560608e78ce6896799bbabdf90773a9",
      "closedAt": "2020-03-04T14:46:32Z",
      "mergedAt": "2020-03-04T14:46:32Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "357136468aab63d02a76928f22f55b495593c7f5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4ODE4MTcx",
          "commit": {
            "abbreviatedOid": "35d8565"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-04T14:23:49Z",
          "updatedAt": "2020-03-04T14:36:50Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-04T14:23:50Z",
              "updatedAt": "2020-03-04T14:40:48Z"
            },
            {
              "originalPosition": 26,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-04T14:25:00Z",
              "updatedAt": "2020-03-04T14:40:48Z"
            },
            {
              "originalPosition": 44,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-04T14:26:39Z",
              "updatedAt": "2020-03-04T14:40:48Z"
            },
            {
              "originalPosition": 95,
              "body": "```suggestion\r\nbetween initiator and responder. The Handshake Extension Message ({{handshake-extension-msg}}) has \r\n```",
              "createdAt": "2020-03-04T14:28:17Z",
              "updatedAt": "2020-03-04T14:40:48Z"
            },
            {
              "originalPosition": 93,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-04T14:28:38Z",
              "updatedAt": "2020-03-04T14:40:48Z"
            },
            {
              "originalPosition": 181,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-04T14:29:34Z",
              "updatedAt": "2020-03-04T14:40:48Z"
            },
            {
              "originalPosition": 189,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-04T14:30:18Z",
              "updatedAt": "2020-03-04T14:40:48Z"
            },
            {
              "originalPosition": 196,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-04T14:30:32Z",
              "updatedAt": "2020-03-04T14:40:48Z"
            },
            {
              "originalPosition": 239,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-04T14:31:55Z",
              "updatedAt": "2020-03-04T14:40:48Z"
            },
            {
              "originalPosition": 263,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-04T14:32:23Z",
              "updatedAt": "2020-03-04T14:40:48Z"
            },
            {
              "originalPosition": 289,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-04T14:33:03Z",
              "updatedAt": "2020-03-04T14:40:48Z"
            },
            {
              "originalPosition": 290,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-04T14:33:17Z",
              "updatedAt": "2020-03-04T14:40:48Z"
            },
            {
              "originalPosition": 292,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-04T14:33:28Z",
              "updatedAt": "2020-03-04T14:40:48Z"
            },
            {
              "originalPosition": 388,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-04T14:34:43Z",
              "updatedAt": "2020-03-04T14:40:48Z"
            },
            {
              "originalPosition": 41,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-04T14:36:21Z",
              "updatedAt": "2020-03-04T14:40:48Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4ODMzMzg5",
          "commit": {
            "abbreviatedOid": "72436bc"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-04T14:41:28Z",
          "updatedAt": "2020-03-04T14:41:29Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-04T14:41:28Z",
              "updatedAt": "2020-03-04T14:41:29Z"
            }
          ]
        }
      ]
    },
    {
      "number": 25,
      "id": "MDExOlB1bGxSZXF1ZXN0MzgzNjEzNzUx",
      "title": "Added Rendezvous handshake",
      "url": "https://github.com/Haivision/srt-rfc/pull/25",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-04T14:56:54Z",
      "updatedAt": "2020-03-04T14:58:18Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "357136468aab63d02a76928f22f55b495593c7f5",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/hs-rendezvous",
      "headRefOid": "73ead238b992adc2a6795900fe778f8e65c47d02",
      "closedAt": "2020-03-04T14:58:13Z",
      "mergedAt": "2020-03-04T14:58:13Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "83c1413e931c7bfd3df9fc24d835d28215b66916"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 26,
      "id": "MDExOlB1bGxSZXF1ZXN0MzgzODM1MjUy",
      "title": "Editing pass",
      "url": "https://github.com/Haivision/srt-rfc/pull/26",
      "state": "MERGED",
      "author": "stevomatthews",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "My initial set of edits to this document.",
      "createdAt": "2020-03-04T19:59:03Z",
      "updatedAt": "2020-03-05T17:38:02Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "b856c17692bc7e0445c3db4aa89fef82823978ae",
      "headRepository": "stevomatthews/srt-rfc",
      "headRefName": "master",
      "headRefOid": "6ea8168c8217a46057726da06824817d5550d1c6",
      "closedAt": "2020-03-05T17:38:01Z",
      "mergedAt": "2020-03-05T17:38:01Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "759484919c28e615a0610f9acc2d808240106335"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NDMyMjI3",
          "commit": {
            "abbreviatedOid": "51d9ced"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-05T09:57:36Z",
          "updatedAt": "2020-03-05T10:47:37Z",
          "comments": [
            {
              "originalPosition": 191,
              "body": "```suggestion\r\n  (1) If the handshake control packet is the INDUCTION message, this field is \r\n```",
              "createdAt": "2020-03-05T09:57:36Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            },
            {
              "originalPosition": 230,
              "body": "Why \"Wave a hand\"?\r\n```suggestion\r\n | 0x00000000 | WAVEHAND                    |\r\n```",
              "createdAt": "2020-03-05T09:58:15Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            },
            {
              "originalPosition": 627,
              "body": "\"only\" is used twice",
              "createdAt": "2020-03-05T10:36:06Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            },
            {
              "originalPosition": 709,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-05T10:37:29Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            },
            {
              "originalPosition": 739,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-05T10:37:40Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            },
            {
              "originalPosition": 841,
              "body": "This paragraph was moved into the \"SRT Data Transmission and Control\" section above (line 831).\r\nSo this is a repetition.",
              "createdAt": "2020-03-05T10:40:29Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            },
            {
              "originalPosition": 888,
              "body": "Maybe \"Error code\" is a better name then?",
              "createdAt": "2020-03-05T10:41:16Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            },
            {
              "originalPosition": 1044,
              "body": "This part starting from \"Packets are inserted ..\" is deleted. Was it an intent?",
              "createdAt": "2020-03-05T10:44:15Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            },
            {
              "originalPosition": 1176,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-05T10:44:47Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            },
            {
              "originalPosition": 1184,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-05T10:44:55Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            },
            {
              "originalPosition": 694,
              "body": "This line is 77 characters in width. The conversion to IETF txt format requires 72.\r\nMaybe we can fix it this way:\r\n```\r\n+-+-+-+-+-+-+-+-+SRT Header-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ \r\n```",
              "createdAt": "2020-03-05T10:47:04Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            },
            {
              "originalPosition": 699,
              "body": " CIF = None to reduce the width?",
              "createdAt": "2020-03-05T10:47:20Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NTU3NTU5",
          "commit": {
            "abbreviatedOid": "51d9ced"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-05T13:16:30Z",
          "updatedAt": "2020-03-05T13:16:31Z",
          "comments": [
            {
              "originalPosition": 819,
              "body": "Section anchor has been changed.\r\n```suggestion\r\nAdditionally, TsbPd ({{tsbpd}}) and TL Packet drop ({{too-late-packet-drop}}) mechanisms are used \r\n```",
              "createdAt": "2020-03-05T13:16:30Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NjM4ODYw",
          "commit": {
            "abbreviatedOid": "51d9ced"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-05T14:58:19Z",
          "updatedAt": "2020-03-05T14:58:20Z",
          "comments": [
            {
              "originalPosition": 799,
              "body": "```suggestion\r\nThe concept of the message in SRT comes from UDT ({{GHG04b}}). In this mode a single \r\n```",
              "createdAt": "2020-03-05T14:58:20Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NjYwNzA2",
          "commit": {
            "abbreviatedOid": "51d9ced"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-05T15:22:17Z",
          "updatedAt": "2020-03-05T15:22:18Z",
          "comments": [
            {
              "originalPosition": 230,
              "body": "This is how it is referred to in Mikolaj's handshake document.",
              "createdAt": "2020-03-05T15:22:17Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NjYzMDIy",
          "commit": {
            "abbreviatedOid": "51d9ced"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-05T15:24:50Z",
          "updatedAt": "2020-03-05T15:24:50Z",
          "comments": [
            {
              "originalPosition": 627,
              "body": "Good catch!\r\n```suggestion\r\nThe sender only acknowledges the receipt of Full ACK packets (see ACKACK).\r\n```",
              "createdAt": "2020-03-05T15:24:50Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NjY5MzY1",
          "commit": {
            "abbreviatedOid": "e060792"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-05T15:31:56Z",
          "updatedAt": "2020-03-05T15:31:57Z",
          "comments": [
            {
              "originalPosition": 841,
              "body": "```suggestion\r\n```",
              "createdAt": "2020-03-05T15:31:57Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5Njc1NjY1",
          "commit": {
            "abbreviatedOid": "e042709"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-05T15:39:03Z",
          "updatedAt": "2020-03-05T15:39:04Z",
          "comments": [
            {
              "originalPosition": 1044,
              "body": "Will replace",
              "createdAt": "2020-03-05T15:39:03Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NzY2OTY3",
          "commit": {
            "abbreviatedOid": "88b0d0e"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-05T17:24:50Z",
          "updatedAt": "2020-03-05T17:24:51Z",
          "comments": [
            {
              "originalPosition": 355,
              "body": "PNPID reference was here",
              "createdAt": "2020-03-05T17:24:50Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NzY5MjYw",
          "commit": {
            "abbreviatedOid": "88b0d0e"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-05T17:28:09Z",
          "updatedAt": "2020-03-05T17:28:10Z",
          "comments": [
            {
              "originalPosition": 368,
              "body": "SP800-38A reference is missing now",
              "createdAt": "2020-03-05T17:28:10Z",
              "updatedAt": "2020-03-05T17:35:51Z"
            }
          ]
        }
      ]
    },
    {
      "number": 27,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg0MjY4ODgx",
      "title": "Updates on Security Considerations",
      "url": "https://github.com/Haivision/srt-rfc/pull/27",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Co-authored-by: Joonwoong Kim <joonwoong.kim@sktelecom.com>",
      "createdAt": "2020-03-05T13:14:39Z",
      "updatedAt": "2020-03-05T14:20:01Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "c84c29bcdbb09f996ae448f5dfbfffe41825bbaf",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "joonwoong/security",
      "headRefOid": "8176d93965511ddb0a4450a4000343670a788396",
      "closedAt": "2020-03-05T14:19:57Z",
      "mergedAt": "2020-03-05T14:19:57Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "571df57c219c201570b87ffe7e70461f052cf1a1"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 28,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg0MzIxMTk5",
      "title": "Corrections of the KK field",
      "url": "https://github.com/Haivision/srt-rfc/pull/28",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Co-authored-by: Jean Dube <jdube@haivision.com>",
      "createdAt": "2020-03-05T14:52:34Z",
      "updatedAt": "2020-03-06T10:33:37Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "759484919c28e615a0610f9acc2d808240106335",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/jean-encrypt",
      "headRefOid": "38c5fd3abb2a58d1bd4dcce0e771ac1910513c32",
      "closedAt": "2020-03-06T10:33:34Z",
      "mergedAt": "2020-03-06T10:33:34Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "abe8b6902798d93aa64ef0a10d903ca763e85693"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5Nzg2NzYy",
          "commit": {
            "abbreviatedOid": "38d61af"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-05T17:53:45Z",
          "updatedAt": "2020-03-05T17:53:45Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "encrypted with an even key, and \"10b\" is used for odd key encryption.\r\n  The value \"11b\" (even and odd keys) is only used in KM control packets.",
              "createdAt": "2020-03-05T17:53:45Z",
              "updatedAt": "2020-03-06T10:18:13Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5Nzg3MzQ1",
          "commit": {
            "abbreviatedOid": "38d61af"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-03-05T17:54:39Z",
          "updatedAt": "2020-03-05T17:54:40Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "encrypted with an even key, and \"10b\" is used for odd key encryption.",
              "createdAt": "2020-03-05T17:54:40Z",
              "updatedAt": "2020-03-06T10:18:13Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5Nzg3NDk4",
          "commit": {
            "abbreviatedOid": "021b56b"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Minor edits.",
          "createdAt": "2020-03-05T17:54:53Z",
          "updatedAt": "2020-03-05T17:54:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 29,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg0MzI5Njgy",
      "title": "Added contributors and acknowledgements",
      "url": "https://github.com/Haivision/srt-rfc/pull/29",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-05T15:06:25Z",
      "updatedAt": "2020-03-05T15:09:06Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "571df57c219c201570b87ffe7e70461f052cf1a1",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/contributors",
      "headRefOid": "53214b2d1d27a07f6d9ad8a53b1f9c831f620588",
      "closedAt": "2020-03-05T15:09:00Z",
      "mergedAt": "2020-03-05T15:09:00Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "074762f2f52d9285fbd6f9b039b979995f5c4777"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 30,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg0MzM1MTY5",
      "title": "Added a reference to SRT Tech Overview",
      "url": "https://github.com/Haivision/srt-rfc/pull/30",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-05T15:16:09Z",
      "updatedAt": "2020-03-05T15:17:53Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "074762f2f52d9285fbd6f9b039b979995f5c4777",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/srt-to",
      "headRefOid": "2a7ce45c8ed48067afe8edaa1b4569256bcef05a",
      "closedAt": "2020-03-05T15:17:50Z",
      "mergedAt": "2020-03-05T15:17:50Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "b856c17692bc7e0445c3db4aa89fef82823978ae"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 31,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg0NTMwMDA5",
      "title": "Added Introduction",
      "url": "https://github.com/Haivision/srt-rfc/pull/31",
      "state": "MERGED",
      "author": "stevomatthews",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Includes new folder with images in SVG Tiny 1.2 format.",
      "createdAt": "2020-03-05T22:20:44Z",
      "updatedAt": "2020-03-06T10:33:00Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "759484919c28e615a0610f9acc2d808240106335",
      "headRepository": "stevomatthews/srt-rfc",
      "headRefName": "master",
      "headRefOid": "e550f95ae7ef06d83945fa6a3d9f259e7056fab3",
      "closedAt": "2020-03-06T10:33:00Z",
      "mergedAt": "2020-03-06T10:32:59Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "7ee70755408592e24e6ec4b61ccc0474d14d9eb7"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 32,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg0NzU5NTA0",
      "title": "Renamed the document: -00 suffix",
      "url": "https://github.com/Haivision/srt-rfc/pull/32",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-06T10:58:28Z",
      "updatedAt": "2020-03-06T11:50:26Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "abe8b6902798d93aa64ef0a10d903ca763e85693",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "max/rename-00",
      "headRefOid": "3ac17b86a7100773bba8eb286b489fa658f316fc",
      "closedAt": "2020-03-06T11:50:22Z",
      "mergedAt": "2020-03-06T11:50:22Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "18b4506bb55442eeef00bf9e7f06f40e9661bde3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 33,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg1Mzk3NjE5",
      "title": "Fix references",
      "url": "https://github.com/Haivision/srt-rfc/pull/33",
      "state": "MERGED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "These commits try to describe the rfc with more correct references.",
      "createdAt": "2020-03-09T05:46:20Z",
      "updatedAt": "2020-03-09T07:21:06Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "aff7fd4da16b1026c867342fbe7f62e2860bc229",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "fix-references",
      "headRefOid": "0eb0625561c161e310a5b65a1ff55b74f1381846",
      "closedAt": "2020-03-09T07:21:06Z",
      "mergedAt": "2020-03-09T07:21:06Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "a961c643dad6ebcc1b94cf6f5222093bf8b49878"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 35,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzg1NDkxMzk5",
      "title": "Submission tool fixes",
      "url": "https://github.com/Haivision/srt-rfc/pull/35",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-03-09T10:06:52Z",
      "updatedAt": "2020-03-09T10:07:59Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "a961c643dad6ebcc1b94cf6f5222093bf8b49878",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "max/submission-tool-fixes",
      "headRefOid": "a5fbccc76abe7344631c0ac5924deabf920e1a1e",
      "closedAt": "2020-03-09T10:07:55Z",
      "mergedAt": "2020-03-09T10:07:55Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "e48a13534308feab5a7dbe81fec6c2591098117e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 36,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk1NTE2ODkw",
      "title": "Initial description of the CC",
      "url": "https://github.com/Haivision/srt-rfc/pull/36",
      "state": "MERGED",
      "author": "Sorkanius",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Overall description of the CC algorithm added using the references. Explaining main variables involved and procedure on the three states: \r\n\r\n* Slow Start \r\n* Congestion Avoidance\r\n* Slow Down\r\n\r\n(Feedback appreciated :D)\r\n",
      "createdAt": "2020-03-30T09:19:23Z",
      "updatedAt": "2020-04-06T09:56:03Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "6fc2b84b3e0cdf5c16c99821e1f52a53c142a8c7",
      "headRepository": null,
      "headRefName": "srt-cc",
      "headRefOid": "107b2390db9ef734402e48bf23ebabd23ccb3bac",
      "closedAt": "2020-03-30T09:39:33Z",
      "mergedAt": "2020-03-30T09:39:33Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "d7eb12e38375be8469b98cd85479126efa127976"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 37,
      "id": "MDExOlB1bGxSZXF1ZXN0Mzk2MzM3OTQ5",
      "title": "Section 4.11 reorganization into LiveCC and FileCC",
      "url": "https://github.com/Haivision/srt-rfc/pull/37",
      "state": "MERGED",
      "author": "Sorkanius",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "With the section 4.11 being previously expanded, it has been split now into two sub sections: LiveCC and FileCC",
      "createdAt": "2020-03-31T13:31:26Z",
      "updatedAt": "2020-04-06T09:55:59Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "d7eb12e38375be8469b98cd85479126efa127976",
      "headRepository": null,
      "headRefName": "split-CC-section",
      "headRefOid": "d5dca8c8c2a7f986bde6a3c98f0d4dc78538604f",
      "closedAt": "2020-04-01T19:50:42Z",
      "mergedAt": "2020-04-01T19:50:42Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "867a59cadfae4ca6b905d8ac27133576f4c17834"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 38,
      "id": "MDExOlB1bGxSZXF1ZXN0NDA0MDUxMTk0",
      "title": "remove .DS_Store",
      "url": "https://github.com/Haivision/srt-rfc/pull/38",
      "state": "MERGED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": ".... and added it to .gitignore.",
      "createdAt": "2020-04-16T00:19:18Z",
      "updatedAt": "2020-04-20T07:32:10Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "867a59cadfae4ca6b905d8ac27133576f4c17834",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "remove-ds-store",
      "headRefOid": "b432d092f4c14ad73c8b123e9858a3dc68da404d",
      "closedAt": "2020-04-20T07:32:10Z",
      "mergedAt": "2020-04-20T07:32:10Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "c5722426ea6689dcae1568091e857188a76d32d0"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 41,
      "id": "MDExOlB1bGxSZXF1ZXN0NDM5Njc0ODQ5",
      "title": "add encryption section",
      "url": "https://github.com/Haivision/srt-rfc/pull/41",
      "state": "MERGED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "justinjoy",
        "maxsharabayko"
      ],
      "labels": [],
      "body": "Note that mostly it was copied from srt document and it doesn't have ascii-drawing figures.\r\nThat should be added with different commits.\r\n\r\n",
      "createdAt": "2020-06-25T05:33:43Z",
      "updatedAt": "2020-10-14T13:16:22Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "f50a234d7f9b105ad570d4850829254f6c0436da",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "add-encryption-section",
      "headRefOid": "02c64c6eb01a1f043828d253abfdd8a9a0f3bbbc",
      "closedAt": "2020-08-12T07:32:11Z",
      "mergedAt": "2020-08-12T07:32:11Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "22565813252907baf7ca13d0d9554eda81cb24d3"
      },
      "comments": [
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "Is it a draft or ready to merge? I see some \"TODOs\".\r\nI was also thinking that encryption might be a separate RFC... Although would be tricky \ud83e\udd14 ",
          "createdAt": "2020-06-25T11:02:29Z",
          "updatedAt": "2020-06-25T11:02:29Z"
        },
        {
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "body": "> Is it a draft or ready to merge? I see some \"TODOs\".\r\n\r\nGood point. The purpose of this commit is to start a discussion before converting drawings to ascii.\r\nI'd like to ask your opinion about how we can handle the encryption section.\r\n\r\n> I was also thinking that encryption might be a separate RFC... Although would be tricky \ud83e\udd14\r\n\r\nI agreed that the separated RFC for encryption is a good way. (but I don't think that is tricky from the point of rfc, that should be a normal process :)\r\n\r\nThen, I think we need to make the current draft handle only plain data before submitting it.\r\n",
          "createdAt": "2020-06-25T11:51:06Z",
          "updatedAt": "2020-06-25T11:51:06Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 46,
      "id": "MDExOlB1bGxSZXF1ZXN0NDUzMjIzNjc2",
      "title": "Applied corrections from Joonwoong",
      "url": "https://github.com/Haivision/srt-rfc/pull/46",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "#### 1. clause 1.1 and 1.2\r\n\"Like QUIC, SRT[SRTSRC] uses UDP instead\r\nof the TCP transport protocol, but includes features which assure more reliable delivery.\"\r\n-> Such as...? Reviewers may require clarification.\r\n\r\nMAX: Fixed\r\n\r\n\"SRT includes a mechanism that recreates the signal characteristics on\r\nthe receiver side, reducing the need for buffering.\"\r\n->Do we have any details for this in the draft? If not, do you think we need to add it? Otherwise we'd better to delete this sentence.\r\n\r\nMAX: Fixed\r\n\r\n#### 2. clause 3.2\r\n\"The types of SRT control packets are shown in Table 1. The value\r\n\"0x7ffff\" is reserved for a user-defined type.\"\r\n-> 0x7fff\r\n\r\nMAX: Fixed\r\n\r\npacket type: MSmsg?? \r\n-> Is it correct? HSmsg??)\r\n\r\nMAX: MSmsg is correct, but not described in RFC. Raised issue #45.\r\n\r\n#### 3. clause 3.2.1.2\r\nNeed to improve/correct formats. \r\n\r\nMAX: done.\r\n\r\n#### 4. clause 3.2.3\r\nPackets Receiving Rate, Receiving Rate \r\n-> What's difference?\r\n\r\nMAX: Packets receiving rate is in packets/second, while the receiving rate is in bytes per second).\r\nThe calculation of both reuires a separate description though.\r\n\r\n\"see ACKACK\" -> proper link to the clause is required\r\n\r\nMAX: fixed\r\n\r\n#### 5. clause 4\r\n\"the sender and receiver MUST handle control packets, timers,\r\nand buffers for the connection as specified in this section.\"\r\n-> Please delete MUST. I guess we can delete all the normative languages, because it is not a standard track. Not 100% certain, but..\r\n\r\nMAX: Not sure as well. Let's keep it.\r\n\r\n#### 6. clause 4.1\r\n\"Multiple SRT sockets may share the same UDP socket so that the\r\npackets received to this UDP socket will be correctly dispatched to\r\nthe SRT socket they are currently destined.\"\r\n-> the SRT sockets (\"s\" for plural)\r\n\r\nMAX: Fixed\r\n\r\n\"These IDs are then used in the Destination Socket ID field of every\r\ncontrol and data packet\"\r\n->fields of control and data packets (\"s\" for plural)\r\n\r\nMAX: Looks correct. The \"every control and data packet\" has a single form because of \"every\".\r\n\r\n#### 7. clause 4.3\r\n\"SRT is a connection protocol\" \r\n-> connection-oriented protocol?\r\n\r\nMAX: Fixed\r\n\r\n\"The specification of the cipher family and block size is decided by\r\nthe Sender.\"\r\n->Initiator/responder, caller/listener, but now sender? Needs clarification of terms, or unified/consistent uses for understanding.\r\n\r\nMAX: The Sender encrypts the packets it sends, therefore Sender.\r\n\r\nCookie \r\n-> RFC4987 referecne may be required?\r\n\r\nMAX: Added\r\n\r\n#### 8. clause 4.3.2.\r\n\"_serial_\" \"_parallel_\" -> format character? Please remove, if it's not intended.\r\n(other clauses as well.. _waving_)\r\n\r\nMAX: Fixed\r\n\r\n#### 9. clause 4.3.2.1\r\n\"Encryption field: advertised \"PBKEYLEN\".\r\n\r\n->Handshake type: in table 4, there is no \"URQ_\", but there are three instances using URQ_, such as URQ_AGREEMENT. Need clarification/corrections.\r\n\r\nMAX: Fixed both.\r\n\r\n#### 10. clause 4.3.2.2\r\nAttention\r\n\"Receives CONCLUSION message with HSREQ\" \r\n-> Full stop mark missing.\r\n\r\nMAX: Fixed\r\n\r\n#### 11. clause 4.5.1\r\n\"it is worth noting that TsbpdDelay...\" \r\n-> Capitalization is needed.\r\n\r\nMAX: Fixed\r\n\r\n#### 12. clause 4.8.1\r\n\"A light ACK is a shorter ACK (header + 1\r\nx 32-bit field). It does not trigger an ACKACK.\"\r\n-> Is \"x\" means \"times\"? If so, which one is correct, (header + 1) x field or header + (1 x field)?\r\n\r\nMAX: Fixed\r\n\r\n#### 13. clause 4.8.2\r\n\"from the scheduled for\r\nthe first transmission list.\"\r\n-> scheduled for the first time transmission list?\r\n\r\nMAX: Fixed\r\n\r\n#### 14. clause 4.11\r\n\"Although certain ...\" \r\n-> \"Certain ...\"\r\n\r\nMAX: Fixed\r\n\r\nFor live transmission mode, there is no explicit congestion control mechanism, right? Then can we claim that SRT does have \"enhanced congestion control\", considering the live mode is most useful/important use cases compared to other protocols? This is just a question.\r\n\r\nMAX: \"enhanced congestion control\" would require additional clarifications. Let's focus on this section further on.\r\n\r\n#### 15.\r\n-Need references for \"CUBIC\" and \"BBR\"\r\n-replace \"doesn't\" with \"does not\" in a few occasions.\r\n\r\nMAX: done",
      "createdAt": "2020-07-20T09:04:16Z",
      "updatedAt": "2020-07-24T08:45:48Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "c5722426ea6689dcae1568091e857188a76d32d0",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "max/joonwoong-edits",
      "headRefOid": "ed79d2fdfc315784a2850adb3348ba6f52cc95e3",
      "closedAt": "2020-07-24T08:45:43Z",
      "mergedAt": "2020-07-24T08:45:43Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "4d897c63a12acf9120ebcfbbabb66febe519666d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 50,
      "id": "MDExOlB1bGxSZXF1ZXN0NDY2MTY0Njc2",
      "title": "Described HS Extension message flags",
      "url": "https://github.com/Haivision/srt-rfc/pull/50",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "maxsharabayko"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2020-08-11T15:05:44Z",
      "updatedAt": "2020-10-14T13:16:22Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "4d897c63a12acf9120ebcfbbabb66febe519666d",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "max/hs-ext-msg-flags",
      "headRefOid": "907568b698494d54e931a0be53b6faca083b2251",
      "closedAt": "2020-08-11T15:38:12Z",
      "mergedAt": "2020-08-11T15:38:12Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "f50a234d7f9b105ad570d4850829254f6c0436da"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 51,
      "id": "MDExOlB1bGxSZXF1ZXN0NDY5NTk5NDg1",
      "title": "Restructuring the encryption section.",
      "url": "https://github.com/Haivision/srt-rfc/pull/51",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Fixed the Key Material Exchange extension message format (Resv2 and Resv3) were missing.\r\n- Removed redundant description of the KM Exchange fields.\r\n- Added Terms definitions\r\n- Overall edits",
      "createdAt": "2020-08-18T16:13:09Z",
      "updatedAt": "2020-08-18T16:28:35Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "855696a660c265ad1c11e4ffdfd18715e5dc8741",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/enc-fixes",
      "headRefOid": "53c92632ea6b25c2da75a16c9fc27d8d1de087d5",
      "closedAt": "2020-08-18T16:28:31Z",
      "mergedAt": "2020-08-18T16:28:31Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "2ac88dde6b14b2d42d5bd8f27c89f21b564e1627"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 52,
      "id": "MDExOlB1bGxSZXF1ZXN0NDcyNjE5NDA0",
      "title": "Restructuring the encryption section",
      "url": "https://github.com/Haivision/srt-rfc/pull/52",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "maxsharabayko"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2020-08-24T16:06:05Z",
      "updatedAt": "2020-10-14T13:15:31Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "262412c7925bd9419dbcf349ced7535621d73993",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxim/encryption",
      "headRefOid": "c22ec241831b9a3a9c1037f5259b80ab6e6f33bc",
      "closedAt": "2020-09-09T09:22:25Z",
      "mergedAt": "2020-09-09T09:22:25Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "8df9309dc3e5e4a49ad6550548d70794e6835425"
      },
      "comments": [
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "- [x] Page 46:\r\n\r\n5.1.6 KM Refresh:\r\n\r\nA statement \"a bit before and a bit after\" is kinda clumsy. Better do:\r\n\r\nBoth keys live in parallel for the period of transmitting the number of packets\r\nconfigured as \"pre-announcement\" before and after the switch point.\r\n\r\nI'd even recommend mentioning that there are two configuration data for that:\r\n\r\n - KM Refresh period: number of packets to be sent between two consecutive switch points\r\n - KM Pre-announcement: number of packets before switch point when the new key is announced\r\nand number of packets after switch point to decommission the old key\r\n\r\nA diagram might also be a good idea, something like this:\r\n\r\n```\r\n             /----/    <-- KM Pre-announce  -------->    /----/\r\n--------|----|----|--------------------------------------|----|----|-------------------\r\n             /------------------------------------------------/  <-- KM Refresh rate\r\n```",
          "createdAt": "2020-09-03T09:16:57Z",
          "updatedAt": "2020-09-03T10:54:26Z"
        },
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "- [x] 5.2.2 Encrypting the payload\r\nAES-ECB is introduced here??? ECB does not use an IV.\r\nAt this level of details ECB is used to encrypt the 128-bit counter that is XORed with the payload, not the payload directly. Wikipedia has a good description of the [block cipher mode of operation](https://en.wikipedia.org/wiki/Block_cipher_mode_of_operation).\r\nAES-CTR was not present in older versions of OpenSSL and SRT had an internal implementation of CTR using ECB. Maybe this is where this description is coming from, or this is just a typo.",
          "createdAt": "2020-09-03T09:19:48Z",
          "updatedAt": "2020-09-03T15:24:03Z"
        },
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "PDF version: [draft-sharabayko-mops-srt.pdf](https://github.com/Haivision/srt-rfc/files/5174206/draft-sharabayko-mops-srt.pdf)\r\n",
          "createdAt": "2020-09-04T10:22:46Z",
          "updatedAt": "2020-09-04T10:22:46Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyOTE2MjIx",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-04T20:11:04Z",
          "updatedAt": "2020-09-04T20:11:05Z",
          "comments": [
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nThe Stream ID handshake extension message can be used to identify the stream content. \r\nThe Stream ID value can be free-form, but there is also a recommended convention\r\nthat can be used to achieve interoperability.\r\n```",
              "createdAt": "2020-09-04T20:11:04Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyOTE4MTg3",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-04T20:15:37Z",
          "updatedAt": "2020-09-04T20:15:38Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "```suggestion\r\nThe extension contents are a sequence of UTF-8 characters. The maximum allowed size of the\r\n```",
              "createdAt": "2020-09-04T20:15:38Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyOTE4Mjk4",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-04T20:15:52Z",
          "updatedAt": "2020-09-04T20:15:52Z",
          "comments": [
            {
              "originalPosition": 59,
              "body": "```suggestion\r\nStreamID extension is 512 bytes.\r\n```",
              "createdAt": "2020-09-04T20:15:52Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyOTE4NjI4",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-04T20:16:43Z",
          "updatedAt": "2020-09-04T20:16:44Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "```suggestion\r\nThe maximum allowed size of the StreamID extension is 512 bytes. The actual size is determined\r\n```",
              "createdAt": "2020-09-04T20:16:44Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyOTIwMDI3",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-04T20:20:07Z",
          "updatedAt": "2020-09-04T20:20:08Z",
          "comments": [
            {
              "originalPosition": 97,
              "body": "```suggestion\r\n: The identifier of a group whose members include the sender socket that is making a connection.\r\n```",
              "createdAt": "2020-09-04T20:20:07Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyOTIwOTgw",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-04T20:22:26Z",
          "updatedAt": "2020-09-04T20:22:27Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "```suggestion\r\n- Not used with broadcast groups.\r\n- Defines the link priority in backup groups.\r\n- Not yet defined (reserved for future) for any other cases.\r\n```",
              "createdAt": "2020-09-04T20:22:26Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyOTIxMzMx",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-04T20:23:21Z",
          "updatedAt": "2020-09-04T20:23:21Z",
          "comments": [
            {
              "originalPosition": 169,
              "body": "Should that \"previous design\" be identified?",
              "createdAt": "2020-09-04T20:23:21Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTAzNjIw",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T21:25:26Z",
          "updatedAt": "2020-09-08T21:25:27Z",
          "comments": [
            {
              "originalPosition": 87,
              "body": "```suggestion\r\n 0                   1                   2                   3\r\n 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\r\n```",
              "createdAt": "2020-09-08T21:25:26Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTEyNTM2",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T21:42:31Z",
          "updatedAt": "2020-09-08T21:42:32Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "```suggestion\r\nIf an encrypted connection is being established, the Key Material (KM) is first transmitted as a \r\nHandshake Extension message. This extension is not supplied for unprotected connections.\r\n```",
              "createdAt": "2020-09-08T21:42:31Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTEzNDIx",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T21:44:14Z",
          "updatedAt": "2020-09-08T21:44:15Z",
          "comments": [
            {
              "originalPosition": 121,
              "body": "```suggestion\r\n 0 1 2 3 4 5 6 7 \r\n```",
              "createdAt": "2020-09-08T21:44:15Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTE0Njg2",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T21:46:42Z",
          "updatedAt": "2020-09-08T21:46:42Z",
          "comments": [
            {
              "originalPosition": 169,
              "body": "Might be useful for traceability to identify this \"previous design\".",
              "createdAt": "2020-09-08T21:46:42Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTE2MzI0",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T21:49:59Z",
          "updatedAt": "2020-09-08T21:50:00Z",
          "comments": [
            {
              "originalPosition": 324,
              "body": "```suggestion\r\nSRT encrypts only the payload of SRT data packets ({{data-pkt}}), while the header is left unencrypted.\r\n```",
              "createdAt": "2020-09-08T21:49:59Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTE2Mzgy",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T21:50:08Z",
          "updatedAt": "2020-09-08T21:50:09Z",
          "comments": [
            {
              "originalPosition": 327,
              "body": "```suggestion\r\nNo constraints apply to the payload of SRT data packets as no padding of the payload is required by counter mode ciphers.\r\n```",
              "createdAt": "2020-09-08T21:50:08Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTE4NDE4",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T21:54:39Z",
          "updatedAt": "2020-09-08T21:54:40Z",
          "comments": [
            {
              "originalPosition": 372,
              "body": "```suggestion\r\nthe short-lived key since no additional party can join a stream in progress. The keying material\r\n```",
              "createdAt": "2020-09-08T21:54:39Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTE4Nzg5",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T21:55:26Z",
          "updatedAt": "2020-09-08T21:55:27Z",
          "comments": [
            {
              "originalPosition": 383,
              "body": "```suggestion\r\nThe Key Encrypting Key (KEK) is derived from a secret (passphrase) shared between the sender and the receiver.\r\nThe KEK provides access to the Stream Encrypting Key, which in turn provides access\r\n```",
              "createdAt": "2020-09-08T21:55:26Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTIwNzg2",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T21:59:33Z",
          "updatedAt": "2020-09-08T21:59:34Z",
          "comments": [
            {
              "originalPosition": 389,
              "body": "My understanding is that PBKDF2 is the second of two functions defined in RFC 2898, not \"version 2.0\" (i.e. in future, it might happen that there is a version x.y of PBKDF2). Perhaps just drop the \"v2.0\" (the PBKDF2 in parentheses is specific enough).",
              "createdAt": "2020-09-08T21:59:33Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTIxMDY1",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T22:00:04Z",
          "updatedAt": "2020-09-08T22:00:05Z",
          "comments": [
            {
              "originalPosition": 391,
              "body": "```suggestion\r\na key length value (KLen). The PBKDF2 function hashes the passphrase to make a long string,\r\n```",
              "createdAt": "2020-09-08T22:00:04Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTIxNTAz",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T22:01:02Z",
          "updatedAt": "2020-09-08T22:01:02Z",
          "comments": [
            {
              "originalPosition": 445,
              "body": "```suggestion\r\nThe short lived SEK is regenerated for cryptographic reasons when a pre-determined number of packets has been\r\n```",
              "createdAt": "2020-09-08T22:01:02Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTI1NjA1",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T22:10:03Z",
          "updatedAt": "2020-09-08T22:10:04Z",
          "comments": [
            {
              "originalPosition": 464,
              "body": "```suggestion\r\nThere are two variables used to determine the KM Refresh timing:\r\n\r\n- KM Refresh Period specifies the number of packets to be sent before switching to the new SEK,\r\n\r\n- KM Pre-Announcement Period specifies when a new key is announced a number of packets before switchover. The same value is used to determine when to decommission the old key after switchover.\r\n\r\nThe recommended KM Refresh Period is after 2^25 packets encrypted with the same SEK are sent.\r\nThe recommended KM Pre-Announcement Period is 4000 packets (i.e. a new key is generated,\r\nwrapped, and sent at 2^25 minus 4000 packets; the old key is decommissioned at 2^25 plus 4000 packets).\r\n```",
              "createdAt": "2020-09-08T22:10:03Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTI2NzI4",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T22:12:36Z",
          "updatedAt": "2020-09-08T22:12:37Z",
          "comments": [
            {
              "originalPosition": 472,
              "body": "```suggestion\r\nOnce the sender gets to the 2^25th packet using the odd key (key #1), it will then start to\r\nsend packets with the even key (key #2), knowing that the receiver has what it needs to\r\ndecrypt them. This happens transparently, from one packet to the next.\r\n```",
              "createdAt": "2020-09-08T22:12:36Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTI3MTU5",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T22:13:33Z",
          "updatedAt": "2020-09-08T22:13:34Z",
          "comments": [
            {
              "originalPosition": 479,
              "body": "```suggestion\r\nAt 2^25 plus 4000 packets the first key will be decommissioned automatically.\r\n```",
              "createdAt": "2020-09-08T22:13:34Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTI5MDc5",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T22:18:26Z",
          "updatedAt": "2020-09-08T22:18:27Z",
          "comments": [
            {
              "originalPosition": 486,
              "body": "```suggestion\r\nBoth keys live in parallel for two times the Pre-Announcement Period (e.g. 4000 packets before the key switch, and 4000 packets after). This is to allow for packet retransmission. It is possible for packets with the older key to arrive\r\n```",
              "createdAt": "2020-09-08T22:18:26Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTI5Mjk5",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T22:19:01Z",
          "updatedAt": "2020-09-08T22:19:02Z",
          "comments": [
            {
              "originalPosition": 589,
              "body": "```suggestion\r\n### Generating the Stream Encrypting Key\r\n```",
              "createdAt": "2020-09-08T22:19:02Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTI5NDg2",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T22:19:30Z",
          "updatedAt": "2020-09-08T22:19:30Z",
          "comments": [
            {
              "originalPosition": 673,
              "body": "```suggestion\r\n- PBKDF2 is the PKCS#5 Password Based Key Derivation Function,\r\n```",
              "createdAt": "2020-09-08T22:19:30Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTMwNTMz",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T22:22:04Z",
          "updatedAt": "2020-09-08T22:22:05Z",
          "comments": [
            {
              "originalPosition": 722,
              "body": "```suggestion\r\n- PktSeqNo is the value of the Packet Sequence Number field of the SRT data packet.\r\n```",
              "createdAt": "2020-09-08T22:22:05Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTMwNzI2",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T22:22:32Z",
          "updatedAt": "2020-09-08T22:22:33Z",
          "comments": [
            {
              "originalPosition": 729,
              "body": "```suggestion\r\n### Restoring the Stream Encrypting Key\r\n```",
              "createdAt": "2020-09-08T22:22:33Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTMwODc2",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T22:22:52Z",
          "updatedAt": "2020-09-08T22:22:53Z",
          "comments": [
            {
              "originalPosition": 733,
              "body": "```suggestion\r\nused by the sender. The receiver MUST know the passphrase used by the sender. The remaining information can\r\n```",
              "createdAt": "2020-09-08T22:22:53Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTMzMjI0",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T22:28:20Z",
          "updatedAt": "2020-09-08T22:28:21Z",
          "comments": [
            {
              "originalPosition": 741,
              "body": "```suggestion\r\nThe Key-Encryption Key (KEK) is required to unwrap\r\n```\r\n```suggestion\r\nThe Key-Encryption Key (KEK) required to unwrap the SEK is calculated as:\r\n```",
              "createdAt": "2020-09-08T22:28:20Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTMzMzA3",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T22:28:31Z",
          "updatedAt": "2020-09-08T22:28:32Z",
          "comments": [
            {
              "originalPosition": 757,
              "body": "```suggestion\r\n- PBKDF2 is the PKCS#5 Password Based Key Derivation Function,\r\n```",
              "createdAt": "2020-09-08T22:28:31Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTMzNTQ2",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T22:29:07Z",
          "updatedAt": "2020-09-08T22:29:07Z",
          "comments": [
            {
              "originalPosition": 785,
              "body": "```suggestion\r\nThe decryption of the payload of the SRT data packet is done with AES-CTR\r\n```",
              "createdAt": "2020-09-08T22:29:07Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTMzNzE3",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T22:29:33Z",
          "updatedAt": "2020-09-08T22:29:33Z",
          "comments": [
            {
              "originalPosition": 804,
              "body": "```suggestion\r\n- PktSeqNo is the value of the Packet Sequence Number field of the SRT data packet.\r\n```",
              "createdAt": "2020-09-08T22:29:33Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTM0MDQw",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Minor edits; some require technical review.",
          "createdAt": "2020-09-08T22:30:15Z",
          "updatedAt": "2020-09-08T22:30:15Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NzY1NjIz",
          "commit": {
            "abbreviatedOid": "dbf49f1"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-09T08:14:41Z",
          "updatedAt": "2020-09-09T08:21:18Z",
          "comments": [
            {
              "originalPosition": 464,
              "body": "> KM Pre-Announcement Period specifies when a new key is announced a number of packets before switchover. The same value is used to determine when to decommission the old key after switchover.\r\n\r\nSounds weird... Maybe:\r\nKM Pre-Announcement Period specifies when a new key is announced in a number of packets before key switchover. The same value is used to determine when to decommission the old key after switchover.",
              "createdAt": "2020-09-09T08:14:41Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            },
            {
              "originalPosition": 673,
              "body": "v2.0 is important \r\n```suggestion\r\n- PBKDF2 is the PKCS#5 Password Based Key Derivation Function v2.0,\r\n```",
              "createdAt": "2020-09-09T08:19:10Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            },
            {
              "originalPosition": 757,
              "body": "```suggestion\r\n- PBKDF2 is the PKCS#5 Password Based Key Derivation Function v2.0,\r\n```",
              "createdAt": "2020-09-09T08:20:52Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NzcyMzcy",
          "commit": {
            "abbreviatedOid": "e4b3c29"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-09T08:23:16Z",
          "updatedAt": "2020-09-09T08:28:06Z",
          "comments": [
            {
              "originalPosition": 169,
              "body": "Maybe better to say it is a reserved field with value of 0. \ud83e\udd14 ",
              "createdAt": "2020-09-09T08:23:16Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            },
            {
              "originalPosition": 389,
              "body": "Yes, it looks like you are right. Version 2.0 is the version of the `PKCS #5`, which defines the PBKFD2 function.",
              "createdAt": "2020-09-09T08:27:41Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0Nzg1ODU5",
          "commit": {
            "abbreviatedOid": "e41121c"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-09T08:39:55Z",
          "updatedAt": "2020-09-09T08:39:55Z",
          "comments": [
            {
              "originalPosition": 169,
              "body": "Replaced with \"This is a fixed-width field that is reserved for future usage.\"",
              "createdAt": "2020-09-09T08:39:55Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0Nzg4Mzg1",
          "commit": {
            "abbreviatedOid": "e41121c"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-09T08:42:45Z",
          "updatedAt": "2020-09-09T08:42:46Z",
          "comments": [
            {
              "originalPosition": 389,
              "body": "Removed all v2.0 mentions.",
              "createdAt": "2020-09-09T08:42:45Z",
              "updatedAt": "2020-09-09T09:02:42Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0ODIyMDY0",
          "commit": {
            "abbreviatedOid": "c22ec24"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-09T09:21:46Z",
          "updatedAt": "2020-09-09T09:21:47Z",
          "comments": [
            {
              "originalPosition": 464,
              "body": "Applied suggested changes with my \"fix\".",
              "createdAt": "2020-09-09T09:21:46Z",
              "updatedAt": "2020-09-09T09:21:47Z"
            }
          ]
        }
      ]
    },
    {
      "number": 53,
      "id": "MDExOlB1bGxSZXF1ZXN0NDczMjM2MDYw",
      "title": "Added Stream ID HS Extension",
      "url": "https://github.com/Haivision/srt-rfc/pull/53",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2020-08-25T14:17:36Z",
      "updatedAt": "2020-08-25T14:27:10Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "2ac88dde6b14b2d42d5bd8f27c89f21b564e1627",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "max/streamid",
      "headRefOid": "3b5c35487ff3e7535936de5baa649cf8f56bd84f",
      "closedAt": "2020-08-25T14:27:06Z",
      "mergedAt": "2020-08-25T14:27:06Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "eb02bfb7d7f2df5e483433e489c6843f0ac63a60"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 57,
      "id": "MDExOlB1bGxSZXF1ZXN0NDczMjYwMjAw",
      "title": "Handshake Extension: Group Membership",
      "url": "https://github.com/Haivision/srt-rfc/pull/57",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "maxsharabayko"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2020-08-25T14:48:39Z",
      "updatedAt": "2020-10-14T13:15:51Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "eb02bfb7d7f2df5e483433e489c6843f0ac63a60",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "max/groups",
      "headRefOid": "3276df743621b5f3b03d689888294441c3837def",
      "closedAt": "2020-08-25T14:50:43Z",
      "mergedAt": "2020-08-25T14:50:43Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "8f23de4d3a633174ac9def08909b8a859ea3173d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 60,
      "id": "MDExOlB1bGxSZXF1ZXN0NDc1NDcyMjA3",
      "title": "Improved RTT section",
      "url": "https://github.com/Haivision/srt-rfc/pull/60",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mbakholdina"
      ],
      "labels": [],
      "body": "Fixes #59, please review. ",
      "createdAt": "2020-08-28T15:27:29Z",
      "updatedAt": "2021-09-07T09:14:12Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "8f23de4d3a633174ac9def08909b8a859ea3173d",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "mbakholdina/rtt",
      "headRefOid": "4cc6b1133e2c8ca2a04cd2004652b1ff82d97150",
      "closedAt": "2020-09-02T16:59:56Z",
      "mergedAt": "2020-09-02T16:59:56Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "f163776a700552aa7855a27b785cb94d151b49b4"
      },
      "comments": [
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "@maxsharabayko, thank you for the review!\r\n@stevomatthews, could you please help with language review?  ",
          "createdAt": "2020-09-02T09:12:09Z",
          "updatedAt": "2020-09-02T09:12:09Z"
        },
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "@stevomatthews Thank you for the review!\r\n@maxsharabayko Ready to be merged.",
          "createdAt": "2020-09-02T16:08:16Z",
          "updatedAt": "2020-09-02T16:08:16Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NTIxNjg3",
          "commit": {
            "abbreviatedOid": "5fbe2a8"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-01T08:39:38Z",
          "updatedAt": "2020-09-01T09:00:43Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nAn ACK sent by the receiver triggers sending an ACKACK by the sender\r\nwith minimal processing delay. The receiver is expected to receive the ACKACK response\r\nroughly one RTT after the corresponding ACK was sent.\r\n```",
              "createdAt": "2020-09-01T08:39:38Z",
              "updatedAt": "2020-09-02T16:07:30Z"
            },
            {
              "originalPosition": 51,
              "body": "```suggestion\r\ni.e., carried by an incoming ACK.\r\n```",
              "createdAt": "2020-09-01T08:57:20Z",
              "updatedAt": "2020-09-02T16:07:30Z"
            },
            {
              "originalPosition": 55,
              "body": "```suggestion\r\nNote that SRT socket can both send and receive data packets. RTT and RTTVar are updated by the socket both as a sender algorithm (via ACK packet), and as a receiver algorithm (via ACK-ACKACK pair).\r\nWhen an SRT socket receives data, it updates its local RTT and RTTVar, which can be used for its own sender as well.\r\n```",
              "createdAt": "2020-09-01T09:00:03Z",
              "updatedAt": "2020-09-02T16:07:30Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwODI5OTQ2",
          "commit": {
            "abbreviatedOid": "fbf0d4d"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-02T13:40:26Z",
          "updatedAt": "2020-09-02T13:40:27Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "```suggestion\r\nAn ACK sent by the receiver triggers an ACKACK from the sender with \r\nminimal processing delay. The ACKACK response is expected to arrive \r\nat the receiver roughly one RTT after the corresponding ACK was sent.\r\n```",
              "createdAt": "2020-09-02T13:40:26Z",
              "updatedAt": "2020-09-02T16:07:30Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwODM0Nzg2",
          "commit": {
            "abbreviatedOid": "fbf0d4d"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-02T13:45:29Z",
          "updatedAt": "2020-09-02T13:45:30Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nNote that an SRT socket can both send and receive data packets. RTT and RTTVar are updated by the socket based on algorithms for the sender (using ACK packets) and for the receiver (using ACK-ACKACK pairs).\r\n```",
              "createdAt": "2020-09-02T13:45:29Z",
              "updatedAt": "2020-09-02T16:07:30Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwODM1MDQx",
          "commit": {
            "abbreviatedOid": "fbf0d4d"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Minor edits.",
          "createdAt": "2020-09-02T13:45:44Z",
          "updatedAt": "2020-09-02T13:45:44Z",
          "comments": []
        }
      ]
    },
    {
      "number": 63,
      "id": "MDExOlB1bGxSZXF1ZXN0NDc5NDY0ODc2",
      "title": "Small fixes for ACK and NAK",
      "url": "https://github.com/Haivision/srt-rfc/pull/63",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "maxsharabayko"
      ],
      "labels": [],
      "body": "Extracted from #52 ",
      "createdAt": "2020-09-04T08:51:56Z",
      "updatedAt": "2020-10-14T13:15:52Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "f163776a700552aa7855a27b785cb94d151b49b4",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "max/splitting-changes",
      "headRefOid": "094cd3c6c1be081f320c5e2ab0e100f7ffd2916b",
      "closedAt": "2020-09-04T09:02:49Z",
      "mergedAt": "2020-09-04T09:02:49Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "262412c7925bd9419dbcf349ced7535621d73993"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 65,
      "id": "MDExOlB1bGxSZXF1ZXN0NDc5NTczNzk1",
      "title": "Changed packets structure formatting plus minor additions",
      "url": "https://github.com/Haivision/srt-rfc/pull/65",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "maxsharabayko",
        "mbakholdina"
      ],
      "labels": [],
      "body": "- Changed packets structure formatting except KME, StreamID and Group Member Exc. sections\r\n- Minor additions to the main text required for CC section",
      "createdAt": "2020-09-04T10:55:34Z",
      "updatedAt": "2020-10-14T13:15:52Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "262412c7925bd9419dbcf349ced7535621d73993",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "mbakholdina/not-cc-changes",
      "headRefOid": "257cb9a7eb83a7d472c078ce348a42f029aac5f7",
      "closedAt": "2020-09-04T11:19:22Z",
      "mergedAt": "2020-09-04T11:19:22Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "93721404165fa36903b5dd3303f316287f2baf5d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNTYwMDE4",
          "commit": {
            "abbreviatedOid": "cc47233"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-04T11:02:02Z",
          "updatedAt": "2020-09-04T11:03:35Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\n    title: \"BBR: Congestion-Based Congestion Control\"\r\n```",
              "createdAt": "2020-09-04T11:02:02Z",
              "updatedAt": "2020-09-04T11:17:29Z"
            },
            {
              "originalPosition": 732,
              "body": "Unknown reference `default-liveCC`",
              "createdAt": "2020-09-04T11:02:32Z",
              "updatedAt": "2020-09-04T11:17:29Z"
            }
          ]
        }
      ]
    },
    {
      "number": 66,
      "id": "MDExOlB1bGxSZXF1ZXN0NDc5NjY1MTA2",
      "title": "Congestion Control section",
      "url": "https://github.com/Haivision/srt-rfc/pull/66",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mbakholdina"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2020-09-04T13:02:34Z",
      "updatedAt": "2020-10-14T13:11:59Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "9dfba419a8c3d98f57fb4e160c7b66d5b419ccfa",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "mbakholdina/congestion-control",
      "headRefOid": "158dc4f6495f5ff6c4f8a6996095e4d798c9c9cc",
      "closedAt": "2020-09-25T13:35:43Z",
      "mergedAt": "2020-09-25T13:35:43Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "0ceda90c23a6e358109ddd7453244dfec13fdec1"
      },
      "comments": [
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "- No link definition for link ID '{{guanao}}' found on line 2402\r\n- Found no end tag for 'code' (line 2412) - auto-closing it\r\n- Found no end tag for 'code' (line 2418) - auto-closing it\r\n- No link definition for link ID '{{guanao}}, {{ghg04b}}' found on line 2516",
          "createdAt": "2020-09-04T14:01:59Z",
          "updatedAt": "2020-09-04T14:01:59Z"
        },
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "Patch with some fixes\r\n\r\n[patch.diff.zip](https://github.com/Haivision/srt-rfc/files/5175386/patch.diff.zip)\r\n",
          "createdAt": "2020-09-04T14:23:53Z",
          "updatedAt": "2020-09-04T14:23:53Z"
        },
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "@maxsharabayko, @jeandube Thank you for technical review! All the corrections are done.\r\n\r\n@stevomatthews Could you please make a language review? ",
          "createdAt": "2020-09-10T13:59:51Z",
          "updatedAt": "2020-09-10T13:59:51Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNTkxNDA4",
          "commit": {
            "abbreviatedOid": "70aa170"
          },
          "author": "jeandube",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-07T14:20:15Z",
          "updatedAt": "2020-09-07T15:15:26Z",
          "comments": [
            {
              "originalPosition": 285,
              "body": "Shouldn't we mention the application of the minimum NAK Interval setting as implemented (20ms for LiveCC). Even if not a realistic/useful scenario, close peers (TTL<1ms) would generates an unrealistic high NAK rate without the minimum setting.",
              "createdAt": "2020-09-07T14:20:15Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MTY4MDQ5",
          "commit": {
            "abbreviatedOid": "70aa170"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-08T13:58:05Z",
          "updatedAt": "2020-09-08T14:28:50Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "The described goal of the OPC module is rather the goal of the TSBPD mechanism.\r\nThe goal of OPC module is to maintain the sending rate of the original packets as provided on the input unless there is congestion, in which case it has to insert retransmissions in-between. It was already described in the previous paragraph. This sentence is maybe excessive.",
              "createdAt": "2020-09-08T13:58:05Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            },
            {
              "originalPosition": 65,
              "body": "```suggestion\r\nIt is done by adjusting the maximum allowed bandwidth MAX_BW\r\n({{maxbw}}) which limits the maximum allowed bandwidth usage by SRT and is used\r\n```",
              "createdAt": "2020-09-08T13:58:42Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            },
            {
              "originalPosition": 77,
              "body": "A hanging paragraph that loses reference with the context.\r\n```suggestion\r\n\r\nIt is allowed in live mode to drop those packets that can not be delivered\r\nin time ({{too-late-packet-drop}}).\r\n```",
              "createdAt": "2020-09-08T14:00:13Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            },
            {
              "originalPosition": 92,
              "body": "```suggestion\r\npacket loss, the number of packets dropped by SRT, etc., which can be\r\n```",
              "createdAt": "2020-09-08T14:02:13Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            },
            {
              "originalPosition": 130,
              "body": "### TODO:\r\n\r\n- [x] Fix list enumeration in TXT output (all numbers produce \"1\").",
              "createdAt": "2020-09-08T14:15:42Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            },
            {
              "originalPosition": 172,
              "body": "```suggestion\r\nthan expected. Under these conditions, SRT packets would not go out\r\nfast enough due to too low value of the configured bandwidth limitation.\r\n```",
              "createdAt": "2020-09-08T14:18:15Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            },
            {
              "originalPosition": 334,
              "body": "```suggestion\r\nDuring the slow start phase, the packet sending period PKT_SND_PERIOD\r\nis kept at 1 microsecond in order to send packets as fast as possible, but not with infinite rate.\r\n```",
              "createdAt": "2020-09-08T14:23:02Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            },
            {
              "originalPosition": 357,
              "body": "```suggestion\r\n    <CODE BEGINS>\r\n    if (currTime - LastRCTime < RC_INTERVAL)\r\n    {\r\n        Keep the sending rate at the same level;\r\n        Stop;\r\n    }\r\n    <CODE ENDS>\r\n```",
              "createdAt": "2020-09-08T14:26:21Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            },
            {
              "originalPosition": 454,
              "body": "`to_microseconds` is implementation-specific.\r\n```suggestion\r\n    <CODE BEGINS>\r\n    if (currTime - LastRCTime < RC_INTERVAL)\r\n    {\r\n        Keep the sending rate at the same level;\r\n        Stop;\r\n    }\r\n    <CODE ENDS>\r\n```",
              "createdAt": "2020-09-08T14:28:34Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1ODc1MjIz",
          "commit": {
            "abbreviatedOid": "70aa170"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T12:27:10Z",
          "updatedAt": "2020-09-10T12:27:10Z",
          "comments": [
            {
              "originalPosition": 285,
              "body": "Yes, sure, I will make a note about it.",
              "createdAt": "2020-09-10T12:27:10Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1ODk4MTcw",
          "commit": {
            "abbreviatedOid": "70aa170"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T12:54:48Z",
          "updatedAt": "2020-09-10T12:54:49Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "I will delete this paragraph then.",
              "createdAt": "2020-09-10T12:54:48Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1ODk5OTE3",
          "commit": {
            "abbreviatedOid": "70aa170"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T12:56:41Z",
          "updatedAt": "2020-09-10T12:56:41Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "I think my first version is good - it limits the bandwidth usage of SRT by means of introducing maximum allowed bandwidth MAX_BW. Otherwise, \"maximum allowed\" is written twice in one sentence and it complicates it. I will keep the original version.",
              "createdAt": "2020-09-10T12:56:41Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MDQ1OTg1",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T15:17:40Z",
          "updatedAt": "2020-09-10T15:17:42Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nSRT provides certain mechanisms for exchanging feedback on the state of \r\npacket transmission between sender  and receiver. Every 10 milliseconds \r\nthe receiving side sends acknowledgement (ACK) packets ({{ctrl-pkt-ack}}) \r\nto the sender that include the latest values of RTT, RTT variance, available \r\nbuffer size, receiving rate, and estimated link capacity. Similarly, NAK packets \r\n({{ctrl-pkt-nak}}) from the receiver inform the sender of any packet loss during \r\nthe transmission, triggering an appropriate response. These mechanisms provide \r\na solid background for the integration of various congestion control algorithms \r\nin the SRT protocol.\r\n```",
              "createdAt": "2020-09-10T15:17:41Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MDQ3NDc4",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T15:19:09Z",
          "updatedAt": "2020-09-10T15:19:10Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nThere are two groups of congestion control algorithms defined in SRT, \r\ncorresponding to the two modes of operation: live congestion control (LiveCC), \r\nand file transfer congestion control (FileCC).\r\n```",
              "createdAt": "2020-09-10T15:19:10Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MDYwMjI5",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T15:32:27Z",
          "updatedAt": "2020-09-10T15:32:30Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "```suggestion\r\nTo ensure smooth video playback on a receiving peer, SRT in live mode\r\n({{transmission-mode-live}}) must control the sender's buffer level to\r\nprevent overfill and depletion. The pacing control module is\r\ndesigned to send packets as fast as they are submitted by a\r\nvideo application while maintaining a relatively stable buffer level.\r\nWhile this looks like a simple problem, the details of the Automatic \r\nRepeat Request (ARQ) behaviour between input and output of the \r\nSRT sender add some complexity.\r\n```",
              "createdAt": "2020-09-10T15:32:28Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MDY1MDk1",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T15:37:51Z",
          "updatedAt": "2020-09-10T15:37:52Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nSRT needs a certain amount of bandwidth overhead in order to have\r\nspace for the sender to insert packets for retransmission with minimum \r\nimpact on the output rate of the main packet transmission.\r\n```",
              "createdAt": "2020-09-10T15:37:51Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MDY4NDcx",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T15:41:21Z",
          "updatedAt": "2020-09-10T15:41:22Z",
          "comments": [
            {
              "originalPosition": 39,
              "body": "```suggestion\r\nThis balance is achieved by adjusting the maximum allowed bandwidth MAX_BW\r\n({{maxbw}}) which limits the bandwidth usage by SRT. The MAX_BW value is used\r\n```",
              "createdAt": "2020-09-10T15:41:21Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MDcwMDY4",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T15:43:00Z",
          "updatedAt": "2020-09-10T15:43:02Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "```suggestion\r\nby the live congestion control (LiveCC) module to calculate the minimum\r\ninterval between consecutive sent packets PKT_SND_PERIOD.\r\nIn principle, the space between packets determines where\r\nretransmissions can be inserted, and the overhead represents the\r\navailable margin. There is an empiric calculation that defines the\r\ninterval, in microseconds, between two packets to give a certain\r\nbitrate. It's a function of the average packet payload (which\r\nincludes video, audio, etc.) and the configured maximum bandwidth MAX_BW.\r\nSee {{default-liveCC}} for details.\r\n```",
              "createdAt": "2020-09-10T15:43:00Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MDcxMTIz",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T15:44:03Z",
          "updatedAt": "2020-09-10T15:44:04Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "```suggestion\r\nIn live mode, the sender is allowed to drop packets that cannot be delivered\r\nin time ({{too-late-packet-drop}}).\r\n```",
              "createdAt": "2020-09-10T15:44:03Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MDg2NDgy",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T16:00:13Z",
          "updatedAt": "2020-09-10T16:00:14Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "```suggestion\r\nThe combination of pacing control and live congestion control (LiveCC), based\r\non the input rate and an overhead for packets retransmission, helps avoid congestion \r\nduring fluctuations of the source bitrate.\r\n```",
              "createdAt": "2020-09-10T16:00:13Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MDkxNzc1",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T16:05:24Z",
          "updatedAt": "2020-09-10T16:05:25Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "```suggestion\r\nIn live mode over highly variable networks, fairness can be achieved by controlling \r\nthe bitrate of the source encoder at the input of the SRT sender. SRT provides a \r\nvariety of network related statistics, such as RTT estimation, packet loss levels, \r\nthe number of packets dropped, etc., which can be used for making decisions \r\nand adjusting the bitrate in real time.\r\n```",
              "createdAt": "2020-09-10T16:05:24Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTI5NzQ0",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T16:52:50Z",
          "updatedAt": "2020-09-10T16:52:52Z",
          "comments": [
            {
              "originalPosition": 83,
              "body": "```suggestion\r\nThere are several ways of configuring maximum bandwidth (MAX_BW):\r\n\r\n1. MAXBW mode: Set the value explicitly.\r\n\r\n   The recommended default value is 1 Gbps. The default value\r\n   is set only for live transmission mode.\r\n\r\n   Note that this static setting is not well-suited to a variable input,\r\n   like when you change the bitrate on an encoder. Each time the input\r\n   bitrate is configured on the encoder, MAX_BW must also be reconfigured.\r\n\r\n   In MAXBW mode, SRT does not follow any fluctuations in the encoder input\r\n   making it unsuitable for variable bitrate (VBR) encoding.\r\n\r\n2. INPUTBW mode: Set the SRT sender's input rate (INPUT_BW) and OVERHEAD.\r\n```",
              "createdAt": "2020-09-10T16:52:51Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTMyNzY2",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T16:56:35Z",
          "updatedAt": "2020-09-10T16:56:36Z",
          "comments": [
            {
              "originalPosition": 95,
              "body": "```suggestion\r\n3. ESTINPUTBW mode: Measure the SRT sender's input rate internally and set the\r\n   OVERHEAD.\r\n```",
              "createdAt": "2020-09-10T16:56:35Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTM1NzUx",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T17:00:21Z",
          "updatedAt": "2020-09-10T17:00:22Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "```suggestion\r\n4. HYBRIDBW mode: Compare the configured input rate INPUT_BW \r\n   against the estimated bandwidth EST_INPUT_BW, and use the\r\n   maximum of two.\r\n```",
              "createdAt": "2020-09-10T17:00:21Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTM3MjQz",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T17:02:17Z",
          "updatedAt": "2020-09-10T17:02:18Z",
          "comments": [
            {
              "originalPosition": 116,
              "body": "```suggestion\r\nmaximum bandwidth (MAX_BW) as it follows the fluctuations in\r\n```",
              "createdAt": "2020-09-10T17:02:18Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTM4NDQ5",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T17:03:53Z",
          "updatedAt": "2020-09-10T17:03:54Z",
          "comments": [
            {
              "originalPosition": 126,
              "body": "```suggestion\r\nfast enough because the configured bandwidth limitation would be too low.\r\n```",
              "createdAt": "2020-09-10T17:03:53Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTM5NzI4",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T17:05:40Z",
          "updatedAt": "2020-09-10T17:05:41Z",
          "comments": [
            {
              "originalPosition": 138,
              "body": "```suggestion\r\nSRT's sender buffer and delayed as a result, causing them to arrive too late \r\nat the decoder, and possible drops by the receiver.\r\n```",
              "createdAt": "2020-09-10T17:05:40Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTQyNTU3",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T17:09:33Z",
          "updatedAt": "2020-09-10T17:09:34Z",
          "comments": [
            {
              "originalPosition": 143,
              "body": "```suggestion\r\nHYBRIDBW mode combines the two methods above and overcomes \r\nthe deficiencies of each. SRT takes the input rate configuration from the \r\nencoder, measures the actual input, and uses whichever value is larger.\r\n```",
              "createdAt": "2020-09-10T17:09:33Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTQzOTEw",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T17:11:26Z",
          "updatedAt": "2020-09-10T17:11:27Z",
          "comments": [
            {
              "originalPosition": 147,
              "body": "```suggestion\r\nThe following table shows a summary of the bandwidth configuration modes, \r\nthe variables that need to be set (\u2713) or ignored (-), and the formula for \r\ncalculating MAX-BW in each case:\r\n```",
              "createdAt": "2020-09-10T17:11:26Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTQ0NTM0",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T17:12:16Z",
          "updatedAt": "2020-09-10T17:12:17Z",
          "comments": [
            {
              "originalPosition": 164,
              "body": "```suggestion\r\naverage packet payload size (AvgPayloadSize) and maximum bandwidth\r\n(MAX_BW).\r\n```",
              "createdAt": "2020-09-10T17:12:16Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTQ2MDU2",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T17:14:16Z",
          "updatedAt": "2020-09-10T17:14:17Z",
          "comments": [
            {
              "originalPosition": 168,
              "body": "```suggestion\r\nOn the sender side, there are three events that the LiveCC algorithm reacts to:\r\n(1) sending a data packet, (2) receiving an acknowledgement (ACK) packet, \r\nand (3) a timeout event as described below.\r\n```",
              "createdAt": "2020-09-10T17:14:16Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTYxMzE2",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T17:34:47Z",
          "updatedAt": "2020-09-10T17:34:48Z",
          "comments": [
            {
              "originalPosition": 171,
              "body": "```suggestion\r\n(1) On sending a data packet (either original or retransmitted), update\r\nthe value of average packet payload size (AvgPayloadSize):\r\n```",
              "createdAt": "2020-09-10T17:34:47Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTYyMDMw",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T17:35:44Z",
          "updatedAt": "2020-09-10T17:35:45Z",
          "comments": [
            {
              "originalPosition": 179,
              "body": "```suggestion\r\nthe initial value of AvgPayloadSize is equal to the maximum allowed packet\r\npayload size, which can't be larger than 1456 bytes.\r\n```",
              "createdAt": "2020-09-10T17:35:44Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTYyNzg2",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T17:36:43Z",
          "updatedAt": "2020-09-10T17:36:44Z",
          "comments": [
            {
              "originalPosition": 184,
              "body": "```suggestion\r\nStep 1. Calculate SRT packet size (pktsize) as the sum of average payload size\r\n(AvgPayloadSize) and SRT header size ({{packet-structure}}), in bytes.\r\n```",
              "createdAt": "2020-09-10T17:36:43Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTYzMDI2",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T17:37:00Z",
          "updatedAt": "2020-09-10T17:37:01Z",
          "comments": [
            {
              "originalPosition": 186,
              "body": "```suggestion\r\nStep 2. Calculate the minimum allowed packet sending period (PKT_SND_PERIOD) \r\n```",
              "createdAt": "2020-09-10T17:37:00Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTc2MzQw",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T17:54:52Z",
          "updatedAt": "2020-09-10T17:54:52Z",
          "comments": [
            {
              "originalPosition": 181,
              "body": "```suggestion\r\n(2) On an acknowledgement (ACK) packet reception:\r\n```",
              "createdAt": "2020-09-10T17:54:52Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTc3NDYx",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T17:56:27Z",
          "updatedAt": "2020-09-10T17:56:28Z",
          "comments": [
            {
              "originalPosition": 198,
              "body": "```suggestion\r\n(3) On a retransmission timeout (RTO) event, follow the same steps as\r\ndescribed in method (1) above.\r\n```",
              "createdAt": "2020-09-10T17:56:27Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTc4Njc4",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T17:58:06Z",
          "updatedAt": "2020-09-10T17:58:08Z",
          "comments": [
            {
              "originalPosition": 201,
              "body": "```suggestion\r\nRTO is the amount of time within which an acknowledgement is expected after a data packet\r\nis sent out. If there is no ACK after this amount of time has elapsed, a\r\n```",
              "createdAt": "2020-09-10T17:58:07Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTc5MzI3",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T17:58:58Z",
          "updatedAt": "2020-09-10T17:58:58Z",
          "comments": [
            {
              "originalPosition": 212,
              "body": "smoothed?",
              "createdAt": "2020-09-10T17:58:58Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTgxNzUz",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T18:02:19Z",
          "updatedAt": "2020-09-10T18:02:20Z",
          "comments": [
            {
              "originalPosition": 216,
              "body": "```suggestion\r\n(RexmitCount) is used to track the number of continuous timeouts:\r\n```",
              "createdAt": "2020-09-10T18:02:19Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTgyMzUw",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T18:03:12Z",
          "updatedAt": "2020-09-10T18:03:13Z",
          "comments": [
            {
              "originalPosition": 222,
              "body": "```suggestion\r\nOn the receiver side, when a loss report is sent, the sending interval of \r\n```",
              "createdAt": "2020-09-10T18:03:12Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTgyOTQx",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T18:03:58Z",
          "updatedAt": "2020-09-10T18:03:59Z",
          "comments": [
            {
              "originalPosition": 239,
              "body": "```suggestion\r\nincluding SRT's default FileCC algorithm described below\r\n```",
              "createdAt": "2020-09-10T18:03:58Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTgzMTkw",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T18:04:18Z",
          "updatedAt": "2020-09-10T18:04:18Z",
          "comments": [
            {
              "originalPosition": 244,
              "body": "```suggestion\r\nSRT's default FileCC algorithm is a modified version of the UDT\r\n```",
              "createdAt": "2020-09-10T18:04:18Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTk1MDIw",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T18:13:52Z",
          "updatedAt": "2020-09-10T18:13:53Z",
          "comments": [
            {
              "originalPosition": 257,
              "body": "```suggestion\r\nThe algorithm controls sending rate by tuning the packet sending period,\r\n(i.e. how often packets are sent out). The sending rate is increased\r\nupon receipt of an acknowledgement (ACK), and decreased when\r\nreceiving a loss report (negative acknowledgement, or NAK).\r\nOnly full ACKs, not light ACKs ({{packet-acks}}), trigger an increase \r\nin the sending rate.\r\n```",
              "createdAt": "2020-09-10T18:13:52Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjAwNzQ5",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T18:22:10Z",
          "updatedAt": "2020-09-10T18:22:11Z",
          "comments": [
            {
              "originalPosition": 268,
              "body": "```suggestion\r\nSRT congestion control has two phases: \"Slow Start\" and \"Congestion Avoidance\". \r\nIn the slow start phase the congestion control module probes the network to determine \r\navailable bandwidth and the target sending rate for the next (operational) phase, which \r\nis congestion avoidance. In this phase, if there is no congestion detected via loss reports, \r\nthe sending rate is gradually increased. Conversely, if a network congestion is detected, \r\nthe algorithm decreases the sending rate to reduce subsequent packet loss. The slow start \r\nphase runs exactly once at the beginning of a connection, and stops when a packet loss \r\noccurs, when the congestion window size reaches its maximum value, or on a timeout event.\r\n```",
              "createdAt": "2020-09-10T18:22:10Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjAxMDk4",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T18:22:38Z",
          "updatedAt": "2020-09-10T18:22:39Z",
          "comments": [
            {
              "originalPosition": 278,
              "body": "```suggestion\r\nbut not at an infinite rate.\r\n```",
              "createdAt": "2020-09-10T18:22:39Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjAyODc2",
          "commit": {
            "abbreviatedOid": "9c26f5a"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T18:25:16Z",
          "updatedAt": "2020-09-10T18:25:17Z",
          "comments": [
            {
              "originalPosition": 284,
              "body": "```suggestion\r\nThe initial value of the congestion window size (CWND_SIZE) is set to 16\r\npackets. CWND_SIZE has an upper threshold, which is the maximum allowed\r\ncongestion window size (MAX_CWND_SIZE), so that even if there is no packet \r\nloss, the slow start phase has to stop at a certain point. The threshold can be \r\nset to the maximum receiver buffer size (12 MB).\r\n```",
              "createdAt": "2020-09-10T18:25:16Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjA4Njkz",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T18:33:31Z",
          "updatedAt": "2020-09-10T18:33:32Z",
          "comments": [
            {
              "originalPosition": 272,
              "body": "```suggestion\r\n\r\nAs with LiveCC, SRT's default FileCC algorithm reacts to three events:\r\n(1) sending a data packet, (2) receiving an acknowledgement (ACK) packet, \r\nand (3) a timeout event. These are described below as they apply to the \r\ncongestion control phases.\r\n\r\n```",
              "createdAt": "2020-09-10T18:33:32Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjA4OTQw",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T18:33:53Z",
          "updatedAt": "2020-09-10T18:33:53Z",
          "comments": [
            {
              "originalPosition": 285,
              "body": "```suggestion\r\n(1) On an acknowledgement (ACK) packet reception:\r\n```",
              "createdAt": "2020-09-10T18:33:53Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjExMzc3",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T18:37:29Z",
          "updatedAt": "2020-09-10T18:37:30Z",
          "comments": [
            {
              "originalPosition": 288,
              "body": "```suggestion\r\nStep 1. If the interval since the last time the sending rate was either increased or kept (LastRCTime) is less than RC_INTERVAL:\r\n```",
              "createdAt": "2020-09-10T18:37:30Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjI0MTcy",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T18:56:02Z",
          "updatedAt": "2020-09-10T18:56:02Z",
          "comments": [
            {
              "originalPosition": 328,
              "body": "```suggestion\r\nStep 5. If the congestion window size CWND_SIZE calculated at Step 3 is greater\r\nthan the upper threshold MAX_CWND_SIZE, slow start phase ends.\r\n```",
              "createdAt": "2020-09-10T18:56:02Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjI0NDg2",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T18:56:28Z",
          "updatedAt": "2020-09-10T18:56:28Z",
          "comments": [
            {
              "originalPosition": 341,
              "body": "smoothed?",
              "createdAt": "2020-09-10T18:56:28Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjI0NzM3",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T18:56:48Z",
          "updatedAt": "2020-09-10T18:56:48Z",
          "comments": [
            {
              "originalPosition": 344,
              "body": "smoothed?",
              "createdAt": "2020-09-10T18:56:48Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjI1MTc4",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T18:57:24Z",
          "updatedAt": "2020-09-10T18:57:25Z",
          "comments": [
            {
              "originalPosition": 352,
              "body": "```suggestion\r\n(2) On a loss report (NAK) packet reception:\r\n```",
              "createdAt": "2020-09-10T18:57:24Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjI2MjI3",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T18:58:54Z",
          "updatedAt": "2020-09-10T18:58:55Z",
          "comments": [
            {
              "originalPosition": 356,
              "body": "```suggestion\r\n- Set the packet sending period PKT_SND_PERIOD as described in Step 5 of section (1) above.\r\n```",
              "createdAt": "2020-09-10T18:58:54Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjI2MzY0",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T18:59:06Z",
          "updatedAt": "2020-09-10T18:59:06Z",
          "comments": [
            {
              "originalPosition": 358,
              "body": "```suggestion\r\n(3) On a retransmission timeout (RTO) event:\r\n```",
              "createdAt": "2020-09-10T18:59:06Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjI2NzMz",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T18:59:35Z",
          "updatedAt": "2020-09-10T18:59:36Z",
          "comments": [
            {
              "originalPosition": 362,
              "body": "```suggestion\r\n- Set the packet sending period PKT_SND_PERIOD as described in Step 5 of section (1) above.\r\n```",
              "createdAt": "2020-09-10T18:59:35Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjI3MDY1",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T19:00:03Z",
          "updatedAt": "2020-09-10T19:00:05Z",
          "comments": [
            {
              "originalPosition": 369,
              "body": "```suggestion\r\n(1) On an acknowledgement (ACK) packet reception:\r\n```",
              "createdAt": "2020-09-10T19:00:04Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjI3ODI2",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T19:01:10Z",
          "updatedAt": "2020-09-10T19:01:10Z",
          "comments": [
            {
              "originalPosition": 372,
              "body": "```suggestion\r\nStep 1. If the interval since the last time the sending rate was either increased or kept (LastRCTime) is less than RC_INTERVAL:\r\n```",
              "createdAt": "2020-09-10T19:01:10Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjI4NTQ1",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T19:02:14Z",
          "updatedAt": "2020-09-10T19:02:15Z",
          "comments": [
            {
              "originalPosition": 445,
              "body": "smoothed?",
              "createdAt": "2020-09-10T19:02:15Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjMwNTgw",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T19:05:11Z",
          "updatedAt": "2020-09-10T19:05:12Z",
          "comments": [
            {
              "originalPosition": 456,
              "body": "```suggestion\r\nA detailed explanation of the formulas used to calculate the increase\r\nin sending rate can be found in {{GuAnAO}}. UDT's available\r\nbandwidth estimation has been modified to take into account the\r\nbandwidth registered at the moment of packet loss, since the estimated\r\nlink capacity EST_LINK_CAPACITY reported by the receiver may\r\noverestimate the actual link capacity significantly.\r\n```",
              "createdAt": "2020-09-10T19:05:11Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjM0MTE0",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T19:10:16Z",
          "updatedAt": "2020-09-10T19:10:17Z",
          "comments": [
            {
              "originalPosition": 475,
              "body": "```suggestion\r\nNote that in file transmission mode the the maximum allowed bandwidth (MAX_BW) \r\nfor SRT can be defined. This  limits the minimum possible interval between packets \r\nsent. Only the usage of MAXBW mode is possible (see {{maxbw}}). In contrast with \r\nlive transmission mode, there is no default value set for MAX_BW, and the transmission \r\nrate is not limited if not set explicitly.\r\n```",
              "createdAt": "2020-09-10T19:10:16Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjM0Mjg0",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T19:10:29Z",
          "updatedAt": "2020-09-10T19:10:30Z",
          "comments": [
            {
              "originalPosition": 477,
              "body": "```suggestion\r\n(2) On a loss report (NAK) packet reception:\r\n```",
              "createdAt": "2020-09-10T19:10:29Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjM1MzAy",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T19:12:00Z",
          "updatedAt": "2020-09-10T19:12:01Z",
          "comments": [
            {
              "originalPosition": 485,
              "body": "```suggestion\r\nb. Update the value of LastDecPeriod: \r\n\r\n~~~\r\nLastDecPeriod = PKT_SND_PERIOD;\r\n~~~\r\n\r\n```",
              "createdAt": "2020-09-10T19:12:00Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjUwNDE0",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T19:34:22Z",
          "updatedAt": "2020-09-10T19:34:22Z",
          "comments": [
            {
              "originalPosition": 542,
              "body": "```suggestion\r\nThe coefficients used in the formulas above have been slightly modified \r\nto reduce the amount by which the sending rate decreases.\r\n```",
              "createdAt": "2020-09-10T19:34:22Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjUyNDQ1",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T19:37:25Z",
          "updatedAt": "2020-09-10T19:37:26Z",
          "comments": [
            {
              "originalPosition": 559,
              "body": "```suggestion\r\nEstimates of link capacity and receiving rate, in packets/bytes per second,\r\nare calculated at the receiver side during file transmission. It's worth noting \r\nthat the receiving rate estimate, while available during the entire data transmission \r\nperiod, is used only during the slow start phase of the file congestion control \r\nalgorithm ({{default-fileCC-slow-start}}).\r\n```",
              "createdAt": "2020-09-10T19:37:25Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjUyOTE3",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T19:38:09Z",
          "updatedAt": "2020-09-10T19:38:10Z",
          "comments": [
            {
              "originalPosition": 560,
              "body": "```suggestion\r\nThe latest estimate obtained before the end of the slow start\r\n```",
              "createdAt": "2020-09-10T19:38:10Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjUzMTM1",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T19:38:30Z",
          "updatedAt": "2020-09-10T19:38:30Z",
          "comments": [
            {
              "originalPosition": 565,
              "body": "smoothed?",
              "createdAt": "2020-09-10T19:38:30Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjU4NDIy",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T19:46:43Z",
          "updatedAt": "2020-09-10T19:46:44Z",
          "comments": [
            {
              "originalPosition": 573,
              "body": "```suggestion\r\nAs each data packet arrives, the receiver records the time delta with respect to \r\nthe arrival of the previous data packet, which is used  to estimate bandwidth and \r\nreceiving speed (delivery rate). This and other control information is communicated \r\nto the sender by means of acknowledgment (ACK) packets sent every 10 milliseconds.\r\n```",
              "createdAt": "2020-09-10T19:46:44Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjU4NjE5",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T19:47:04Z",
          "updatedAt": "2020-09-10T19:47:04Z",
          "comments": [
            {
              "originalPosition": 574,
              "body": "smoothed?",
              "createdAt": "2020-09-10T19:47:04Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjU4ODQ3",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T19:47:26Z",
          "updatedAt": "2020-09-10T19:47:26Z",
          "comments": [
            {
              "originalPosition": 575,
              "body": "```suggestion\r\nis used to update the latest estimate maintained at the sender side.\r\n```",
              "createdAt": "2020-09-10T19:47:26Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjYyODk5",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-10T19:53:41Z",
          "updatedAt": "2020-09-10T19:53:42Z",
          "comments": [
            {
              "originalPosition": 583,
              "body": "```suggestion\r\nIt is important to note that for bandwidth estimation only data\r\nprobing packets are taken into account, while all data packets\r\n(both data and data probing) are used for estimating receiving \r\nspeed. Data probing refers to the use of the packet pairs technique, \r\nwhereby pairs of probing packets are sent to a server back-to-back, \r\nthus making it possible to measure the minimum interval in receiving \r\nconsecutive packets.\r\n```",
              "createdAt": "2020-09-10T19:53:41Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjYzNTI1",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I made quite a few changes to the wording, which will require additional technical review.",
          "createdAt": "2020-09-10T19:54:36Z",
          "updatedAt": "2020-09-10T19:54:36Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2ODEyMjcx",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-11T13:36:33Z",
          "updatedAt": "2020-09-11T13:36:34Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "```suggestion\r\nfor making sending rate adjustments  during the transmission process \r\nby applying an exponential moving average (EMA) to smooth the data.\r\n```",
              "createdAt": "2020-09-11T13:36:34Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMjI0NTUy",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-18T07:43:25Z",
          "updatedAt": "2020-09-18T14:45:15Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "Not a very reasonable sentence. The default MAXBW is 1 Gbps, and it does not need to be changed while the actual input rate is below this limit.\r\n\r\n> Each time the input bitrate is configured on the encoder, MAX_BW must also be reconfigured.\r\n\r\nSuggestion:\r\n```suggestion\r\n   Note that this static setting might not fit well to a variable bitrate input:\r\n   the input bitrate may change, while the bandwidth limit remains constant\r\n   unless updated in runtime.\r\n```",
              "createdAt": "2020-09-18T07:43:26Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            },
            {
              "originalPosition": 92,
              "body": "INPUTBW mode also might not fit well to a variable bitrate input: the actual input bitrate may change, while the configured one remains constant unless updated in runtime.",
              "createdAt": "2020-09-18T07:44:42Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            },
            {
              "originalPosition": 143,
              "body": "Using the term \"proposed solution\" is too loud for such case. Each mode has its use case. Let us not put any of them in favor.",
              "createdAt": "2020-09-18T14:45:13Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNTIzNDk2",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-22T14:29:54Z",
          "updatedAt": "2020-09-22T14:29:54Z",
          "comments": [
            {
              "originalPosition": 212,
              "body": "Currently, the EWMA is applied twice: 1. at the receiver side, then we send this value within an ACK packet; 2. at the sender side: we extract RTT from ACK and do EWMA again, that's why I writing here smoothed at the receiver side.",
              "createdAt": "2020-09-22T14:29:54Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNTM5NTQ2",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-22T14:44:23Z",
          "updatedAt": "2020-09-22T14:44:23Z",
          "comments": [
            {
              "originalPosition": 341,
              "body": "the same explanation as for RTT",
              "createdAt": "2020-09-22T14:44:23Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNTQwMjk3",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-22T14:45:03Z",
          "updatedAt": "2020-09-22T14:45:04Z",
          "comments": [
            {
              "originalPosition": 344,
              "body": "the same explanation as for the very first smoothed RTT",
              "createdAt": "2020-09-22T14:45:03Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNTQzODM4",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-22T14:48:25Z",
          "updatedAt": "2020-09-22T14:48:26Z",
          "comments": [
            {
              "originalPosition": 445,
              "body": "still the same explanation )",
              "createdAt": "2020-09-22T14:48:25Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNTUxNzQ5",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-22T14:55:39Z",
          "updatedAt": "2020-09-22T14:55:41Z",
          "comments": [
            {
              "originalPosition": 475,
              "body": "Note that in file transmission mode the maximum allowed bandwidth (MAX_BW)\r\nfor SRT can be defined. This limits the minimum possible **packets' inter-sending period**.\r\nOnly the usage of MAXBW mode is possible ({{maxbw}}). In contrast with\r\nlive transmission mode, there is no default value set for MAX_BW, and the transmission\r\nrate is not limited if not set explicitly.\r\n\r\nI need to say \"inter-sending period\" here.",
              "createdAt": "2020-09-22T14:55:39Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNTgyNTQx",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-22T15:23:37Z",
          "updatedAt": "2020-09-22T15:23:37Z",
          "comments": [
            {
              "originalPosition": 565,
              "body": "maybe we should simply delete \"smoothed\" from here - used primarily for sending rate adjustments ...\r\nI meant \"smooth\" here if it helps.",
              "createdAt": "2020-09-22T15:23:37Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNTg3Nzk5",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-22T15:28:25Z",
          "updatedAt": "2020-09-22T15:28:25Z",
          "comments": [
            {
              "originalPosition": 574,
              "body": "the same explanation as for RTT, receiving rate and link capacity reported by receiver via ACK packets\r\nupon ACK arrival, at the sender side we apply EWMA one more time to all these estimates",
              "createdAt": "2020-09-22T15:28:25Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNTg5NjA5",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-22T15:30:13Z",
          "updatedAt": "2020-09-22T15:30:13Z",
          "comments": [
            {
              "originalPosition": 583,
              "body": "What do you mean by \"back-to-back\" here?",
              "createdAt": "2020-09-22T15:30:13Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNTk0ODM2",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-22T15:35:38Z",
          "updatedAt": "2020-09-22T15:35:38Z",
          "comments": [
            {
              "originalPosition": 565,
              "body": "I see this below:\r\n_for making sending rate adjustments  during the transmission process \r\nby applying an exponential moving average (EMA) to smooth the data._\r\n\r\nThis isn't right for this case, but this part\r\n_by applying an exponential moving average (EMA) to smooth the data at the sender side_\r\nis correct for all the other cases where I apply smoothed term\r\n\r\nPlus better to use\r\n_exponentially weighted moving average (EWMA)_",
              "createdAt": "2020-09-22T15:35:38Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNTk1Mzcx",
          "commit": {
            "abbreviatedOid": "e921861"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-22T15:36:14Z",
          "updatedAt": "2020-09-22T15:36:14Z",
          "comments": [
            {
              "originalPosition": 212,
              "body": "See [this comment](https://github.com/Haivision/srt-rfc/pull/66#discussion_r492836186) also.",
              "createdAt": "2020-09-22T15:36:14Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NzYyMTk5",
          "commit": {
            "abbreviatedOid": "334da85"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-23T15:05:42Z",
          "updatedAt": "2020-09-23T15:05:43Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "As SRT is designed both for live streaming and file/message transmission {{link}}, there are two groups of congestion control algorithms defined in SRT: live congestion control (LiveCC), and file transfer congestion control (FileCC).\r\n\r\nGood?",
              "createdAt": "2020-09-23T15:05:42Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NzcwNjM4",
          "commit": {
            "abbreviatedOid": "334da85"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-23T15:14:07Z",
          "updatedAt": "2020-09-23T15:14:08Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "we have two modes in SRT: message and buffer, it's not live and file transfer as I've figured out. Live streaming is possible with using message mode of SRT, file transfer - both message and buffer. We will be reworking [Data Transmission Modes](https://tools.ietf.org/html/draft-sharabayko-mops-srt-01#page-27) section a bit.",
              "createdAt": "2020-09-23T15:14:07Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0Nzk3NDk5",
          "commit": {
            "abbreviatedOid": "334da85"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-23T15:41:15Z",
          "updatedAt": "2020-09-23T15:41:16Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "In case of live streaming, the sender is allowed to drop packets that cannot be delivered\r\nin time ({{too-late-packet-drop}}).\r\n\r\nCorrect?",
              "createdAt": "2020-09-23T15:41:15Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0ODAwODIw",
          "commit": {
            "abbreviatedOid": "334da85"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-23T15:44:44Z",
          "updatedAt": "2020-09-23T15:44:44Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "**In case of live streaming** over highly variable networks, fairness can be achieved by controlling\r\nthe bitrate of the source encoder at the input of the SRT sender. SRT provides a\r\nvariety of network related statistics, such as RTT estimation, packet loss **level,**\r\nthe number of packets dropped, etc., which can be used for making decisions\r\nand adjusting the bitrate in real time.\r\n\r\nIs there a way to say \"in case of live streaming\" in other words?",
              "createdAt": "2020-09-23T15:44:44Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MzAxNzQ3",
          "commit": {
            "abbreviatedOid": "e36b26e"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-24T07:45:22Z",
          "updatedAt": "2020-09-24T07:45:22Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "We currently have for MAXBW mode the following explanation:\r\n\r\n_The recommended default value is 1 Gbps. The default value\r\n   is set only for live streaming.\r\n\r\n   Note that this static setting is not well-suited to a variable input,\r\n   like when you change the bitrate on an encoder. Each time the input\r\n   bitrate is configured on the encoder, MAX_BW must also be reconfigured.\r\n\r\n   In MAXBW mode, SRT does not follow any fluctuations in the encoder input\r\n   making it unsuitable for variable bitrate (VBR) encoding._\r\n\r\nIf we change the second paragraph to your suggestion, the last one seems to be incorrect too. The same idea as you described. Do you have a suggestion how to change the last paragraph or maybe we should simply remove it, because it's already written in the second paragraph?",
              "createdAt": "2020-09-24T07:45:22Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MzAyNTYz",
          "commit": {
            "abbreviatedOid": "e36b26e"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-24T07:46:28Z",
          "updatedAt": "2020-09-24T07:46:29Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "That's why I've written here: Note that INPUTBW mode reduces to the MAXBW mode.\r\nDo you think I should explicitly write the same paragraph as for MAXBW mode?",
              "createdAt": "2020-09-24T07:46:28Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NjQxODIx",
          "commit": {
            "abbreviatedOid": "e36b26e"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-24T14:36:07Z",
          "updatedAt": "2020-09-24T14:36:08Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "```suggestion\r\nTo ensure smooth video playback on a receiving peer during  \r\nlive streaming, SRT must control the sender's buffer level to\r\n```",
              "createdAt": "2020-09-24T14:36:07Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NjQ3OTcz",
          "commit": {
            "abbreviatedOid": "e36b26e"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-24T14:42:07Z",
          "updatedAt": "2020-09-24T14:42:07Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Yes, your change makes it better.",
              "createdAt": "2020-09-24T14:42:07Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NjUyNzU2",
          "commit": {
            "abbreviatedOid": "e36b26e"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-24T14:46:48Z",
          "updatedAt": "2020-09-24T14:46:48Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "Yes, with one tiny comment. The expressions \"in case of\" and \"in the case of\" in English have a subtle difference when used. Not easy to explain, but \"in **the** case of\" usually sounds better. Not a big deal either way.",
              "createdAt": "2020-09-24T14:46:48Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NjU4MDI3",
          "commit": {
            "abbreviatedOid": "e36b26e"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-24T14:51:52Z",
          "updatedAt": "2020-09-24T14:51:52Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Your changes are fine. Again, subjectively, there is the use of \"in case...\". You could also say \"During live streaming . . .\" or \"When live streaming . . .\".\r\nAlso, the word \"estimation\" usually refers to the act of performing a calculation where \"estimate\" is the result. This is a very subtle distinction, and using \"estimation\" as a noun is technically not wrong. More of a \"common usage\" thing.",
              "createdAt": "2020-09-24T14:51:52Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NjYyMTQ1",
          "commit": {
            "abbreviatedOid": "e36b26e"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-24T14:55:50Z",
          "updatedAt": "2020-09-24T14:55:51Z",
          "comments": [
            {
              "originalPosition": 475,
              "body": "Okay. Just so that you know \"inter-sending\" is not really a word!  ;-)\r\n\r\nAlso, in your comment above, you said \"...we have two modes in SRT: message and buffer, ...\". So maybe change \"Note that in file transmission mode...\" to \"During file transmission...\"?",
              "createdAt": "2020-09-24T14:55:50Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NjY0Mjk1",
          "commit": {
            "abbreviatedOid": "e36b26e"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-24T14:57:55Z",
          "updatedAt": "2020-09-24T14:57:56Z",
          "comments": [
            {
              "originalPosition": 565,
              "body": "If we clarify that \"smoothing\" means \"applying an exponentially weighted moving average (EWMA)\" early in the Congestion Control section, then it is perfectly okay to use just \"smoothing\" later on.",
              "createdAt": "2020-09-24T14:57:56Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NjY4ODM5",
          "commit": {
            "abbreviatedOid": "e36b26e"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-24T15:02:12Z",
          "updatedAt": "2020-09-24T15:02:13Z",
          "comments": [
            {
              "originalPosition": 583,
              "body": "No delay between sending packets in a probing pair.\r\n![SRT_PacketProbe_2018-09-10](https://user-images.githubusercontent.com/28537807/94163046-634eb800-fe55-11ea-8ecc-25083bbbaad2.png)\r\n",
              "createdAt": "2020-09-24T15:02:12Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2MTc5ODA5",
          "commit": {
            "abbreviatedOid": "e36b26e"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-25T07:38:25Z",
          "updatedAt": "2020-09-25T07:38:25Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "Simply removing the paragraph about \"In MAXBW mode, SRT does not follow any fluctuations..\" is a good idea.",
              "createdAt": "2020-09-25T07:38:25Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2MTgxMDgy",
          "commit": {
            "abbreviatedOid": "e36b26e"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-25T07:40:23Z",
          "updatedAt": "2020-09-25T07:40:24Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "Maybe something like \"Note that INPUTBW has the same behavior as the MAXBW mode, and the same restrictions apply\".",
              "createdAt": "2020-09-25T07:40:23Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2MTkwNTEx",
          "commit": {
            "abbreviatedOid": "e36b26e"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-09-25T07:54:46Z",
          "updatedAt": "2020-09-25T07:54:46Z",
          "comments": [
            {
              "originalPosition": 475,
              "body": "Okay, interesting. I know that there is a word \"inter-arrival\" ))) Will use you original suggestion + correct live/file modes.\r\n",
              "createdAt": "2020-09-25T07:54:46Z",
              "updatedAt": "2020-09-25T13:29:03Z"
            }
          ]
        }
      ]
    },
    {
      "number": 68,
      "id": "MDExOlB1bGxSZXF1ZXN0NDc5NzA4ODU1",
      "title": "Did formatting for RTT section",
      "url": "https://github.com/Haivision/srt-rfc/pull/68",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "maxsharabayko",
        "mbakholdina"
      ],
      "labels": [],
      "body": "Ready to be merged without review. Formatted the lines to have no more than 72 characters.",
      "createdAt": "2020-09-04T13:55:01Z",
      "updatedAt": "2020-10-14T13:15:52Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "93721404165fa36903b5dd3303f316287f2baf5d",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "mbakholdina/rtt-formatting",
      "headRefOid": "a1eef5b0fce13b4fe30fb45bc1fe4ffdf45fbe18",
      "closedAt": "2020-09-04T13:58:13Z",
      "mergedAt": "2020-09-04T13:58:13Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "52cec44ffa148a43b6e6e6bfc3018e6023f1c9ac"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 69,
      "id": "MDExOlB1bGxSZXF1ZXN0NDgyNzg5MjUw",
      "title": "Final formatting for version 01",
      "url": "https://github.com/Haivision/srt-rfc/pull/69",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "maxsharabayko",
        "mbakholdina"
      ],
      "labels": [],
      "body": "- Fixed packet structure in remaining sections\r\n- Fixed the list in TLPKTDROP section\r\n- Returned the first version of Congestion Control section\r\n- Fixed broken links\r\n- Added changelog",
      "createdAt": "2020-09-09T11:54:57Z",
      "updatedAt": "2020-10-14T13:15:31Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "8df9309dc3e5e4a49ad6550548d70794e6835425",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "mbakholdina/formatting",
      "headRefOid": "ade1b91a43a7e91f6d94fd04c0991c7704fefd06",
      "closedAt": "2020-09-09T13:32:29Z",
      "mergedAt": "2020-09-09T13:32:28Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "1e14da3500a5f9fbc2a4d9fda77b5d3d59563cff"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 73,
      "id": "MDExOlB1bGxSZXF1ZXN0NTEwNzY0MTc2",
      "title": "First portion of fixes after review",
      "url": "https://github.com/Haivision/srt-rfc/pull/73",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "maxsharabayko",
        "mbakholdina"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2020-10-27T13:43:49Z",
      "updatedAt": "2020-11-03T11:11:34Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "0ceda90c23a6e358109ddd7453244dfec13fdec1",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "mbakholdina/fixes-after-review",
      "headRefOid": "d13741030d12cdbdb4d592e6a611ae6f34a296ab",
      "closedAt": "2020-11-03T11:11:29Z",
      "mergedAt": "2020-11-03T11:11:29Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "5bf53cb2cce56841e3562c54c9dfff4a6f37fb27"
      },
      "comments": [
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "@maxsharabayko Once you have time, please build txt and PDF for me so I can check that the changes are correct. Then we can merge.",
          "createdAt": "2020-10-27T13:46:48Z",
          "updatedAt": "2020-10-27T13:46:48Z"
        },
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "- Changing workgroup from MOPS to \"Network Working Group\" potentially requires to change the name of the document [sharabayko-mops-srt](https://datatracker.ietf.org/doc/draft-sharabayko-mops-srt/). It can therefore block update to version 03, because it will not be considered as a new version, but as a new document.\r\nTo be confirmed.",
          "createdAt": "2020-10-30T09:51:25Z",
          "updatedAt": "2020-10-30T09:51:25Z"
        },
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "[draft-sharabayko-mops-srt-pr73.pdf](https://github.com/Haivision/srt-rfc/files/5464341/draft-sharabayko-mops-srt-pr73.pdf)\r\n",
          "createdAt": "2020-10-30T09:56:47Z",
          "updatedAt": "2020-10-30T09:56:47Z"
        },
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "@maxsharabayko Can be merged in master. Let's not revert the changes regarding Network Working Group, I've made a note regarding this.",
          "createdAt": "2020-11-03T10:58:56Z",
          "updatedAt": "2020-11-03T10:58:56Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 74,
      "id": "MDExOlB1bGxSZXF1ZXN0NTIxNjA4Mzk1",
      "title": "Updated Security Considerations section",
      "url": "https://github.com/Haivision/srt-rfc/pull/74",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mbakholdina"
      ],
      "labels": [],
      "body": "Closes #64. ",
      "createdAt": "2020-11-16T11:42:15Z",
      "updatedAt": "2020-11-30T11:57:10Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "5bf53cb2cce56841e3562c54c9dfff4a6f37fb27",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "mbakholdina/security-considerations",
      "headRefOid": "b5a2964abac3431e0344d171bcae1f3521bc572b",
      "closedAt": "2020-11-30T11:57:07Z",
      "mergedAt": "2020-11-30T11:57:07Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "cc0066c15be858bbb5ad9311c07389a94ed1bb07"
      },
      "comments": [
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi @stevomatthews,\r\nWe've reworked the first part. Could you please take a brief look? Thanks! ",
          "createdAt": "2020-11-23T10:47:00Z",
          "updatedAt": "2020-11-23T10:47:00Z"
        },
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi @stevomatthews, thank you for the review!\r\n@maxsharabayko, ready to be merged.",
          "createdAt": "2020-11-30T10:54:52Z",
          "updatedAt": "2020-11-30T10:54:52Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNTM1MDI3",
          "commit": {
            "abbreviatedOid": "f95d888"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-16T17:15:59Z",
          "updatedAt": "2020-11-16T17:16:00Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "SRT provides confidentiality of user data using stream ciphers as specified in \r\n{{encryption}}. This is the only improvement over UDT, which does not have any \r\nspecific security mechanisms (SRT therefore needs to consider security \r\nrequirements at an upper layer).",
              "createdAt": "2020-11-16T17:15:59Z",
              "updatedAt": "2020-11-30T11:45:12Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNTM1MjE5",
          "commit": {
            "abbreviatedOid": "f95d888"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-16T17:16:14Z",
          "updatedAt": "2020-11-16T17:16:14Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "There are some important considerations regarding the encryption feature of SRT:\r\n\r\n  - The SEK must be changed at an appropriate refresh interval to avoid the risk \r\n  associated with the use of security keys over a long period of time. \r\n  - The shared secret for KEK generation must be carefully configured by a \r\n  security officer responsible for security policies, enforcing encryption, and \r\n  limiting key size selection. \r\n  - To improve performance, in some cases the KMmsg cache can be retransmitted \r\n  or checked before deciphering.\r\n",
              "createdAt": "2020-11-16T17:16:14Z",
              "updatedAt": "2020-11-30T11:45:12Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxNTM4MDEx",
          "commit": {
            "abbreviatedOid": "f95d888"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I made substantial edits to the text here. My changes should be reviewed for technical accuracy.",
          "createdAt": "2020-11-16T17:19:24Z",
          "updatedAt": "2020-11-16T17:19:24Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1MjczMzQ3",
          "commit": {
            "abbreviatedOid": "f95d888"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-20T09:45:20Z",
          "updatedAt": "2020-11-20T09:45:21Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Please don't mention UDT here. UDT is not some official protocol.",
              "createdAt": "2020-11-20T09:45:21Z",
              "updatedAt": "2020-11-30T11:45:12Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1MzE1MzAx",
          "commit": {
            "abbreviatedOid": "f95d888"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-20T10:40:23Z",
          "updatedAt": "2020-11-20T10:40:23Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "A draft proposal\r\n\r\n```suggestion\r\nSRT provides confidentiality of the payload using stream ciphers and a pre-shared private key as\r\nspecified in {{encryption}}. The security can be compromised if the pre-shared passphrase\r\nis known to the attacker.\r\n\r\nOn the protocol control level, SRT does not encrypt packet headers. Therefore it has some vulnerabilities similar to TCP {{RFC6528}}:\r\n\r\n- a peer tells a counterpart his public IPs during the handshake, which is visible to any attacker,\r\n\r\n- an attacker may count the number of systems behind a Network Address Translator (NAT) by establishing a number of SRT connections and identifying the number of different sequence number \"spaces\", depending on the implementation of the initial sequence number generation.\r\n\r\n- eavesdropper can also hijack existing connections only if it can steal the IP and port of one of the parties. If some stream addresses an existing SRT receiver by its SRT socket ID, IP and port number, but arrives from a different IP or port, then SRT receiver ignores it.\r\n\r\n- SRT has certain protection from DoS attacks, see {{handshake-messages}}.\r\n\r\n```",
              "createdAt": "2020-11-20T10:40:23Z",
              "updatedAt": "2020-11-30T11:45:12Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1MzE3Nzk5",
          "commit": {
            "abbreviatedOid": "f95d888"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-20T10:44:08Z",
          "updatedAt": "2020-11-20T10:44:09Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "This one is not clear to me in the part of what is the performance issue and how caching of KMmsg solves it.\r\n\r\n> To improve performance, in some cases the KMmsg cache can be retransmitted\r\nor checked before deciphering.",
              "createdAt": "2020-11-20T10:44:08Z",
              "updatedAt": "2020-11-30T11:45:12Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1MzUxNzQ2",
          "commit": {
            "abbreviatedOid": "f95d888"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-20T11:35:01Z",
          "updatedAt": "2020-11-20T11:35:02Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "Sounds good to me. What's **eavesdropper** in the 3rd point? Or it's a misprint?",
              "createdAt": "2020-11-20T11:35:01Z",
              "updatedAt": "2020-11-30T11:45:12Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1MzUzMjE4",
          "commit": {
            "abbreviatedOid": "f95d888"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-20T11:37:29Z",
          "updatedAt": "2020-11-20T11:37:29Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "See the original text by Joonwoong. He meant that it can be cashed and not encrypted several times. But I don't know whether it makes sense.",
              "createdAt": "2020-11-20T11:37:29Z",
              "updatedAt": "2020-11-30T11:45:12Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NjE1ODI2",
          "commit": {
            "abbreviatedOid": "f95d888"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-20T17:10:23Z",
          "updatedAt": "2020-11-20T17:10:23Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "\"eavesdropper\" is someone listening to others secretly.",
              "createdAt": "2020-11-20T17:10:23Z",
              "updatedAt": "2020-11-30T11:45:12Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NjE2OTA1",
          "commit": {
            "abbreviatedOid": "f95d888"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-20T17:11:46Z",
          "updatedAt": "2020-11-20T17:11:46Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "I see. Then I don't think it is something relevant, because the same KMmsg is not expected to be sent periodically.\r\nI suggest removing this item then.",
              "createdAt": "2020-11-20T17:11:46Z",
              "updatedAt": "2020-11-30T11:45:12Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NTM2NjYy",
          "commit": {
            "abbreviatedOid": "b8ff87e"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-23T14:43:00Z",
          "updatedAt": "2020-11-23T14:43:00Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "This statement is unclear to me. What are the \"systems\" an attacker might count? What are \"sequence number spaces\", and how does knowing their number help the attacker?",
              "createdAt": "2020-11-23T14:43:00Z",
              "updatedAt": "2020-11-30T11:45:12Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NTAyMTY3",
          "commit": {
            "abbreviatedOid": "b8ff87e"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-24T13:42:47Z",
          "updatedAt": "2020-11-24T13:42:48Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Sequence number spaces - something Maxim has mentioned in TCP documentation as well. According to him, this term should be recognisable by the reader. But I've had exactly the same question. The meaning is the following:\r\n- for each SRT packet we have sequence number which is growing by 1 from packet to packet,\r\n- right after connection we randomly choose the start sequence number (e.g., 1660778620) and the very first packet gets this number. The next packet will be with 1660778621, the next 1660778622, etc.\r\n- on the other hand, for any other connection, this very first randomly chosen sequence number can be 255222121, the next packet will get 255222122, the next 255222123, etc.\r\n- By spaces Maxim assumes 166... and 255... sets of numbers. And the possible attack is related to identifying theses spaces because behind them there is a logic of increasing sequence number by 1 each time you send a packet.",
              "createdAt": "2020-11-24T13:42:47Z",
              "updatedAt": "2020-11-30T11:45:12Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NTAzMzc0",
          "commit": {
            "abbreviatedOid": "b8ff87e"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-24T13:44:11Z",
          "updatedAt": "2020-11-24T13:44:11Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "@maxsharabayko What do you mean by systems here?",
              "createdAt": "2020-11-24T13:44:11Z",
              "updatedAt": "2020-11-30T11:45:12Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5NTA0ODUz",
          "commit": {
            "abbreviatedOid": "b8ff87e"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-26T18:30:12Z",
          "updatedAt": "2020-11-26T18:30:13Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "It is a bit opportunistic maybe, but an attacker can count the number of SRT **processes** by tracking the ranges of SRT Socket IDs. As in our implementation, a library is instantiated and establishes the first connection generating a random Socket ID. A further connection gets consecutive SRT Socket IDs.\r\nSo one process will generate SRT Socket IDs 126, 127, 128, ... While another process will generate 5867, 5868, 5869, ...\r\nIf we assume one system  (e.g. Makito) runs only one SRT process, then an attacker can estimate the number of systems behind a NAT.\r\n\r\nI actually inaccurately referred to ISN in the paragraph. We generate ISN randomly for each connection, so it is impossible to use it to track anyone. But if some other implementation does not do that, then it is also a vulnerability give that no SRT packet headers are encrypted.",
              "createdAt": "2020-11-26T18:30:12Z",
              "updatedAt": "2020-11-30T11:45:12Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMDU5OTU0",
          "commit": {
            "abbreviatedOid": "b8ff87e"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-27T15:33:43Z",
          "updatedAt": "2020-11-27T15:33:44Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n- an attacker may potentially count the number of SRT processes behind a Network \r\nAddress Translator (NAT) by establishing multiple SRT connections and tracking \r\nthe ranges of SRT Socket IDs. If a random Socket ID is generated for the first \r\nconnection, subsequent connections may get consecutive SRT Socket IDs. Assuming \r\none system runs only one SRT process, for example, then an attacker can estimate \r\nthe number of systems behind a NAT.\r\n\r\n- similarly, the possibility of attack depends on the implementation of the initial \r\nsequence number (ISN) generation. If an ISN is not generated randomly for each \r\nconnection, an attacker may potentially count the number of systems behind a \r\nNetwork Address Translator (NAT) by establishing a number of SRT connections and \r\nidentifying the number of different sequence number \"spaces\", given that no SRT \r\npacket headers are encrypted.\r\n```",
              "createdAt": "2020-11-27T15:33:43Z",
              "updatedAt": "2020-11-30T11:45:12Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMDY1MTQz",
          "commit": {
            "abbreviatedOid": "b8ff87e"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-27T15:42:28Z",
          "updatedAt": "2020-11-27T15:42:29Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I couldn't write better! \ud83d\udc4d ",
              "createdAt": "2020-11-27T15:42:29Z",
              "updatedAt": "2020-11-30T11:45:12Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwODE5MzUw",
          "commit": {
            "abbreviatedOid": "e66f7fb"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-30T11:26:24Z",
          "updatedAt": "2020-11-30T11:26:24Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "This PR has build error.\r\n```\r\nError: IDREF attribute target references an unknown ID \"RFC6528\", at None\r\n```",
              "createdAt": "2020-11-30T11:26:24Z",
              "updatedAt": "2020-11-30T11:45:12Z"
            }
          ]
        }
      ]
    },
    {
      "number": 75,
      "id": "MDExOlB1bGxSZXF1ZXN0NTI0NjQxMjYx",
      "title": "Improved Group Membership Extension section",
      "url": "https://github.com/Haivision/srt-rfc/pull/75",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "maxsharabayko",
        "mbakholdina"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2020-11-20T11:27:40Z",
      "updatedAt": "2020-11-27T13:22:18Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "5bf53cb2cce56841e3562c54c9dfff4a6f37fb27",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "mbakholdina/group-membership-extension",
      "headRefOid": "3ca3b9d164638978990a591f4a32df0a60f41837",
      "closedAt": "2020-11-27T13:22:15Z",
      "mergedAt": "2020-11-27T13:22:15Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "0a6af877c6a73ffeb91c338038228751de01faec"
      },
      "comments": [
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi @stevomatthews,\r\nCould you please help with this part:\r\n\r\nGroupID: 32 bits.\r\n: The identifier of a group whose members include the sender socket that is making a connection.\r\n  The target socket that is interpreting GroupID should belong to the corresponding group on a target side\r\n  or create one **with the same GroupID** if the group does not exist.\r\n\r\n**with the same GroupID** - this part I haven't added in PR yet",
          "createdAt": "2020-11-20T11:29:03Z",
          "updatedAt": "2020-11-20T11:30:54Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NDc4Mzk3",
          "commit": {
            "abbreviatedOid": "9ae4b8c"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-20T14:33:30Z",
          "updatedAt": "2020-11-20T14:33:30Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```\r\nThe target socket that is interpreting GroupID should belong to the corresponding group on the target side. If \r\nsuch a group does not exist, the target socket should create it.\r\n```",
              "createdAt": "2020-11-20T14:33:30Z",
              "updatedAt": "2020-11-23T09:51:32Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NjA5ODM2",
          "commit": {
            "abbreviatedOid": "7e8d531"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2020-11-20T17:02:33Z",
          "updatedAt": "2020-11-20T17:08:55Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nThe Group Membership handshake extension is reserved for the future and is\r\ngoing to be used to allow multipath SRT connections.\r\n```",
              "createdAt": "2020-11-20T17:02:33Z",
              "updatedAt": "2020-11-23T09:51:32Z"
            },
            {
              "originalPosition": 17,
              "body": "\"Should\" -> \"must\" because it must belong to a group, or consider creating one. Although not 100% sure about the word \"must\" here, so upon your decision. \ud83e\udd14 \r\n\"Should\" -> \"may\" because it depends e.g. on whether a socket is allowed to accept group connections or not.\r\n\r\n```suggestion\r\n  The target socket that is interpreting GroupID must belong to the corresponding group on the target side.\r\n  If such a group does not exist, the target socket may create one.\r\n```",
              "createdAt": "2020-11-20T17:04:53Z",
              "updatedAt": "2020-11-23T09:51:32Z"
            }
          ]
        }
      ]
    },
    {
      "number": 76,
      "id": "MDExOlB1bGxSZXF1ZXN0NTQzNDIwMjgz",
      "title": "Overall corrections except Data Transmission Modes",
      "url": "https://github.com/Haivision/srt-rfc/pull/76",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "maxsharabayko",
        "mbakholdina"
      ],
      "labels": [],
      "body": "- Fixed minor problems and misprints,\r\n- Fixed punctuation in lists.\r\n\r\nPlease review Handshakes section, there were a lot of changes in it (formatting and punctuation).",
      "createdAt": "2020-12-21T11:21:12Z",
      "updatedAt": "2020-12-21T16:36:11Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "cc0066c15be858bbb5ad9311c07389a94ed1bb07",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "mbakholdina/overall-corrections",
      "headRefOid": "832a1862fa56d34cee0e03a7371c3ca82199a40c",
      "closedAt": "2020-12-21T16:36:07Z",
      "mergedAt": "2020-12-21T16:36:07Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "35a29c70aa7c7460b5a8e2b83868bed0e840f19e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 77,
      "id": "MDExOlB1bGxSZXF1ZXN0NTU1MDI5NTMw",
      "title": "Use cases for Data Transmission Modes section",
      "url": "https://github.com/Haivision/srt-rfc/pull/77",
      "state": "CLOSED",
      "author": "J-Rogmann",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mbakholdina",
        "J-Rogmann"
      ],
      "labels": [],
      "body": "Removed \"live mode\" and added new section \"Data Transmission Modes\" with subsections \"Message Mode\" and \"Buffer Mode\" as well as \"Use Case Live Streaming\". The use case subsection is a guidance on how live streaming is realized in current implementations and how to maintain compatibility towards existing implementations.\r\n\r\nPartially fixes #71.",
      "createdAt": "2021-01-14T16:00:42Z",
      "updatedAt": "2021-09-07T09:14:28Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "35a29c70aa7c7460b5a8e2b83868bed0e840f19e",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "use-case-guidance",
      "headRefOid": "5ec47e31a30d424bf1ef77249d5497cf7141d1ed",
      "closedAt": "2021-03-08T12:09:17Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "Superseded by #89 ",
          "createdAt": "2021-03-08T12:09:17Z",
          "updatedAt": "2021-03-08T12:09:17Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgyMjQ3MDgz",
          "commit": {
            "abbreviatedOid": "ab5bedb"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-03T11:05:28Z",
          "updatedAt": "2021-02-03T11:05:29Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "@J-Rogmann Throughout the PR, there are changes not related to \"Data Transmission Modes\" section. What's interesting I do not see any essential changes. Please remove them appropriately and make a commit so that we have changes for \"Data Transmission Modes\" section only.",
              "createdAt": "2021-02-03T11:05:28Z",
              "updatedAt": "2021-03-02T15:20:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5NDE4NjU1",
          "commit": {
            "abbreviatedOid": "ab5bedb"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T12:28:08Z",
          "updatedAt": "2021-02-12T12:28:08Z",
          "comments": [
            {
              "originalPosition": 71,
              "body": "> An exception would be packets arriving too late and are skipped by Too-Late Packet Drop mechanism.\r\n\r\nIn the case of a packet arriving too late and skipped by Too-Late Packet Drop mechanism, the order of delivery is still maintained except for potential sequence discontinuity. ",
              "createdAt": "2021-02-12T12:28:08Z",
              "updatedAt": "2021-03-02T15:20:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5NDIyMTM2",
          "commit": {
            "abbreviatedOid": "ab5bedb"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T12:33:19Z",
          "updatedAt": "2021-02-12T12:33:19Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "Please refer here to an appropriate section with data packet structure.",
              "createdAt": "2021-02-12T12:33:19Z",
              "updatedAt": "2021-03-02T15:20:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5NDI3OTA2",
          "commit": {
            "abbreviatedOid": "ab5bedb"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T12:41:51Z",
          "updatedAt": "2021-02-12T12:41:51Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "This introduction should be improved in a way that:\r\n- we clearly state that there are 2 data transmission modes supported by SRT: message and buffer (here we refer to appropriate subsections)\r\n- then we tell that SRT was mainly designed for live streaming, etc.\r\n- then we tell than file/message transmission is also possible via SRT and refer to \"File/Message transmission Use Case\" subsection which we currently don't have. ",
              "createdAt": "2021-02-12T12:41:51Z",
              "updatedAt": "2021-03-02T15:20:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5NDMxNzE4",
          "commit": {
            "abbreviatedOid": "ab5bedb"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T12:47:11Z",
          "updatedAt": "2021-02-12T12:47:12Z",
          "comments": [
            {
              "originalPosition": 58,
              "body": "Maybe \"Live Streaming Use Case\"?",
              "createdAt": "2021-02-12T12:47:12Z",
              "updatedAt": "2021-03-02T15:20:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5NDM1MDg1",
          "commit": {
            "abbreviatedOid": "ab5bedb"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T12:51:58Z",
          "updatedAt": "2021-02-12T12:51:58Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "> The default mode for continuous live streaming is Message Mode. \r\n\r\nThe default mode for continuous live streaming is Message Mode with certain settings described below.\r\n\r\nor something like this ",
              "createdAt": "2021-02-12T12:51:58Z",
              "updatedAt": "2021-03-02T15:20:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5NDM2MDkx",
          "commit": {
            "abbreviatedOid": "ab5bedb"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T12:53:29Z",
          "updatedAt": "2021-02-12T12:53:29Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "Add abbreviation for Too-Late Packet Drop as well - TLPKTDROP",
              "createdAt": "2021-02-12T12:53:29Z",
              "updatedAt": "2021-03-02T15:20:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5NDM3MDI4",
          "commit": {
            "abbreviatedOid": "ab5bedb"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T12:54:51Z",
          "updatedAt": "2021-02-12T12:54:51Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "Video -> video",
              "createdAt": "2021-02-12T12:54:51Z",
              "updatedAt": "2021-03-02T15:20:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5NDM5MjUx",
          "commit": {
            "abbreviatedOid": "ab5bedb"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-12T12:58:03Z",
          "updatedAt": "2021-02-12T12:58:03Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "There is also a need to say that in the case of live streaming live congestion control (LiveCC) is used and refer to an appropriate section. Should be \"SRT Packet Pacing and Congestion Control\".\r\n\r\n> As SRT is designed both for live streaming and file/message transmission (Section 4.2), there are two groups of congestion control algorithms defined in SRT: live congestion control (LiveCC), and file transfer congestion control (FileCC).",
              "createdAt": "2021-02-12T12:58:03Z",
              "updatedAt": "2021-03-02T15:20:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAxOTMwNDI4",
          "commit": {
            "abbreviatedOid": "ab5bedb"
          },
          "author": "J-Rogmann",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-02T15:15:34Z",
          "updatedAt": "2021-03-02T15:15:35Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "I did not made these changes and i assume, that maybe the typora editor was removing leading \"spaces\" at the beginning of certain lines",
              "createdAt": "2021-03-02T15:15:34Z",
              "updatedAt": "2021-03-02T15:20:22Z"
            }
          ]
        }
      ]
    },
    {
      "number": 78,
      "id": "MDExOlB1bGxSZXF1ZXN0NTY2NzMzMDE0",
      "title": "Changelog since version 01",
      "url": "https://github.com/Haivision/srt-rfc/pull/78",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mbakholdina"
      ],
      "labels": [],
      "body": "- Added changelog since version 01\r\n- Fixed punctuation in changelog since version 00",
      "createdAt": "2021-02-03T10:51:50Z",
      "updatedAt": "2021-02-04T14:19:04Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "35a29c70aa7c7460b5a8e2b83868bed0e840f19e",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "mbakholdina/changelog-02",
      "headRefOid": "8e8a45642fd8bb16dfef156c09761022782d1660",
      "closedAt": "2021-02-04T14:19:01Z",
      "mergedAt": "2021-02-04T14:19:01Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "6f9b48603ae2625ea1e8f6ca2c499b8dcac320f6"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgyNDAzNTc2",
          "commit": {
            "abbreviatedOid": "8e8a456"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "All good!",
          "createdAt": "2021-02-03T14:13:04Z",
          "updatedAt": "2021-02-03T14:13:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 79,
      "id": "MDExOlB1bGxSZXF1ZXN0NTcyNTExMDc3",
      "title": "Added missing control packets: CW, DROPREQ, PEERERROR",
      "url": "https://github.com/Haivision/srt-rfc/pull/79",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "maxsharabayko"
      ],
      "labels": [],
      "body": "- Congestion Warning - Fixes #7.\r\n- Drop Request - Fixes #8.\r\n- Peer Error - Fixes #9.",
      "createdAt": "2021-02-12T13:16:43Z",
      "updatedAt": "2021-02-19T11:14:00Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "a7b499aeee0a1928e10fb748628fa15239a7f0c2",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/control-packets",
      "headRefOid": "6409b4b3b9e1185f8b3354b28aa48711a0d536c5",
      "closedAt": "2021-02-19T11:13:58Z",
      "mergedAt": "2021-02-19T11:13:57Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "a9bff588ec7105501520a88714f0a40bc56f60df"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkwMTMyOTEz",
          "commit": {
            "abbreviatedOid": "2ab14a7"
          },
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "FYI, Travis CI seemed to have a temporary problem when building this PR. \r\nI think it will be successfully done if you trigger build again.",
          "createdAt": "2021-02-15T02:58:43Z",
          "updatedAt": "2021-02-15T03:06:56Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "From the perspective of RFC reader, if it isn't using,  I wonder why it is introduced.\r\nIf it is reserved for the complex or future use case, I feel it is redundant information.\r\nOr, if this control packet is not going to be in the future, it would be better to mention deprecation, rather than current status.\r\n",
              "createdAt": "2021-02-15T02:58:43Z",
              "updatedAt": "2021-02-19T10:59:35Z"
            },
            {
              "originalPosition": 40,
              "body": "I think it should be explained why `12.5%` is, but not for this commit. ",
              "createdAt": "2021-02-15T03:00:32Z",
              "updatedAt": "2021-02-19T10:59:35Z"
            },
            {
              "originalPosition": 86,
              "body": "\"TL Packet Drop\" first appeared here. For the term consistency, it would be better to be \"Too-Late Packet Drop\" or \"TLPKTDROP\".",
              "createdAt": "2021-02-15T03:05:34Z",
              "updatedAt": "2021-02-19T10:59:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMTk4NjA4",
          "commit": {
            "abbreviatedOid": "2ab14a7"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T13:15:38Z",
          "updatedAt": "2021-02-18T13:15:38Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "It is a legacy packet. The sender never sends it. But the receiver has a known behavior upon reception of this packet. Therefore, to avoid potential backward incompatibility this description is beneficial.",
              "createdAt": "2021-02-18T13:15:38Z",
              "updatedAt": "2021-02-19T10:59:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMTk4ODc4",
          "commit": {
            "abbreviatedOid": "2ab14a7"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T13:15:54Z",
          "updatedAt": "2021-02-18T13:15:54Z",
          "comments": [
            {
              "originalPosition": 40,
              "body": "Magic number.",
              "createdAt": "2021-02-18T13:15:54Z",
              "updatedAt": "2021-02-19T10:59:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMzUyNDE3",
          "commit": {
            "abbreviatedOid": "f44f8e1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T15:39:44Z",
          "updatedAt": "2021-02-18T15:39:45Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "This description (1108 - 1113) sounds to me like it is implementation-specific. Maybe we can make it less so:\r\n\r\n```suggestion\r\nThe Congestion Warning control packet is reserved for future use. Its purpose is to signal a receiver to increase the minimum inter-packet sending interval by a discrete value in order to slow down the sending rate.\r\n```\r\n\r\nAlso, isn't it the sender that sets the minimum inter-packet sending interval?",
              "createdAt": "2021-02-18T15:39:45Z",
              "updatedAt": "2021-02-19T10:59:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMzY4MjYw",
          "commit": {
            "abbreviatedOid": "f44f8e1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T15:53:37Z",
          "updatedAt": "2021-02-18T15:53:38Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "```suggestion\r\nA Message Drop Request control packet is sent by the sender to the receiver \r\nwhen it requests the retransmission of an unacknowledged packet (all or part \r\nof a message) which is not present in the sender's buffer (due to an internal error). \r\nThe sender notifies the receiver that it must not wait for retransmission of this \r\nmessage. Note that a Message Drop Request control packet is not sent if the \r\nToo Late Packet Drop mechanism ({{too-late-packet-drop}}) causes the sender \r\nto drop a message, as in this case the receiver is expected to drop it anyway.\r\n```",
              "createdAt": "2021-02-18T15:53:37Z",
              "updatedAt": "2021-02-19T10:59:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMzc1OTgx",
          "commit": {
            "abbreviatedOid": "f44f8e1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T16:00:31Z",
          "updatedAt": "2021-02-18T16:00:31Z",
          "comments": [
            {
              "originalPosition": 112,
              "body": "```suggestion\r\n: The packet type value of a Drop Request control packet is \"1\".\r\n```",
              "createdAt": "2021-02-18T16:00:31Z",
              "updatedAt": "2021-02-19T10:59:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMzg0MDM4",
          "commit": {
            "abbreviatedOid": "f44f8e1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T16:07:54Z",
          "updatedAt": "2021-02-18T16:07:55Z",
          "comments": [
            {
              "originalPosition": 139,
              "body": "```suggestion\r\nThe Peer Error control packet is sent by a receiver when a processing error \r\n(e.g. write to disk failure) occurs. This informs the sender of the situation \r\nand unblocks it from waiting for further responses from the receiver.\r\n\r\n```",
              "createdAt": "2021-02-18T16:07:54Z",
              "updatedAt": "2021-02-19T10:59:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMzg1MTE0",
          "commit": {
            "abbreviatedOid": "f44f8e1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T16:08:52Z",
          "updatedAt": "2021-02-18T16:08:53Z",
          "comments": [
            {
              "originalPosition": 141,
              "body": "```suggestion\r\nThe sender receiving this type of control packet must unblock any sending operation in progress.\r\n\r\n**NOTE**: This control packet is only used if file congestion control is enabled.\r\n```",
              "createdAt": "2021-02-18T16:08:52Z",
              "updatedAt": "2021-02-19T10:59:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMzg2NzA0",
          "commit": {
            "abbreviatedOid": "f44f8e1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T16:10:20Z",
          "updatedAt": "2021-02-18T16:10:21Z",
          "comments": [
            {
              "originalPosition": 159,
              "body": "```suggestion\r\n: The packet type value of a Peer Error control packet is \"1\".\r\n```",
              "createdAt": "2021-02-18T16:10:20Z",
              "updatedAt": "2021-02-19T10:59:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMzg2OTM2",
          "commit": {
            "abbreviatedOid": "f44f8e1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T16:10:35Z",
          "updatedAt": "2021-02-18T16:10:35Z",
          "comments": [
            {
              "originalPosition": 162,
              "body": "```suggestion\r\n: The control type value of a Peer Error control packet is \"8\".\r\n```",
              "createdAt": "2021-02-18T16:10:35Z",
              "updatedAt": "2021-02-19T10:59:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMzg5NDY2",
          "commit": {
            "abbreviatedOid": "f44f8e1"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Minor edits. Needs verification.",
          "createdAt": "2021-02-18T16:12:56Z",
          "updatedAt": "2021-02-18T16:12:56Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzNDIzODQ3",
          "commit": {
            "abbreviatedOid": "f44f8e1"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T16:44:25Z",
          "updatedAt": "2021-02-18T16:44:26Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "> Also, isn't it the sender that sets the minimum inter-packet sending interval?\r\n\r\nRight!!! I mixed up \"control packet receiver\" and \"receiver\".\r\nShould be: \"If a sender receives this Congestion Warning...\"",
              "createdAt": "2021-02-18T16:44:26Z",
              "updatedAt": "2021-02-19T10:59:35Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzNTYxOTU4",
          "commit": {
            "abbreviatedOid": "b214b28"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T19:15:34Z",
          "updatedAt": "2021-02-18T19:15:35Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "```suggestion\r\nThe Congestion Warning control packet is reserved for future use. \r\nIts purpose is to allow a receiver to signal a sender that there is congestion \r\nhappening at the receiving side. The expected behaviour is that upon \r\nreceiving this packet the sender slows down its sending rate by increasing the \r\nminimum inter-packet sending interval by a discrete value (posited to be 12.5%).\r\n\r\nNote that the conditions for a receiver to issue this type of packet are not yet defined.\r\n\r\n```",
              "createdAt": "2021-02-18T19:15:34Z",
              "updatedAt": "2021-02-19T10:59:35Z"
            }
          ]
        }
      ]
    },
    {
      "number": 80,
      "id": "MDExOlB1bGxSZXF1ZXN0NTczMjAxMDgw",
      "title": "Fix unmatched brace warning",
      "url": "https://github.com/Haivision/srt-rfc/pull/80",
      "state": "MERGED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "nitpick.\r\n\r\nIt's a very minor fix but it is for triggering the build of Travis ci.",
      "createdAt": "2021-02-15T01:51:43Z",
      "updatedAt": "2021-02-15T09:35:19Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "6f9b48603ae2625ea1e8f6ca2c499b8dcac320f6",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "fix-unmatched-brace",
      "headRefOid": "cb5eb52a92c942514185618e22202499538face8",
      "closedAt": "2021-02-15T08:36:54Z",
      "mergedAt": "2021-02-15T08:36:54Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "a8eb2229266c5e550dbb8ae8dc6aa198c3fbc8d4"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 81,
      "id": "MDExOlB1bGxSZXF1ZXN0NTczNTY5NDIw",
      "title": "ci: use local references",
      "url": "https://github.com/Haivision/srt-rfc/pull/81",
      "state": "CLOSED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This way is to avoid redundant downloading or build failing\r\nby unknown network issue.",
      "createdAt": "2021-02-15T13:35:48Z",
      "updatedAt": "2021-02-15T14:05:56Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "a8eb2229266c5e550dbb8ae8dc6aa198c3fbc8d4",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "use-local-references",
      "headRefOid": "94e3e0ec98d7ef1bc36fa29da8c2bcb67fb8f9a4",
      "closedAt": "2021-02-15T14:05:56Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't know why the docker on Travis CI doesn't recognize a local cache directory.\r\nI temporarily give up this task. ;(",
          "createdAt": "2021-02-15T14:05:56Z",
          "updatedAt": "2021-02-15T14:05:56Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 83,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0ODc1MDAw",
      "title": "TSBPD: clarify the term of \"play time\"",
      "url": "https://github.com/Haivision/srt-rfc/pull/83",
      "state": "MERGED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Without the clarification, it looks like that the target use case\r\nof SRT TSBPD is implicitly for multimedia streaming.\r\n\r\n - Fixes: #15",
      "createdAt": "2021-02-17T12:19:29Z",
      "updatedAt": "2021-02-22T10:00:24Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "a9bff588ec7105501520a88714f0a40bc56f60df",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "clarify-play-time-term",
      "headRefOid": "c55823068ac245421028e82e0ff13ba6a9741ec5",
      "closedAt": "2021-02-22T10:00:23Z",
      "mergedAt": "2021-02-22T10:00:23Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "038ad85f6af8c6523779b1654f47944abaf6e024"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTkzMTkyOTI4",
          "commit": {
            "abbreviatedOid": "5dc5f27"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-18T13:09:03Z",
          "updatedAt": "2021-02-18T13:09:03Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "> Packets received after their \"play time\" are dropped if the Too-Late Packet Drop feature is enabled \r\n\r\nThe initial phrasing was not an example, but the description of the dropping condition.\r\n\r\n**Maybe something like this?**\r\n\r\nPackets received after their \"play time\" are dropped if the Too-Late Packet Drop feature is enabled ({{too-late-packet-drop}}).\r\nFor example, in the case of live video streaming TSBPD and TL Packet Drop mechanisms allow to intentionally drop those packets that were lost and have no chance to be retransmitted before their play time. Thus providing a known and a fixed end-to-end latency of the stream.\r\n\r\n",
              "createdAt": "2021-02-18T13:09:03Z",
              "updatedAt": "2021-02-20T06:54:33Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk0NzE5MjM2",
          "commit": {
            "abbreviatedOid": "5dc5f27"
          },
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-20T06:45:41Z",
          "updatedAt": "2021-02-20T06:45:42Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Since I don't think 'live mode' is only for video streaming, I was unsure if \"play time\" is the right term. For example, in theory, we can send time-series sensor data in live mode of SRT so I thought we might need a more general term to replace \"play time\". \r\n\r\nHowever,  I think the additional explanation you have attached is also a good idea.",
              "createdAt": "2021-02-20T06:45:41Z",
              "updatedAt": "2021-02-20T06:54:33Z"
            }
          ]
        }
      ]
    },
    {
      "number": 84,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc0ODgwNDE4",
      "title": "Ci update",
      "url": "https://github.com/Haivision/srt-rfc/pull/84",
      "state": "MERGED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Travis-CI causes DNS resolving errors frequently.\r\nAlthough it is not exactly the same issue[1],\r\ntheir build host seems to have something related to DNS.\r\nHopefully, the build job works well with the newer host image.\r\n\r\n[1] https://github.com/travis-ci/travis-ci/issues/9696",
      "createdAt": "2021-02-17T12:28:36Z",
      "updatedAt": "2021-02-18T09:17:50Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "a8eb2229266c5e550dbb8ae8dc6aa198c3fbc8d4",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "ci-update",
      "headRefOid": "f23b4f9376cff84741c229d9986833fdc31c6a7d",
      "closedAt": "2021-02-18T09:17:50Z",
      "mergedAt": "2021-02-18T09:17:50Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "a7b499aeee0a1928e10fb748628fa15239a7f0c2"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 86,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc1NDIzOTky",
      "title": "Relax other protocols' latency comparison",
      "url": "https://github.com/Haivision/srt-rfc/pull/86",
      "state": "MERGED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "In order to avoid unnecessary discussion,\r\nthe constant latency value of other protocols are removed.\r\n\r\n - Fixes: #34",
      "createdAt": "2021-02-18T06:09:39Z",
      "updatedAt": "2021-02-25T12:44:57Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "a8eb2229266c5e550dbb8ae8dc6aa198c3fbc8d4",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "remove-constant-value",
      "headRefOid": "1314236cb13b6c4c1ef56e725aa0773b56a8d4bd",
      "closedAt": "2021-02-18T09:17:04Z",
      "mergedAt": "2021-02-18T09:17:04Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "2a1df7ff6c15e637007d92c610c523696ea00c9e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 87,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc3NTk5MjEy",
      "title": "Fixed information about UMSG_DROPREQ",
      "url": "https://github.com/Haivision/srt-rfc/pull/87",
      "state": "MERGED",
      "author": "ethouris",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-02-22T12:23:44Z",
      "updatedAt": "2021-03-08T10:23:02Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "038ad85f6af8c6523779b1654f47944abaf6e024",
      "headRepository": "ethouris/srt-rfc",
      "headRefName": "fix-dropreq",
      "headRefOid": "66feaf66e242d590282c775c1bfc4971f7f28b6c",
      "closedAt": "2021-03-08T10:23:02Z",
      "mergedAt": "2021-03-08T10:23:02Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "81638062fa08f7bde911c788009ab611d5062201"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1Mjk3NTc5",
          "commit": {
            "abbreviatedOid": "c0f6079"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-22T12:28:05Z",
          "updatedAt": "2021-02-22T12:28:05Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "- We don't have \"file/message\" mode defined in RFC.\r\n- `srt_sendmsg` is library specific API function, not defined in the RFC. \r\n\r\nConsider generalizing this. Maybe, @stevomatthews , you could help here?",
              "createdAt": "2021-02-22T12:28:05Z",
              "updatedAt": "2021-03-08T10:13:13Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1NjEwMzY4",
          "commit": {
            "abbreviatedOid": "c0f6079"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-22T17:41:11Z",
          "updatedAt": "2021-02-22T17:41:12Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nof a message) which is not present in the sender's buffer. This may happen, for \r\nexample, when a TTL parameter triggers a timeout, causing a message/packet \r\nto be removed from the sender's buffer.\r\n```",
              "createdAt": "2021-02-22T17:41:11Z",
              "updatedAt": "2021-03-08T10:13:13Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1OTc2MDMw",
          "commit": {
            "abbreviatedOid": "c0f6079"
          },
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-02-23T03:41:43Z",
          "updatedAt": "2021-02-23T03:41:43Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "> causing a message/packet to be removed \r\n\r\nI think the method of dropping a message or packet will be different. I guess dropping multiple packets repeatedly is the way to drop a single message.\r\n\r\nIMHO, If the deletion of \"message\" is needed here, it should also be presented how to achieve it. Or, simply, it can be \"packet\".",
              "createdAt": "2021-02-23T03:41:43Z",
              "updatedAt": "2021-03-08T10:13:13Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAyOTA4MTE5",
          "commit": {
            "abbreviatedOid": "c0f6079"
          },
          "author": "ethouris",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-03T13:46:51Z",
          "updatedAt": "2021-03-03T13:46:51Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Ok, I made it a little bit more precise; @stevomatthews please re-review.",
              "createdAt": "2021-03-03T13:46:51Z",
              "updatedAt": "2021-03-08T10:13:13Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1MjgxMjQy",
          "commit": {
            "abbreviatedOid": "d419d36"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-05T14:51:43Z",
          "updatedAt": "2021-03-05T14:51:44Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\ntimeout for retransmitting lost packets which constitute parts of a message, causing\r\n```",
              "createdAt": "2021-03-05T14:51:44Z",
              "updatedAt": "2021-03-08T10:13:13Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1MjgxNzEy",
          "commit": {
            "abbreviatedOid": "d419d36"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Minor edit",
          "createdAt": "2021-03-05T14:51:55Z",
          "updatedAt": "2021-03-05T14:51:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 88,
      "id": "MDExOlB1bGxSZXF1ZXN0NTgwMTM2NjE2",
      "title": "TLPKTDROP: explain magic number by variable.",
      "url": "https://github.com/Haivision/srt-rfc/pull/88",
      "state": "MERGED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I am not sure if I am reading the right point of the codes to understand this description.\r\n\r\nhttps://github.com/Haivision/srt/blob/6012fdf483e8ddaca53a9f88e34ab5641c549b2a/srtcore/core.cpp#L5961\r\n\r\nIn that code, actually, I don't see \"125%\". Instead, `SRT_TLPKTDROP_MINTHRESHOLD_MS`(=1000ms) seems to play the main role to judge too-late packet drop.\r\n\r\nAs the comment on the 5947th line of the code, it might be reasonable to be an SRT socket option someday. If so, the description of RFC, I'd like to suggest explaining by `TLPKTDROP_THRESHOLD` variable. It is actually referencing magic number though.",
      "createdAt": "2021-02-25T14:22:56Z",
      "updatedAt": "2021-03-12T09:50:06Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "a237e5e2c1b354a45bab811ea66ffba78dcef5fb",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "tlpktdrop-magic-number",
      "headRefOid": "19a935709cdddd12faa32e4adb61d0fde17b51bf",
      "closedAt": "2021-03-11T08:38:33Z",
      "mergedAt": "2021-03-11T08:38:33Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "e235d1fd2f5a0d8c8e5b6fcb3d5721c3182bef55"
      },
      "comments": [
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "The current description about 125% comes from SRT Technical Overview, and it is not accurate.\r\n\r\nThe default value of `SRTO_SNDDROPDELAY` is 0 in live config.\r\nTherefore [on this line](https://github.com/Haivision/srt/blob/6012fdf483e8ddaca53a9f88e34ab5641c549b2a/srtcore/core.cpp#L5949) `threshold_ms` is roughly `m_iPeerTsbPdDelay_ms  + 20 ms`:\r\n\r\n```c++\r\nint threshold_ms = 0;\r\nif (m_config.m_iSndDropDelay >= 0)\r\n{\r\n    threshold_ms = std::max(m_iPeerTsbPdDelay_ms + m_config.m_iSndDropDelay, +SRT_TLPKTDROP_MINTHRESHOLD_MS) +\r\n                    (2 * COMM_SYN_INTERVAL_US / 1000);\r\n}\r\n```\r\n\r\nAt low values of `m_iPeerTsbPdDelay_ms ` the `threshold_ms = SRT_TLPKTDROP_MINTHRESHOLD_MS + 20ms` or **1020 ms**.\r\n\r\nThe threshold indeed could become a socket option.\r\n\r\nThe main goal of this, I assume, is to let the receiver drop the packet earlier before the sender decides to drop it.\r\nIf the receiver drops a packet, it will send an ACK to the sender, so the sender will never know about the drop, but at the same time does not need to drop this too late packet and can move on.",
          "createdAt": "2021-03-03T14:17:47Z",
          "updatedAt": "2021-03-03T14:17:47Z"
        },
        {
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "body": "Thank you for review. I am not familiar with the online review tool of github. @maxsharabayko  Should I send PR in accordance with review? Or, will it be automatically squashed when you merge?",
          "createdAt": "2021-03-09T04:33:00Z",
          "updatedAt": "2021-03-09T04:33:00Z"
        },
        {
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "body": "> Thank you for review. I am not familiar with the online review tool of github. @maxsharabayko Should I send PR in accordance with review? Or, will it be automatically squashed when you merge?\r\n\r\nI assume that github won't merge changes from the online review tool.",
          "createdAt": "2021-03-11T02:02:43Z",
          "updatedAt": "2021-03-11T02:02:43Z"
        },
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "@justinjoy \r\n> I assume that github won't merge changes from the online review tool.\r\n\r\nThere is an option to do squash-merge. It worked well as there were no conflicts with the master.\r\nThank you!",
          "createdAt": "2021-03-11T08:39:17Z",
          "updatedAt": "2021-03-11T08:39:17Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAyOTQzMTE5",
          "commit": {
            "abbreviatedOid": "7f83bd1"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-03T14:20:18Z",
          "updatedAt": "2021-03-03T14:23:06Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "I am not 100% sure, but likely space before the brace would make sense, as the reference renders into \"Secition #.#\".\r\nPlease check. One more such case is above.\r\n\r\n```suggestion\r\nand send a fake ACK. To the sender, this fake ACK is a real ACK ({{packet-acks}}), \r\n```\r\n",
              "createdAt": "2021-03-03T14:20:18Z",
              "updatedAt": "2021-03-11T02:01:44Z"
            },
            {
              "originalPosition": 14,
              "body": "Maybe add some note that the value should be that high to allow the receiver to drop the packet first, so that sender drops packets only when serious congestion happens and it does not get a response from the peer.",
              "createdAt": "2021-03-03T14:23:04Z",
              "updatedAt": "2021-03-11T02:01:44Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0NzkxMTMz",
          "commit": {
            "abbreviatedOid": "49cab33"
          },
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-05T04:11:42Z",
          "updatedAt": "2021-03-05T04:11:42Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "That's a very useful note.",
              "createdAt": "2021-03-05T04:11:42Z",
              "updatedAt": "2021-03-11T02:01:44Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA2MjE0MDEw",
          "commit": {
            "abbreviatedOid": "49cab33"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-08T11:53:22Z",
          "updatedAt": "2021-03-08T11:54:13Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nWith TLPKTDROP is enabled, when a packet timestamp is older than TLPKTDROP_THRESHOLD,\r\n```",
              "createdAt": "2021-03-08T11:53:22Z",
              "updatedAt": "2021-03-11T02:01:44Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA2NDAzOTg0",
          "commit": {
            "abbreviatedOid": "49cab33"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-08T15:22:11Z",
          "updatedAt": "2021-03-08T15:22:12Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "You would either say \"When TLPKTDROP is enabled ...\" or \"With TLPKTDROP enabled ...\"\r\n\r\nBoth forms are correct.",
              "createdAt": "2021-03-08T15:22:12Z",
              "updatedAt": "2021-03-11T02:01:44Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA2NDEyNTM0",
          "commit": {
            "abbreviatedOid": "49cab33"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-08T15:30:15Z",
          "updatedAt": "2021-03-08T15:30:16Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nTLPKTDROP_THRESHOLD: a marginal value that defines a limit for when a packet is considered to be delivered in time. \r\n: The value is related to SRT Latency ({{srt-latency}}). For an efficient packet drop mechanism,\r\n  it is recommended that a higher value than the latency be used. This will allow the receiver to drop the packet first\r\n  so that the sender drops the packet only when no proper response is received from the peer (due to\r\n  severe congestion, for example). When considering RTT, it is recommended that the threshold value be 1.25 times\r\n  the SRT Latency value.\r\n\r\nNote that the sender keeps packets for at least 1 second in case the\r\nSRT latency is not enough for a large RTT (that is, if TLPKTDROP_THRESHOLD is less \r\n```",
              "createdAt": "2021-03-08T15:30:15Z",
              "updatedAt": "2021-03-11T02:01:44Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA2NDEzMjMz",
          "commit": {
            "abbreviatedOid": "49cab33"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Minor edits",
          "createdAt": "2021-03-08T15:30:57Z",
          "updatedAt": "2021-03-08T15:30:57Z",
          "comments": []
        }
      ]
    },
    {
      "number": 89,
      "id": "MDExOlB1bGxSZXF1ZXN0NTg0MDY2NzYz",
      "title": "Improved Data Transmission Modes section plus added best practices for live streaming and file transmission use cases",
      "url": "https://github.com/Haivision/srt-rfc/pull/89",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mbakholdina"
      ],
      "labels": [],
      "body": "The current PR is a replacement of the PR #77 by @J-Rogmann. Fixes #71.\r\n\r\nI've improved \"Data Transmission Modes\" section: added introduction and left here only message and buffer modes. The I've created a separate section \"Best practices ...\" where I put Justus's description of the use cases plus reworked the original material a bit.\r\n\r\nTo discuss:\r\n- [x] The usage of \"file/message transfer\" - Whether and where is it appropriate to use \"file/message\" instead of \"file\" only?\r\n- [x] Consider renaming \"Live Streaming Use Case\" to \"Configuration for Live Streaming\".  ",
      "createdAt": "2021-03-03T15:56:33Z",
      "updatedAt": "2021-09-07T09:13:42Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "81638062fa08f7bde911c788009ab611d5062201",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "mbakholdina/data-transmission-modes",
      "headRefOid": "53e6a91b2efe467c1658086080c9fb41e260c6aa",
      "closedAt": "2021-03-08T11:51:26Z",
      "mergedAt": "2021-03-08T11:51:26Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "a237e5e2c1b354a45bab811ea66ffba78dcef5fb"
      },
      "comments": [
        {
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "body": "CI failure.\r\n```\r\ndraft-sharabayko-mops-srt.xml(0): Error: IDREF attribute target references an unknown ID \"fileCC\", at None\r\n/home/idci/draft/draft-sharabayko-mops-srt.xml(8): Error: Invalid document before running preptool.\r\nUnable to complete processing draft-sharabayko-mops-srt.xml\r\n```",
          "createdAt": "2021-03-04T10:49:37Z",
          "updatedAt": "2021-03-04T10:49:37Z"
        },
        {
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi @stevomatthews, the current PR is ready for your review.\r\n\r\nI have one questions regarding the sections naming. Now we have under \"Best Practices ...\":\r\n- \"Live Streaming Use Case\" -> \"Configuration for Live Streaming\", \"Live Streaming Configuration\", or \"Live Streaming Preferences\" - What does sound better? I personally like \"Configuration for Live Streaming\", but not sure.\r\n- The same for \"File Transmission Use Case\".\r\n",
          "createdAt": "2021-03-04T14:40:55Z",
          "updatedAt": "2021-03-04T14:40:55Z"
        },
        {
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "body": "> Hi @stevomatthews, the current PR is ready for your review.\r\n> \r\n> I have one questions regarding the sections naming. Now we have under \"Best Practices ...\":\r\n> \r\n> * \"Live Streaming Use Case\" -> \"Configuration for Live Streaming\", \"Live Streaming Configuration\", or \"Live Streaming Preferences\" - What does sound better? I personally like \"Configuration for Live Streaming\", but not sure.\r\n> * The same for \"File Transmission Use Case\".\r\n\r\nI'm not sure if the word \"configuration\" applies here. It's not about how to configure live streaming; it's best practices to follow when using SRT to do live streaming.\r\n\r\nSince the name of the entire section describes the contents, it might be simpler to just name the sub-sections more plainly:\r\n\r\n# Best Practices and Configuration Tips for Data Transmission via SRT \r\n    ## Live Streaming\r\n    ## File Transmission\r\n        ### File Transmission in Buffer Mode\r\n        ### File Transmission in Message Mode",
          "createdAt": "2021-03-04T17:36:07Z",
          "updatedAt": "2021-03-04T17:36:07Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzEzMTM1",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T16:42:01Z",
          "updatedAt": "2021-03-04T16:42:02Z",
          "comments": [
            {
              "originalPosition": 205,
              "body": "```suggestion\r\n- Only data packets with their Packet Position Flag (PP) field set to \"11b\" are allowed, meaning a single data packet forms exactly one message ({{data-pkt}}).\r\n```",
              "createdAt": "2021-03-04T16:42:02Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzE0Njk4",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T16:43:22Z",
          "updatedAt": "2021-03-04T16:43:23Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nBy acknowledging the reception of data packets up to the acknowledged packet sequence number,\r\n```",
              "createdAt": "2021-03-04T16:43:22Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzE2MjM2",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T16:44:44Z",
          "updatedAt": "2021-03-04T16:44:44Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "```suggestion\r\n**NOTE**: This control packet is only used if file transfer congestion control ({{fileCC}}) is enabled.\r\n```",
              "createdAt": "2021-03-04T16:44:44Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzM2OTcx",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T17:03:35Z",
          "updatedAt": "2021-03-04T17:03:36Z",
          "comments": [
            {
              "originalPosition": 98,
              "body": "```suggestion\r\nThis message may span multiple UDP packets and multiple SRT data packets. The \r\n```",
              "createdAt": "2021-03-04T17:03:35Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzQyNjM3",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T17:07:11Z",
          "updatedAt": "2021-03-04T17:07:11Z",
          "comments": [
            {
              "originalPosition": 144,
              "body": "```suggestion\r\nmaking it impossible to retransmit packets endlessly. This is important for the case of live streaming ({{data-transmission-modes}}, {{live-streaming-use-case}}).\r\n```",
              "createdAt": "2021-03-04T17:07:11Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzQzODUw",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T17:07:41Z",
          "updatedAt": "2021-03-04T17:07:42Z",
          "comments": [
            {
              "originalPosition": 154,
              "body": "```suggestion\r\nAs SRT is designed both for live streaming and file\r\n```",
              "createdAt": "2021-03-04T17:07:41Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzQ1ODk1",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T17:09:41Z",
          "updatedAt": "2021-03-04T17:09:41Z",
          "comments": [
            {
              "originalPosition": 199,
              "body": "```suggestion\r\nThis section describes real world examples of live audio/video streaming and the current consensus on maintaining the compatibility between SRT implementations by different vendors. It is meant as guidance for developers to write applications compatible with existing SRT implementations.\r\n```",
              "createdAt": "2021-03-04T17:09:41Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzQ2NTMw",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T17:10:20Z",
          "updatedAt": "2021-03-04T17:10:20Z",
          "comments": [
            {
              "originalPosition": 203,
              "body": "```suggestion\r\nThe default SRT data transmission mode for continuous live streaming is message mode ({{transmission-mode-msg}}) with certain settings applied as described below:\r\n```",
              "createdAt": "2021-03-04T17:10:20Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzQ3NTMz",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T17:11:19Z",
          "updatedAt": "2021-03-04T17:11:20Z",
          "comments": [
            {
              "originalPosition": 217,
              "body": "```suggestion\r\n  packet arriving too late and skipped by the TLPKTDROP mechanism, the\r\n```",
              "createdAt": "2021-03-04T17:11:20Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzQ5OTI1",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T17:13:42Z",
          "updatedAt": "2021-03-04T17:13:43Z",
          "comments": [
            {
              "originalPosition": 225,
              "body": "```suggestion\r\nThis combination of settings allows live streaming with a constant latency ({{srt-latency}}). The receiving end will not \"fall behind\" in time by waiting for missing packets. However, data integrity might not be ensured if packets or retransmitted packets do not arrive within the expected time frame. Audio or video interruption can occur, but the overall latency is maintained and does not increase over time whenever packets are missing.\r\n```",
              "createdAt": "2021-03-04T17:13:42Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzUwNjQz",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T17:14:21Z",
          "updatedAt": "2021-03-04T17:14:21Z",
          "comments": [
            {
              "originalPosition": 229,
              "body": "```suggestion\r\nThis section describes the use case of file transmission and provides configuration examples.\r\n```",
              "createdAt": "2021-03-04T17:14:21Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzUyNTcx",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T17:16:18Z",
          "updatedAt": "2021-03-04T17:16:18Z",
          "comments": [
            {
              "originalPosition": 231,
              "body": "```suggestion\r\nThe usage of both message and buffer modes ({{data-transmission-modes}}) is possible in this case. For both modes, Timestamp-Based Packet Delivery (TSBPD) ({{tsbpd}}) and Too-Late Packet Drop (TLPKTDROP) ({{too-late-packet-drop}}) mechanisms must be turned off, while congestion control must be set to \"file transfer congestion control\" (FileCC) ({{fileCC}).\r\n```",
              "createdAt": "2021-03-04T17:16:18Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzU1NDkw",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T17:19:25Z",
          "updatedAt": "2021-03-04T17:19:26Z",
          "comments": [
            {
              "originalPosition": 233,
              "body": "```suggestion\r\nWhen TSBPD is disabled, each packet gets timestamped with the time it is sent by the SRT sender. A packet being sent for the first time will have a timestamp different from that of a corresponding retransmitted packet. In contrast to the live streaming case, the timing of packets' delivery, when sending files, is not critical. The most important thing is data integrity. Therefore the TLPKTDROP mechanism must be disabled in this case. No data is allowed to be dropped, because this will result in corrupted files with missing data. The retransmission of missing packets has to happen until the packets are finally acknowledged by the SRT receiver.\r\n```",
              "createdAt": "2021-03-04T17:19:26Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzU1OTEx",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T17:19:49Z",
          "updatedAt": "2021-03-04T17:19:50Z",
          "comments": [
            {
              "originalPosition": 235,
              "body": "```suggestion\r\nThe file transfer congestion control (FileCC) mechanism will take care of using the available link bandwidth for maximum transfer speed.\r\n```",
              "createdAt": "2021-03-04T17:19:50Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzU3MzYx",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T17:21:18Z",
          "updatedAt": "2021-03-04T17:21:18Z",
          "comments": [
            {
              "originalPosition": 239,
              "body": "```suggestion\r\nThe original UDT protocol {{GHG04b}} used buffer mode ({{transmission-mode-buffer}}) to send files, and the same is possible in SRT. This mode was designed to transmit one file per connection. For a single file transmission, a socket is opened, a file is transmitted, and then the socket is closed. This procedure is repeated for each subsequent single file, as the receiver cannot distinguish between two files in a continuous data stream.\r\n```",
              "createdAt": "2021-03-04T17:21:18Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzU4MDA2",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T17:21:59Z",
          "updatedAt": "2021-03-04T17:21:59Z",
          "comments": [
            {
              "originalPosition": 241,
              "body": "```suggestion\r\nBuffer mode is not suitable for the transmission of many small files since for every file a new connection has to be established. To initiate a new connection, at least two round-trip times (RTTs) for the handshake exchange are required ({{handshake-messages}}).\r\n```",
              "createdAt": "2021-03-04T17:21:59Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzU4Mzgy",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T17:22:24Z",
          "updatedAt": "2021-03-04T17:22:25Z",
          "comments": [
            {
              "originalPosition": 243,
              "body": "```suggestion\r\nIt is also important to note that the SRT protocol does not add any information to the data being transmitted. The file name or any auxiliary information can be declared separately by the sending application, e.g., in the form of a Stream ID Extension Message ({{sec-hsext-streamid}}).\r\n```",
              "createdAt": "2021-03-04T17:22:24Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzU5MTI0",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T17:23:08Z",
          "updatedAt": "2021-03-04T17:23:09Z",
          "comments": [
            {
              "originalPosition": 247,
              "body": "```suggestion\r\nIf message mode ({{transmission-mode-msg}}) is used for the file transmission, the application should either segment the file into several messages, or use one message per file. The size of an individual message plays an important role on the receiving side since the size of the receiver buffer should be large enough to store at least a single message entirely.\r\n```",
              "createdAt": "2021-03-04T17:23:08Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzYxNTQ3",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-04T17:25:34Z",
          "updatedAt": "2021-03-04T17:25:35Z",
          "comments": [
            {
              "originalPosition": 249,
              "body": "```suggestion\r\nIn the case of file transfer in message mode, the file name, segmentation rules, or any auxiliary information can be specified separately by both sending and receiving applications. The SRT protocol does not provide a specific way of doing this. It could be done by setting the file name, etc., in the very first message of a message sequence, followed by the file itself.\r\n```",
              "createdAt": "2021-03-04T17:25:35Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA0MzYyNDYy",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Minor edits",
          "createdAt": "2021-03-04T17:26:33Z",
          "updatedAt": "2021-03-04T17:26:33Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1MTY0MjU0",
          "commit": {
            "abbreviatedOid": "47162ac"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-05T13:58:34Z",
          "updatedAt": "2021-03-05T13:58:34Z",
          "comments": [
            {
              "originalPosition": 231,
              "body": "@stevomatthews Why do we put \"file transfer congestion control\" in quotation marks here? \r\n\r\nThere are several places in the document where I refer to \"file transfer congestion control\". Could you please take a look whether quotation marks are required somewhere else?\r\n\r\nThe same question for \"live congestion control\" or LiveCC.",
              "createdAt": "2021-03-05T13:58:34Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1MzkyMTI3",
          "commit": {
            "abbreviatedOid": "1cf8dc2"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-05T16:25:28Z",
          "updatedAt": "2021-03-05T16:25:28Z",
          "comments": [
            {
              "originalPosition": 231,
              "body": "I put the quotation marks here to indicate that **file transfer congestion control** is a specific mechanism (just like Timestamp-Based Packet Delivery and Too-Late Packet Drop \u2014 these are written with initial caps, which makes it clear). On line 2243, FileCC is described:\r\n```\r\nthere are two groups of\r\ncongestion control algorithms defined in SRT: live congestion\r\ncontrol (LiveCC), and file transfer congestion control (FileCC).\r\n```\r\nThis should make it clear to an attentive reader. So my suggestion would be to just remove my original quotation marks. If you did want to make it clearer, I would suggest using initial caps for both **live congestion\r\ncontrol** and **file transfer congestion control**, but this might open the door to other such stylistic issues.",
              "createdAt": "2021-03-05T16:25:28Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1NDE3MTIx",
          "commit": {
            "abbreviatedOid": "1cf8dc2"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-05T16:53:53Z",
          "updatedAt": "2021-03-05T16:53:54Z",
          "comments": [
            {
              "originalPosition": 234,
              "body": "```suggestion\r\nThe usage of both message and buffer modes ({{data-transmission-modes}}) is possible in this case. For both modes, Timestamp-Based Packet Delivery (TSBPD) ({{tsbpd}}) and Too-Late Packet Drop (TLPKTDROP) ({{too-late-packet-drop}}) mechanisms must be turned off, while file transfer congestion control (FileCC) ({{fileCC}) must be enabled.\r\n```",
              "createdAt": "2021-03-05T16:53:53Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA1NDIxNTg0",
          "commit": {
            "abbreviatedOid": "1cf8dc2"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Another minor edit.",
          "createdAt": "2021-03-05T16:59:00Z",
          "updatedAt": "2021-03-05T16:59:00Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA2MTk2MjY5",
          "commit": {
            "abbreviatedOid": "15464d0"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-08T11:26:21Z",
          "updatedAt": "2021-03-08T11:26:22Z",
          "comments": [
            {
              "originalPosition": 231,
              "body": "Yes, I've followed your suggestion and decided to use initial caps for both live congestion control and file transfer congestion control. I think we can spend some time and see whether there is a need for using initial capital letters for other terms, but during the next RFC iteration.",
              "createdAt": "2021-03-08T11:26:21Z",
              "updatedAt": "2021-03-08T11:35:43Z"
            }
          ]
        }
      ]
    },
    {
      "number": 90,
      "id": "MDExOlB1bGxSZXF1ZXN0NTg0MTI3NTAx",
      "title": "Fixed estimation to estimate where appropriate",
      "url": "https://github.com/Haivision/srt-rfc/pull/90",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mbakholdina"
      ],
      "labels": [],
      "body": "Fixes #82.",
      "createdAt": "2021-03-03T17:15:28Z",
      "updatedAt": "2021-03-04T12:06:30Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "038ad85f6af8c6523779b1654f47944abaf6e024",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "mbakholdina/fix-estimation",
      "headRefOid": "ccf1c575bb60df8afa3336cb2ab17951d5e1a8a8",
      "closedAt": "2021-03-04T12:06:27Z",
      "mergedAt": "2021-03-04T12:06:27Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "e3190bad56fb8689cdd5988717729579ac2a55e4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAzNDY2MjA0",
          "commit": {
            "abbreviatedOid": "ccf1c57"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Reviewed changes. All good.",
          "createdAt": "2021-03-03T23:33:01Z",
          "updatedAt": "2021-03-03T23:33:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 91,
      "id": "MDExOlB1bGxSZXF1ZXN0NTg0OTM1MTA1",
      "title": "Minor correction in Configuring MaxBW section",
      "url": "https://github.com/Haivision/srt-rfc/pull/91",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mbakholdina"
      ],
      "labels": [],
      "body": "Minor correction in Configuring MaxBW section. No language review is required, can be merged.",
      "createdAt": "2021-03-04T16:18:47Z",
      "updatedAt": "2021-03-04T16:20:55Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "e3190bad56fb8689cdd5988717729579ac2a55e4",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "mbakholdina/fix-maxbw-table",
      "headRefOid": "32bb0ab681a63556a2334c16d3d003c79c9ad43f",
      "closedAt": "2021-03-04T16:20:53Z",
      "mergedAt": "2021-03-04T16:20:53Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "38984487834db5bf35c10367d6df8c5e995fc9ca"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 94,
      "id": "MDExOlB1bGxSZXF1ZXN0NTkwNDI2MjQ1",
      "title": "Fix idnits warnings",
      "url": "https://github.com/Haivision/srt-rfc/pull/94",
      "state": "MERGED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This PR will suppress most idnits warnings (#93)",
      "createdAt": "2021-03-11T02:59:36Z",
      "updatedAt": "2021-03-11T08:46:03Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "a237e5e2c1b354a45bab811ea66ffba78dcef5fb",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "fix-idnits-warnings",
      "headRefOid": "bf1322f0063515a46603f9da6a3bbf44da025522",
      "closedAt": "2021-03-11T08:36:04Z",
      "mergedAt": "2021-03-11T08:36:04Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "61df647e3c9401efab8122128fc1cdf2460b0f90"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 95,
      "id": "MDExOlB1bGxSZXF1ZXN0NTkwNzQxNTU0",
      "title": "Fix formatting",
      "url": "https://github.com/Haivision/srt-rfc/pull/95",
      "state": "MERGED",
      "author": "justinjoy",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Minor fix to render the document correctly.",
      "createdAt": "2021-03-11T10:17:56Z",
      "updatedAt": "2021-03-16T04:06:39Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "e235d1fd2f5a0d8c8e5b6fcb3d5721c3182bef55",
      "headRepository": "justinjoy/srt-rfc",
      "headRefName": "fix-formatting",
      "headRefOid": "6ceaea34d0affb9ce0ef529265e6da785b5dce1a",
      "closedAt": "2021-03-12T09:03:44Z",
      "mergedAt": "2021-03-12T09:03:44Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "132cd7906f17a3d33b13655c8862ec91896e1874"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 96,
      "id": "MDExOlB1bGxSZXF1ZXN0NTkyOTkxMTUx",
      "title": "Rename draft-sharabayko-mops-srt.md to draft-sharabayko-srt.md",
      "url": "https://github.com/Haivision/srt-rfc/pull/96",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-03-15T11:24:55Z",
      "updatedAt": "2021-03-15T11:31:04Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "132cd7906f17a3d33b13655c8862ec91896e1874",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/file-renaming",
      "headRefOid": "8e96b0281cb68e78ea93fff3d9c00cc52f675d10",
      "closedAt": "2021-03-15T11:31:02Z",
      "mergedAt": "2021-03-15T11:31:01Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "e3782bee1866353a54a00f9f406551889046622b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 98,
      "id": "MDExOlB1bGxSZXF1ZXN0Njg5ODQ3MjU1",
      "title": "Overall corrections plus Acknowledgements section",
      "url": "https://github.com/Haivision/srt-rfc/pull/98",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-07-14T11:55:39Z",
      "updatedAt": "2021-07-14T11:57:00Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "c5ab20123d958081b356c819560691592f577738",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "mbakholdina/srt-over-quic-corrections",
      "headRefOid": "0f729afae35ae01acec3f6047d00cb2123a4e484",
      "closedAt": "2021-07-14T11:56:57Z",
      "mergedAt": "2021-07-14T11:56:57Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "4babc1ce27ebd9d84edc7f0b85dbcb4afdde84d3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 99,
      "id": "MDExOlB1bGxSZXF1ZXN0NjkwNTk3NjI3",
      "title": "Language review for SRT over QUIC draft",
      "url": "https://github.com/Haivision/srt-rfc/pull/99",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-07-15T10:34:54Z",
      "updatedAt": "2021-07-19T08:45:48Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "4babc1ce27ebd9d84edc7f0b85dbcb4afdde84d3",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "mbakholdina/srt-over-quic-language-review",
      "headRefOid": "b8c48b09e05e555889eb87b1ee54cfa4bca007cc",
      "closedAt": "2021-07-15T11:30:48Z",
      "mergedAt": "2021-07-15T11:30:48Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "29629ddb0fad2a430716b591701e69f075bfef56"
      },
      "comments": [
        {
          "author": "justinjoy",
          "authorAssociation": "COLLABORATOR",
          "body": "\ud83d\udc4d ",
          "createdAt": "2021-07-19T08:45:48Z",
          "updatedAt": "2021-07-19T08:45:48Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA3MjAwMjM3",
          "commit": {
            "abbreviatedOid": "f783ffc"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-15T10:42:15Z",
          "updatedAt": "2021-07-15T10:43:20Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nIf SRT fails to recover a packet loss within a specified latency, then the packet is dropped to avoid\r\n```\r\n\r\nRecover packet loss until the latency restriction permits. Not a packet lost within the latency.",
              "createdAt": "2021-07-15T10:42:15Z",
              "updatedAt": "2021-07-15T10:43:20Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA3MjM3MDE1",
          "commit": {
            "abbreviatedOid": "99bf287"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-15T11:27:35Z",
          "updatedAt": "2021-07-15T11:27:36Z",
          "comments": [
            {
              "originalPosition": 254,
              "body": "```suggestion\r\nQuicly library {{QUICLY}} from Fastly was chosen to provide a QUIC datagram transport layer for SRT over QUIC PoC. We would like to thank Kazuho Oku (Fastly) for his help.\r\n```",
              "createdAt": "2021-07-15T11:27:35Z",
              "updatedAt": "2021-07-15T11:27:36Z"
            }
          ]
        }
      ]
    },
    {
      "number": 100,
      "id": "MDExOlB1bGxSZXF1ZXN0NjkwNjQ5Nzgw",
      "title": "Updated links in README.md.",
      "url": "https://github.com/Haivision/srt-rfc/pull/100",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Added links to SRT over QUIC RFC.",
      "createdAt": "2021-07-15T11:54:31Z",
      "updatedAt": "2021-07-15T11:59:50Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "b7187be977fe2e47ea13bcf9cc975947749854c9",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/readme-update",
      "headRefOid": "7bf649628cd539535910cf88d3b00c90d39d935c",
      "closedAt": "2021-07-15T11:59:47Z",
      "mergedAt": "2021-07-15T11:59:47Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "8df642e6774787e9bc9d4ab00ee3a0b2e083f7d8"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 102,
      "id": "MDExOlB1bGxSZXF1ZXN0NjkyNDk5NTg0",
      "title": "MsgDropRequest: msg no can be zero",
      "url": "https://github.com/Haivision/srt-rfc/pull/102",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Added note about possible zero-valued message number.",
      "createdAt": "2021-07-19T10:59:30Z",
      "updatedAt": "2021-07-19T14:05:48Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "8df642e6774787e9bc9d4ab00ee3a0b2e083f7d8",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/msg-drop-improve",
      "headRefOid": "87fb74713d266c2261a3e06b1ad2bd516333df0b",
      "closedAt": "2021-07-19T14:05:46Z",
      "mergedAt": "2021-07-19T14:05:46Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "3c2feebcb6cb27190650f89d3069d283fcd7e105"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA5NTcxNjgx",
          "commit": {
            "abbreviatedOid": "1112068"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-19T13:50:13Z",
          "updatedAt": "2021-07-19T13:50:14Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nwhen a retransmission of an unacknowledged packet (forming a whole or a part\r\nof a message) which is not present in the sender's buffer is requested.\r\nThis may happen, for example, when a TTL parameter (passed in the sending function) triggers a\r\ntimeout for retransmitting one or more lost packets which constitute parts of a message, causing\r\nthese packets to be removed from the sender's buffer.\r\n```",
              "createdAt": "2021-07-19T13:50:13Z",
              "updatedAt": "2021-07-19T13:50:14Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzA5NTc3MDk1",
          "commit": {
            "abbreviatedOid": "1112068"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Minor edits. ",
          "createdAt": "2021-07-19T13:54:51Z",
          "updatedAt": "2021-07-19T13:55:36Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nA Message Drop Request contains the message number and corresponding range of packet sequence numbers\r\nwhich form the whole message. If the sender does not already have in its buffer the specific packet or packets for \r\nwhich retransmission was requested, then it is unable to restore the message number. In this case the Message \r\nNumber field must be set to zero, and the receiver should drop packets in the provided packet sequence number range.\r\n```",
              "createdAt": "2021-07-19T13:54:51Z",
              "updatedAt": "2021-07-19T13:55:36Z"
            }
          ]
        }
      ]
    },
    {
      "number": 103,
      "id": "MDExOlB1bGxSZXF1ZXN0Njk0MTQzMDg0",
      "title": "Added Nikos notes regarding network aware encoding and connection migration",
      "url": "https://github.com/Haivision/srt-rfc/pull/103",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-07-21T08:02:05Z",
      "updatedAt": "2021-07-21T16:16:11Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "3c2feebcb6cb27190650f89d3069d283fcd7e105",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/edits-from-nikos",
      "headRefOid": "f91d23e5d7d5783744aae9d64fea8801885227dc",
      "closedAt": "2021-07-21T16:16:08Z",
      "mergedAt": "2021-07-21T16:16:08Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "9809806e26d65df94966a0afc3725a176c328489"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzExNzA3OTk2",
          "commit": {
            "abbreviatedOid": "9566e95"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-21T14:13:39Z",
          "updatedAt": "2021-07-21T14:13:39Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nIt is worth mentioning that in a live streaming scenario it may be beneficial to move congestion control mechanisms outside of the protocol \r\ntowards the encoder (payload producer), implementing a network adaptive encoding based on the telemetry provided \r\nby the SRT and QUIC protocols.\r\n```",
              "createdAt": "2021-07-21T14:13:39Z",
              "updatedAt": "2021-07-21T14:13:40Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzExNzA5NTIw",
          "commit": {
            "abbreviatedOid": "9566e95"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-21T14:14:55Z",
          "updatedAt": "2021-07-21T14:14:56Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nSRT uses ACK/ACKACK packet pairs to measure RTT on a link, and to track latency and clock drift.\r\nIt also uses packet pair probing to estimate connection bandwidth, although in live configurations\r\nsuch estimates are informative only.\r\n```",
              "createdAt": "2021-07-21T14:14:55Z",
              "updatedAt": "2021-07-21T14:14:56Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzExNzEwNDk5",
          "commit": {
            "abbreviatedOid": "9566e95"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-21T14:15:43Z",
          "updatedAt": "2021-07-21T14:15:43Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nBuffering and pacing of SRT packets by QUIC SHOULD be done with the understanding that this would interfere with the corresponding SRT mechanisms.\r\n```",
              "createdAt": "2021-07-21T14:15:43Z",
              "updatedAt": "2021-07-21T14:15:43Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzExNzEyMzU5",
          "commit": {
            "abbreviatedOid": "9566e95"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-21T14:17:19Z",
          "updatedAt": "2021-07-21T14:17:19Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nAlternatively, SRT may implement a pacer on top of QUIC\u2019s congestion control and probing mechanisms to abstract the complexity associated with live streaming use cases.\r\n```",
              "createdAt": "2021-07-21T14:17:19Z",
              "updatedAt": "2021-07-21T14:17:51Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzExNzE0Mjk2",
          "commit": {
            "abbreviatedOid": "9566e95"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-21T14:18:54Z",
          "updatedAt": "2021-07-21T14:18:55Z",
          "comments": [
            {
              "originalPosition": 30,
              "body": "```suggestion\r\nQUIC utilizes Connection UUID to distinguish between connections (compared to the IP:Port scheme used by UDP and TCP).\r\nThis enables already established connections to be handed over seamlessly across network interfaces without requiring a new handshake/negotiation.\r\nSRT may expand on this to enable network bonded delivery workflows to switch between optimal transports without a latency hit.\r\n```",
              "createdAt": "2021-07-21T14:18:54Z",
              "updatedAt": "2021-07-21T14:18:55Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzExNzE1MDAy",
          "commit": {
            "abbreviatedOid": "9566e95"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Minor edits",
          "createdAt": "2021-07-21T14:19:28Z",
          "updatedAt": "2021-07-21T14:19:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 104,
      "id": "MDExOlB1bGxSZXF1ZXN0Njk1OTkyMjU3",
      "title": "Added a note on QUIC multiplexing",
      "url": "https://github.com/Haivision/srt-rfc/pull/104",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-07-23T14:38:45Z",
      "updatedAt": "2021-07-26T07:44:51Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "9809806e26d65df94966a0afc3725a176c328489",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/quic-mux",
      "headRefOid": "32c28277712b85cb08d356f8e160100e3fe72c8a",
      "closedAt": "2021-07-26T07:44:48Z",
      "mergedAt": "2021-07-26T07:44:48Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "91c468c113dc1efd06b82784b8eb54daebfed10d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEzNzk5MzA2",
          "commit": {
            "abbreviatedOid": "1d2e569"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-23T14:41:39Z",
          "updatedAt": "2021-07-23T14:41:39Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nunreliable datagrams over a QUIC connection, but transfers the responsibility for multiplexing different kinds\r\nof datagrams, or flows of datagrams, to an application protocol.\r\n```",
              "createdAt": "2021-07-23T14:41:39Z",
              "updatedAt": "2021-07-23T14:41:39Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEzODAxNTIz",
          "commit": {
            "abbreviatedOid": "1d2e569"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-23T14:43:58Z",
          "updatedAt": "2021-07-23T14:43:59Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nSRT provides loss recovery and stream multiplexing mechanisms.\r\nIn its live streaming configuration SRT provides an end-to-end latency-aware mechanism for packet loss recovery.\r\n```",
              "createdAt": "2021-07-23T14:43:58Z",
              "updatedAt": "2021-07-23T14:43:59Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEzODA0ODI1",
          "commit": {
            "abbreviatedOid": "1d2e569"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-07-23T14:47:17Z",
          "updatedAt": "2021-07-23T14:47:17Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\nThis mechanism is exactly what QUIC DATAGRAM describes as a responsibility of the application protocol.\r\n```",
              "createdAt": "2021-07-23T14:47:17Z",
              "updatedAt": "2021-07-23T14:47:17Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzEzODA0OTk2",
          "commit": {
            "abbreviatedOid": "1d2e569"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Minor edits",
          "createdAt": "2021-07-23T14:47:28Z",
          "updatedAt": "2021-07-23T14:47:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 109,
      "id": "MDExOlB1bGxSZXF1ZXN0NzI2ODA3NjUx",
      "title": "Improvements for draft-sharabayko-srt-01",
      "url": "https://github.com/Haivision/srt-rfc/pull/109",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "mbakholdina"
      ],
      "labels": [],
      "body": "Changelog since draft-sharabayko-srt-00:\r\n- Message Drop Request control packet: added note about possible zero-valued message number.\r\n- Corrected an error in the formula for NAKInterval: changed min to max.\r\n- Added a note in \"Best Practices and Configuration Tips for Data Transmission via SRT\" section that Periodic NAK reports must be enabled in the case of live streaming.\r\n- Introduces the value of TLPKTDROP_THRESHOLD for Too-Late Packet Drop mechanism.\r\n- Improved the description of general syntax for SRT Access Control.\r\n- Updated the list of contributors.\r\n- Overall corrections throughout the document.",
      "createdAt": "2021-09-03T13:23:17Z",
      "updatedAt": "2021-09-06T17:39:00Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "91c468c113dc1efd06b82784b8eb54daebfed10d",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "mbakholdina/improvements-for-v01",
      "headRefOid": "62018835b201a6cfe445da570c8b3f00fe104e54",
      "closedAt": "2021-09-06T17:39:00Z",
      "mergedAt": "2021-09-06T17:38:59Z",
      "mergedBy": "mbakholdina",
      "mergeCommit": {
        "oid": "47d2775ad52e8b5339391c91c7c4a78dc7ff04c1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ2MjM2MjA4",
          "commit": {
            "abbreviatedOid": "92c55fc"
          },
          "author": "cmollahan",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Minor edits.",
          "createdAt": "2021-09-03T15:25:25Z",
          "updatedAt": "2021-09-03T15:54:57Z",
          "comments": [
            {
              "originalPosition": 120,
              "body": "```suggestion\r\nTLPKTDROP_THRESHOLD is related to SRT latency ({{srt-latency}}). For the Too-Late Packet Drop mechanism to function effectively, it is recommended that a value higher than the SRT latency is used.\r\nThis will allow the SRT receiver to drop missing packets first while the sender drops packets if a proper response is not received from the peer in time (e.g., due to severe congestion).\r\nThe recommended threshold value is 1.25 times the SRT latency value.\r\n```",
              "createdAt": "2021-09-03T15:25:26Z",
              "updatedAt": "2021-09-03T15:54:57Z"
            },
            {
              "originalPosition": 222,
              "body": "```suggestion\r\nEverything that comes after a syntax identifier is further referenced as the content of the Stream ID.\r\n```",
              "createdAt": "2021-09-03T15:30:51Z",
              "updatedAt": "2021-09-03T15:54:57Z"
            },
            {
              "originalPosition": 224,
              "body": "```suggestion\r\nThe content starts with a `:` or `{` character identifying its format:\r\n```",
              "createdAt": "2021-09-03T15:31:28Z",
              "updatedAt": "2021-09-03T15:54:57Z"
            },
            {
              "originalPosition": 228,
              "body": "```suggestion\r\n: a comma-separated key-value pair with no nesting,\r\n```",
              "createdAt": "2021-09-03T15:31:55Z",
              "updatedAt": "2021-09-03T15:54:57Z"
            },
            {
              "originalPosition": 234,
              "body": "```suggestion\r\n: a nested block with one or several key-value pairs that must end with a `}` character. Nesting means that multiple level brace-enclosed parts are allowed.\r\n```",
              "createdAt": "2021-09-03T15:37:13Z",
              "updatedAt": "2021-09-03T15:54:57Z"
            },
            {
              "originalPosition": 107,
              "body": "```suggestion\r\nWhen the TLPKTDROP mechanism is enabled, a packet is considered \"too late\" to be\r\ndelivered and may be dropped by the sender if the packet timestamp is older than\r\nTLPKTDROP_THRESHOLD.\r\n```",
              "createdAt": "2021-09-03T15:40:52Z",
              "updatedAt": "2021-09-03T15:54:57Z"
            },
            {
              "originalPosition": 125,
              "body": "```suggestion\r\nNote that the SRT sender keeps packets for at least 1 second in case the\r\nlatency is not high enough for a large RTT (that is, if TLPKTDROP_THRESHOLD is less \r\n```",
              "createdAt": "2021-09-03T15:49:06Z",
              "updatedAt": "2021-09-03T15:54:57Z"
            },
            {
              "originalPosition": 154,
              "body": "```suggestion\r\nThe TLPKTDROP mechanism can be turned off to always ensure a clean\r\ndelivery. However, a lost packet can simply pause a delivery for some\r\nlonger, potentially undefined time, and cause even worse tearing\r\nfor the player. Setting SRT latency higher will help much more in the event that TLPKTDROP causes packet drops too often.\r\n\r\n```",
              "createdAt": "2021-09-03T15:51:54Z",
              "updatedAt": "2021-09-03T15:54:57Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ3MTY5MTQy",
          "commit": {
            "abbreviatedOid": "92c55fc"
          },
          "author": "mbakholdina",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-06T12:27:41Z",
          "updatedAt": "2021-09-06T12:27:41Z",
          "comments": [
            {
              "originalPosition": 228,
              "body": "@cmollahan Perhaps,\r\n\r\n> comma-separated key-value pairs with no nesting,\r\n\r\nbecause it can be one or several pairs in the following format\r\n`key1=value1,key2=value2,...`?",
              "createdAt": "2021-09-06T12:27:41Z",
              "updatedAt": "2021-09-06T12:27:41Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ3MzQ1NzMy",
          "commit": {
            "abbreviatedOid": "46fc899"
          },
          "author": "cmollahan",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-06T16:16:14Z",
          "updatedAt": "2021-09-06T16:16:14Z",
          "comments": [
            {
              "originalPosition": 228,
              "body": "Yes, that sounds good. I would just remove the 'a' at the beginning of the line.",
              "createdAt": "2021-09-06T16:16:14Z",
              "updatedAt": "2021-09-06T16:16:14Z"
            }
          ]
        }
      ]
    },
    {
      "number": 110,
      "id": "MDExOlB1bGxSZXF1ZXN0NzI4NDU2OTY5",
      "title": "Fixed misprint in changelog for draft-sharabayko-srt v01",
      "url": "https://github.com/Haivision/srt-rfc/pull/110",
      "state": "MERGED",
      "author": "mbakholdina",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-09-07T09:12:14Z",
      "updatedAt": "2021-09-07T09:12:51Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "47d2775ad52e8b5339391c91c7c4a78dc7ff04c1",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "mbakholdina/v01-fixed-misprint",
      "headRefOid": "e89c6a6ffce15b800b2d456bbf2efe25fd4bee4b",
      "closedAt": "2021-09-07T09:12:40Z",
      "mergedAt": "2021-09-07T09:12:40Z",
      "mergedBy": "mbakholdina",
      "mergeCommit": {
        "oid": "c793d9664e214c8eaa134cae1130bccda5435d23"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 113,
      "id": "PR_kwDODP9tMM49Yi-r",
      "title": "Described KM error",
      "url": "https://github.com/Haivision/srt-rfc/pull/113",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-08-18T10:58:30Z",
      "updatedAt": "2022-09-13T17:23:50Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "master",
      "baseRefOid": "8ffd2d50ed10124e240bcde555981be1b9a24ee3",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/km-error",
      "headRefOid": "995b4bdc8d09eaef3de30dda2310fb74b46c44c9",
      "closedAt": "2022-09-13T17:23:47Z",
      "mergedAt": "2022-09-13T17:23:47Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "96bbe6fa0d0913bd43541632c30e50876752005f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODP9tMM5AOFrA",
          "commit": {
            "abbreviatedOid": "50c0535"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-18T14:12:27Z",
          "updatedAt": "2022-08-18T14:12:27Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "```suggestion\r\nNOTE: In the descriptions below, \"peer\" refers to the remote SRT side sending the KM response, and \"agent\" refers to the local side interpreting the KM response.\r\n\r\n- 0: unsecured (the peer will encrypt the payload, while the agent has not declared any encryption),\r\n- 3: no secret (the peer does not have the key to decrypt the incoming payload),\r\n- 4: bad secret (the peer has the wrong key and can't decrypt the incoming payload),\r\n- 5: bad crypto mode (the peer expects to use a different cryptographic mode). Since protocol v1.6.\r\n\r\n\r\n```",
              "createdAt": "2022-08-18T14:12:27Z",
              "updatedAt": "2022-08-18T14:12:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5AOF6b",
          "commit": {
            "abbreviatedOid": "50c0535"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-18T14:12:52Z",
          "updatedAt": "2022-08-18T14:12:53Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nIn case of SRT_CMD_KMRSP the Extension Length value can be equal to 1 (meaning 4 bytes).\r\n```",
              "createdAt": "2022-08-18T14:12:52Z",
              "updatedAt": "2022-08-18T14:12:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5AOGQi",
          "commit": {
            "abbreviatedOid": "50c0535"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Minor edits.",
          "createdAt": "2022-08-18T14:13:30Z",
          "updatedAt": "2022-08-18T14:13:30Z",
          "comments": []
        }
      ]
    },
    {
      "number": 114,
      "id": "PR_kwDODP9tMM5A6E__",
      "title": "Use GitHub action instead of TravisCI",
      "url": "https://github.com/Haivision/srt-rfc/pull/114",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The latest I-D template version uses GitHub Action instead of Travis CI. Furthermore, our Travis CI build keeps failing.\r\nReplacing it with GitHub Action.",
      "createdAt": "2022-10-17T08:37:42Z",
      "updatedAt": "2022-10-21T13:20:31Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "main",
      "baseRefOid": "07a2dfe9a1789fc9655d034ef3638cb9033752ef",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "develop/use-github-action",
      "headRefOid": "e111b46c97d31f700bef4db4977ddccea06d4e38",
      "closedAt": "2022-10-21T13:20:28Z",
      "mergedAt": "2022-10-21T13:20:28Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "eb1dee2650c0cf731f75baab2299d2aaaf140912"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 115,
      "id": "PR_kwDODP9tMM5A7_XN",
      "title": "KM message now supports AES-GCM.",
      "url": "https://github.com/Haivision/srt-rfc/pull/115",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-10-17T14:45:27Z",
      "updatedAt": "2022-10-18T09:07:50Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "main",
      "baseRefOid": "27cd9ea678f24ca1226752c60095d5f1bab3d2c0",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/km-aes-gcm",
      "headRefOid": "e33c3870cb73f9454bdbac6190b4642c2f81bad1",
      "closedAt": "2022-10-18T09:07:47Z",
      "mergedAt": "2022-10-18T09:07:46Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "07a2dfe9a1789fc9655d034ef3638cb9033752ef"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 116,
      "id": "PR_kwDODP9tMM5BHpFr",
      "title": "Improving the HS negotiation description.",
      "url": "https://github.com/Haivision/srt-rfc/pull/116",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-10-19T15:25:36Z",
      "updatedAt": "2023-07-03T15:17:18Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "main",
      "baseRefOid": "f6c937a249030906404c554885403650b4afd43a",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "maxsharabayko/handshake",
      "headRefOid": "178283ff747a7a6af9747f53c2df2048eb750ad8",
      "closedAt": "2023-07-03T15:17:14Z",
      "mergedAt": "2023-07-03T15:17:14Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "8720285b5adb0b46d0276e3a39ec35b04db78854"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDODP9tMM5TnWe1",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:07:21Z",
          "updatedAt": "2023-04-26T21:07:22Z",
          "comments": [
            {
              "originalPosition": 77,
              "body": "```suggestion\r\nThe Type-specific Information field is unused in the case of the HS message.\r\n```",
              "createdAt": "2023-04-26T21:07:21Z",
              "updatedAt": "2023-04-26T21:07:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5TnWti",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:08:02Z",
          "updatedAt": "2023-04-26T21:08:03Z",
          "comments": [
            {
              "originalPosition": 103,
              "body": "```suggestion\r\n  described in {{handshake-encr-fld}}. The default value is 0 (no encryption advertised).\r\n```",
              "createdAt": "2023-04-26T21:08:02Z",
              "updatedAt": "2023-04-26T21:08:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5TnXB2",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:09:13Z",
          "updatedAt": "2023-04-26T21:09:14Z",
          "comments": [
            {
              "originalPosition": 104,
              "body": "```suggestion\r\n  If neither peer advertises encryption, AES-128 is selected by default (see {{handshake-messages}}).\r\n```",
              "createdAt": "2023-04-26T21:09:13Z",
              "updatedAt": "2023-04-26T21:09:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5TnXVa",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:10:15Z",
          "updatedAt": "2023-04-26T21:10:15Z",
          "comments": [
            {
              "originalPosition": 302,
              "body": "```suggestion\r\nSRT versions prior to v1.3.0 use version 4 of the handshaking procedure.\r\n```",
              "createdAt": "2023-04-26T21:10:15Z",
              "updatedAt": "2023-04-26T21:10:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5TnXxH",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:11:45Z",
          "updatedAt": "2023-04-26T21:11:45Z",
          "comments": [
            {
              "originalPosition": 305,
              "body": "```suggestion\r\nHS version 5 is used starting from SRT v1.3.0. \r\nHS version 4 is not described in this specification.\r\nSRT implementations MUST support HS version 5, but MAY not support HS v4.\r\n```",
              "createdAt": "2023-04-26T21:11:45Z",
              "updatedAt": "2023-04-26T21:11:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5TnaGo",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:20:35Z",
          "updatedAt": "2023-04-26T21:20:35Z",
          "comments": [
            {
              "originalPosition": 430,
              "body": "```suggestion\r\nas covered below. \r\n```",
              "createdAt": "2023-04-26T21:20:35Z",
              "updatedAt": "2023-04-26T21:20:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5TnarJ",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:22:56Z",
          "updatedAt": "2023-04-26T21:22:56Z",
          "comments": [
            {
              "originalPosition": 431,
              "body": "`The procedure is deprecated and is not covered here.`\r\n\r\nIs there a description in a previous version of the draft to which we can refer the reader? ",
              "createdAt": "2023-04-26T21:22:56Z",
              "updatedAt": "2023-04-26T21:22:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5TnbGA",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:24:32Z",
          "updatedAt": "2023-04-26T21:24:32Z",
          "comments": [
            {
              "originalPosition": 439,
              "body": "`In this case there is nothing to send to the SRT listener, as there is no\r\nconnection established at this point.`\r\n\r\nDuplicate of text in lines 1598-1599",
              "createdAt": "2023-04-26T21:24:32Z",
              "updatedAt": "2023-04-26T21:24:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5Tnber",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:26:01Z",
          "updatedAt": "2023-04-26T21:26:02Z",
          "comments": [
            {
              "originalPosition": 446,
              "body": "```suggestion\r\nIf the Encryption Flag field is set to 0 (not advertised), the caller MAY advertise its own cipher and key length.\r\nIf the induction response already advertises a certain value in the Encryption Flag, the caller MAY accept it or force its own value.\r\nIt is RECOMMENDED that if a caller will be sending the content, then it SHOULD force its own value. If it expects to receive content from the\r\nSRT listener, then is it RECOMMENDED that it accepts the value advertised in the Encryption Flag field.\r\n```",
              "createdAt": "2023-04-26T21:26:02Z",
              "updatedAt": "2023-04-26T21:26:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5TncqL",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:30:37Z",
          "updatedAt": "2023-04-26T21:30:37Z",
          "comments": [
            {
              "originalPosition": 449,
              "body": "```suggestion\r\nAn alternative behavior MAY be for a caller to take the longer key length in such cases.\r\n```",
              "createdAt": "2023-04-26T21:30:37Z",
              "updatedAt": "2023-04-26T21:30:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5Tnc0D",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:31:12Z",
          "updatedAt": "2023-04-26T21:31:12Z",
          "comments": [
            {
              "originalPosition": 473,
              "body": "```suggestion\r\n- SYN Cookie: the Listener's cookie from the induction response.\r\n```",
              "createdAt": "2023-04-26T21:31:12Z",
              "updatedAt": "2023-04-26T21:31:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5TndGR",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:32:18Z",
          "updatedAt": "2023-04-26T21:32:19Z",
          "comments": [
            {
              "originalPosition": 481,
              "body": "```suggestion\r\nThe SRT Listener receives the conclusion request.\r\nIf the values of the conclusion request are in any way NOT acceptable on the SRT Listener side, the connection MUST\r\n```",
              "createdAt": "2023-04-26T21:32:19Z",
              "updatedAt": "2023-04-26T21:32:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5TndiW",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:34:12Z",
          "updatedAt": "2023-04-26T21:34:13Z",
          "comments": [
            {
              "originalPosition": 482,
              "body": "```suggestion\r\nbe rejected by sending a conclusion response with the Handshake Type field carrying the rejection reason ({{hs-rej-reason}}).\r\n```\r\n\r\nNOTE: There seems to be some inconsistency in the use of initial caps for such terms as Caller, Listener, Conclusion Response, Cipher Family, Block Size, and others.",
              "createdAt": "2023-04-26T21:34:12Z",
              "updatedAt": "2023-04-26T21:34:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5Tnd8R",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:35:51Z",
          "updatedAt": "2023-04-26T21:35:52Z",
          "comments": [
            {
              "originalPosition": 510,
              "body": "```suggestion\r\nThe states of a party are Waving (\"Wave A Hand\"), Conclusion and Agreement.\r\n```",
              "createdAt": "2023-04-26T21:35:52Z",
              "updatedAt": "2023-04-26T21:35:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5Tne1V",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:37:56Z",
          "updatedAt": "2023-04-26T21:37:57Z",
          "comments": [
            {
              "originalPosition": 549,
              "body": "```suggestion\r\nIn the Waving state, the parties wishing to connect -- Bob and Alice -- each send a WAVEAHAND handshake packet\r\n```",
              "createdAt": "2023-04-26T21:37:56Z",
              "updatedAt": "2023-04-26T21:39:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5TnfCM",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:38:32Z",
          "updatedAt": "2023-04-26T21:38:32Z",
          "comments": [
            {
              "originalPosition": 561,
              "body": "```suggestion\r\nThe parties only continue with the HS Version 5 Rendezvous process when HS Version is set to 5\r\n```",
              "createdAt": "2023-04-26T21:38:32Z",
              "updatedAt": "2023-04-26T21:38:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5TnfG9",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:38:52Z",
          "updatedAt": "2023-04-26T21:38:53Z",
          "comments": [
            {
              "originalPosition": 562,
              "body": "```suggestion\r\nfor both. Otherwise the process continues exclusively according to HS Version 4 rules {{GHG04b}}.\r\n```",
              "createdAt": "2023-04-26T21:38:52Z",
              "updatedAt": "2023-04-26T21:38:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5TngCg",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:42:56Z",
          "updatedAt": "2023-04-26T21:42:57Z",
          "comments": [
            {
              "originalPosition": 586,
              "body": "This sentence is unclear to me. Maybe\r\n\r\n```suggestion\r\nIf a WAVEAHAND packet is received from the peer during a CONCLUSION handshake, the state is transitioned to the Attention state.\r\n```\r\n",
              "createdAt": "2023-04-26T21:42:56Z",
              "updatedAt": "2023-04-26T21:55:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5Tnglh",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:45:21Z",
          "updatedAt": "2023-04-26T21:45:22Z",
          "comments": [
            {
              "originalPosition": 594,
              "body": "```suggestion\r\nIn the Conclusion state each peer has received and now knows the other's cookie value.\r\nThus each peer can perform the Cookie Contest operation\r\n(compare both cookie values according to {{cookie-contest}})\r\nand thereby determine its role.\r\nThe determination of the Handshake Role (Initiator or Responder) is essential for further processing.\r\n```",
              "createdAt": "2023-04-26T21:45:21Z",
              "updatedAt": "2023-04-26T21:45:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5Tngxy",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:46:14Z",
          "updatedAt": "2023-04-26T21:46:15Z",
          "comments": [
            {
              "originalPosition": 608,
              "body": "```suggestion\r\nIf encryption is on, the Initiator (Bob) will use either his\r\nown cipher family and block size or the one received from Alice (if she has advertised\r\nthose values).\r\n```",
              "createdAt": "2023-04-26T21:46:14Z",
              "updatedAt": "2023-04-26T21:46:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5TnhOj",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:48:21Z",
          "updatedAt": "2023-04-26T21:48:21Z",
          "comments": [
            {
              "originalPosition": 610,
              "body": "This sentence is unclear and does not seem to sensibly follow from preceding lines 1753-1755.",
              "createdAt": "2023-04-26T21:48:21Z",
              "updatedAt": "2023-04-26T21:48:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5Tnhmw",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:50:05Z",
          "updatedAt": "2023-04-26T21:50:06Z",
          "comments": [
            {
              "originalPosition": 635,
              "body": "```suggestion\r\nAlice receives Bob's CONCLUSION message. While at this point she also\r\n   performs the \"cookie contest\" operation, the outcome will be the same. She switches to the\r\n   \"fine\" state, and sends:\r\n   - Version: 5\r\n   - Appropriate extension flags and encryption flags\r\n   - Handshake Type: CONCLUSION\r\n\r\n   Both parties always send extension flags at this point, which will\r\n   contain HSREQ if the message comes from an Initiator, or\r\n   HSRSP if it comes from a Responder. If the Initiator has received a\r\n   previous message from the Responder containing an advertised cipher family and block size in the\r\n   encryption flags field, it will be used as the key length\r\n   for key generation sent next in the KMREQ extension.\r\n```",
              "createdAt": "2023-04-26T21:50:05Z",
              "updatedAt": "2023-04-26T21:50:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5Tnhr1",
          "commit": {
            "abbreviatedOid": "15353be"
          },
          "author": "stevomatthews",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-04-26T21:50:27Z",
          "updatedAt": "2023-04-26T21:50:27Z",
          "comments": [
            {
              "originalPosition": 643,
              "body": "```suggestion\r\n- Improved handshake negotiation description.\r\n```",
              "createdAt": "2023-04-26T21:50:27Z",
              "updatedAt": "2023-04-26T21:50:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDODP9tMM5WwzbZ",
          "commit": {
            "abbreviatedOid": "36e9902"
          },
          "author": "maxsharabayko",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-06-01T14:34:20Z",
          "updatedAt": "2023-06-01T14:36:05Z",
          "comments": [
            {
              "originalPosition": 431,
              "body": "There is no description of the HSv4 in this draft. There is however the corresponding description here: https://github.com/Haivision/srt/blob/master/docs/features/handshake.md\r\nI am not sure if referencing it from the Internet Draft is ok. In general, I would abandon HSv4, it's been more than 5 years since HSv5 is there.",
              "createdAt": "2023-06-01T14:34:20Z",
              "updatedAt": "2023-06-01T14:36:05Z"
            },
            {
              "originalPosition": 439,
              "body": "- [ ] To be removed.",
              "createdAt": "2023-06-01T14:34:55Z",
              "updatedAt": "2023-06-01T14:36:05Z"
            },
            {
              "originalPosition": 610,
              "body": "```suggestion\r\nThe Responder responds  with a Conclusion or a WAVEAHAND handshake without extensions until it receives the Conclusion Request from the peer:\r\n```",
              "createdAt": "2023-06-01T14:35:53Z",
              "updatedAt": "2023-06-01T14:36:05Z"
            }
          ]
        }
      ]
    },
    {
      "number": 117,
      "id": "PR_kwDODP9tMM5L4OgH",
      "title": "Clarify that sequence numbers are 31 bits only",
      "url": "https://github.com/Haivision/srt-rfc/pull/117",
      "state": "MERGED",
      "author": "sthilden",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Sequence numbers are only 31 bits. Add clarifications to handshake, ack, and drop request packet descriptions to make this clearer.",
      "createdAt": "2023-03-13T10:23:12Z",
      "updatedAt": "2023-03-31T07:08:42Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "main",
      "baseRefOid": "f6c937a249030906404c554885403650b4afd43a",
      "headRepository": "sthilden/srt-rfc",
      "headRefName": "seqnum-31-bits-clarify",
      "headRefOid": "5a8dbee2a36e1708e9a4e079e0e0037a983c9220",
      "closedAt": "2023-03-31T07:08:42Z",
      "mergedAt": "2023-03-31T07:08:42Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "30c5b291d0edba76b3f76cc2adbeb41ab661627d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 119,
      "id": "PR_kwDODP9tMM5OvyDm",
      "title": "Add units to some parameter descriptions in handshake",
      "url": "https://github.com/Haivision/srt-rfc/pull/119",
      "state": "MERGED",
      "author": "sthilden",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This adds a few units to descriptions in the handshake packet, just as clarifications and to increase readability.",
      "createdAt": "2023-04-20T09:08:54Z",
      "updatedAt": "2023-04-24T10:43:39Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "main",
      "baseRefOid": "0349ebde846542dde9d302ed00a06be2208e7a1e",
      "headRepository": "sthilden/srt-rfc",
      "headRefName": "units-descriptions",
      "headRefOid": "5e8895f7d26c45530c4f8fe6f5c3478190f17e32",
      "closedAt": "2023-04-24T10:43:39Z",
      "mergedAt": "2023-04-24T10:43:39Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "6c5eb0aea905ae8a7fb30db2f928ee40839c2e28"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 122,
      "id": "PR_kwDODP9tMM5VL37d",
      "title": "Lint fixes",
      "url": "https://github.com/Haivision/srt-rfc/pull/122",
      "state": "MERGED",
      "author": "maxsharabayko",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-11T10:25:56Z",
      "updatedAt": "2023-07-11T10:30:34Z",
      "baseRepository": "Haivision/srt-rfc",
      "baseRefName": "main",
      "baseRefOid": "8720285b5adb0b46d0276e3a39ec35b04db78854",
      "headRepository": "Haivision/srt-rfc",
      "headRefName": "hotfix/lint",
      "headRefOid": "e5165175b4047dac77813e6a7a6d56b3cb9888af",
      "closedAt": "2023-07-11T10:30:31Z",
      "mergedAt": "2023-07-11T10:30:31Z",
      "mergedBy": "maxsharabayko",
      "mergeCommit": {
        "oid": "a0b05999cdfb1d86c7cf20e4c6269fce0b9bd5c0"
      },
      "comments": [],
      "reviews": []
    }
  ]
}